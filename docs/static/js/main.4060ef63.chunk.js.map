{"version":3,"sources":["AppList.js","MenuBar.js","containers/SketchContainer.js","sketches/chainball/p5_chainball.js","sketches/chainball/controls/BallCountSlider.js","sketches/chainball/controls/LinkDampingSlider.js","sketches/chainball/controls/LinkLengthSlider.js","sketches/chainball/controls/LinkTensionSlider.js","sketches/chainball/controls/ModeRadioButtons.js","sketches/chainball/ChainballSidebar.js","sketches/chainball/ChainballApp.js","sketches/orbiter/p5_orbiter.js","sketches/orbiter/OrbiterSidebar.js","sketches/orbiter/OrbiterApp.js","AppMap.js","Vixuals.js","VixualsRouter.js","index.js"],"names":["AppList","className","role","onClick","this","props","toggleDrawer","List","Array","from","apps","values","map","app","ListItem","button","key","name","setSelectedApp","ListItemText","primary","displayName","React","Component","MenuBar","state","drawerIsOpen","bind","newValue","event","type","setState","AppBar","position","Toolbar","variant","IconButton","edge","Drawer","open","onClose","Typography","selectedApp","version","description","appName","appVersion","SketchContainer","p5Sketch","other","sketch","chainball","p","core","frameRateCallback","velocityArrow","accelerationArrow","linkingLine","didSetup","balls","frameRates","displayFrameRate","Modes","currentMode","defaultFollowDistance","tension","damping","setup","w","select","width","h","height","createCanvas","colorMode","HSB","angleMode","DEGREES","frameRate","radius","createVector","velocity","acceleration","minColor","color","maxColor","isBeingDragged","i","followDist","pos","copy","console","log","length","push","followDistance","minCompressionColor","maxCompressionColor","minTensionColor","maxTensionColor","staticColor","draw","background","mouseVector","mouseX","mouseY","mouseIsOverCanvas","thisBall","parentBall","strokeWeight","stroke","targetDistance","realDistance","p5","Vector","sub","mag","RGB","lerpColor","reRange","line","x","y","pop","ball","fill","circle","startPosition","add","setMag","vector","limit","forceIsBeingApplied","dist","accelerationArrowColor","drawArrow","mult","velocityArrowColor","frameCount","shift","reduce","sum","num","toFixed","rebound","toParent","windowResized","mousePressed","mouseReleased","keyTyped","setBallCount","newLength","removeBalls","addBalls","count","modifyFollowDistance","delta","forEach","setFollowDistance","newDist","fromVector","toVector","arrowColor","translate","rotate","heading","triangle","arrowSize","in_min","in_max","out_min","out_max","myCustomRedrawAccordingToNewPropsHandler","newProps","mode","ballCount","linkLength","linkTension","linkDamping","onFrameRateChange","BallCountSlider","handleBallCountChange","onBallCountChange","Slider","defaultValue","value","onChange","min","max","step","aria-labelledby","valueLabelDisplay","id","gutterBottom","LinkDampingSlider","handleLinkDampingChange","onLinkDampingChange","getAriaValueText","getValueText","valueLabelFormat","marks","LinkLengthSlider","handleLinkLengthChange","onLinkLengthChange","LinkTensionSlider","handleLinkTensionChange","onLinkTensionChange","ModeRadioButtons","handleModeChange","onModeChange","target","FormControl","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","ChainballSidebar","Grid","container","spacing","direction","wrap","item","xs","Paper","elevation","ChainballApp","handleFrameRateChange","newFrameRateValue","alignItems","p5Chainball","orbiter","planetAngle","moonAngle","sunLocation","planetOrbitSpeedMod","moonOrbitSpeedMod","isSunBeingDragged","sunLocationOffset","sq","sunX","sunY","planetX","cos","planetY","sin","moonX","moonY","sunRadius","planetRadius","moonRadius","deltaTime","resizeCanvas","isMouseOverCircle","circleLoc","circleRadius","dx","abs","dy","sqrt","OrbiterSidebar","OrbiterApp","p5Orbiter","appMap","Map","component","Vixuals","handleSelectedAppChange","redirectLocation","shouldRedirect","to","match","params","defaultParam","get","withRouter","VixualsRouter","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4060ef63.chunk.js","sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport \"./AppList.css\"\nclass AppList extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div \n                className=\"AppList\"\n                role=\"presentation\"\n                onClick={this.props.toggleDrawer(false)}>\n                <List>\n                    {Array.from(this.props.apps.values()).map(app => (\n                        <ListItem button key={app.name} onClick={this.props.setSelectedApp(app.name)}>\n                            <ListItemText primary={app.displayName}/>\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        )\n    }\n}\n\nexport default AppList;","import React from 'react';\nimport \"./MenuBar.css\";\nimport { Typography, AppBar, Toolbar, IconButton, Drawer } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AppList from './AppList';\n\nclass MenuBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            drawerIsOpen: false\n        };\n\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n\n    toggleDrawer(newValue) {\n        return event => {\n            if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n                return;\n            }\n            this.setState({\n                drawerIsOpen: newValue\n            });\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"MenuBar\">\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\" className=\"Toolbar\">\n                        <IconButton edge=\"start\" onClick={this.toggleDrawer(true)}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Drawer open={this.state.drawerIsOpen} onClose={this.toggleDrawer(false)}>\n                            <AppList \n                                apps={this.props.apps}\n                                toggleDrawer={this.toggleDrawer}\n                                setSelectedApp={this.props.setSelectedApp}/>\n                        </Drawer>\n                        <Typography variant=\"h5\" className=\"SelectedName\">\n                            {this.props.selectedApp.displayName}\n                        </Typography>\n                        <Typography variant=\"body2\" className=\"SelectedVersion\">\n                            v{this.props.selectedApp.version}\n                        </Typography>\n                        <Typography variant=\"body1\" className=\"SelectedDescription Grow\">\n                            {this.props.selectedApp.description}\n                        </Typography>\n                        {/* <div className=\"Grow\" /> */}\n                        <Typography variant=\"body2\" className=\"AppInfo\">\n                            {`\n                            ${this.props.appName} \n                            v${this.props.appVersion}\n                            `}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default MenuBar;","import React from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport \"./SketchContainer.css\"\n\nclass SketchContainer extends React.Component {\n    render() {\n        const { p5Sketch, ...other } = this.props;\n        return (\n            <div className=\"SketchContainer\">\n                <P5Wrapper className=\"P5Wrapper\"\n                    sketch={p5Sketch}\n                    {...other}>\n                </P5Wrapper>\n            </div>\n        );\n    }\n}\n\nexport default SketchContainer;","import p5 from 'p5';\n\nlet chainball = (p) => {\n\n    let didSetup = false;\n\n    let core;\n    let balls = [];\n    let frameRates = [];\n    let displayFrameRate = 0;\n\n    const Modes = {\n        STATIC: \"static\",\n        DYNAMIC: \"dynamic\"\n    };\n\n    let currentMode = Modes.STATIC;\n\n    let frameRateCallback;\n\n    let ballCount = 5;\n    let environmentFriction = 0.9995;\n\n    let drawLines = true;\n\n    let defaultFollowDistance = 50;\n    let defaultBallRadius = 10;\n\n    let tension = 0.1;\n    let damping = 0.4;\n\n    let velocityArrow;\n    let accelerationArrow;\n    let linkingLine;\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n        // p.createCanvas(p.windowWidth, p.windowHeight);\n        // canvas.parent('Sketch');\n        // canvas.style('display', 'block');\n\n        p.colorMode(p.HSB);\n        p.angleMode(p.DEGREES);\n        p.frameRate(60);\n        // noCursor();\n\n        core = {\n            radius: 25,\n            position: p.createVector(p.width / 2, p.height / 2),\n            velocity: p.createVector(0, 0),\n            acceleration: p.createVector(0, 0),\n            minColor: p.color(240, 0, 100),\n            maxColor: p.color(240, 100, 100),\n            isBeingDragged: false\n        };\n\n        for (let i = 0; i < ballCount; i++) {\n            let followDist;\n            let pos;\n            if (i === 0) {\n                followDist = defaultFollowDistance + (core.radius - defaultBallRadius);\n                pos = core.position.copy();\n            } else {\n                followDist = defaultFollowDistance;\n                console.log(balls.length)\n                pos = balls[balls.length-1].position.copy();\n                console.log(pos)\n            }\n            balls.push({\n                radius: defaultBallRadius,\n                position: pos,\n                velocity: p.createVector(0, 0),\n                followDistance: followDist,\n                minColor: p.color(0, 0, 100),\n                maxColor: p.color(0, 100, 100)\n            });\n        }\n\n        velocityArrow = {\n            minColor: p.color(240, 25, 100),\n            maxColor: p.color(240, 100, 100)\n        };\n\n        accelerationArrow = {\n            minColor: p.color(0, 25, 100),\n            maxColor: p.color(0, 100, 100),\n        };\n\n        linkingLine = {\n            minCompressionColor: p.color(240, 0, 100, 0.5),\n            maxCompressionColor: p.color(240, 100, 100, 0.5),\n            minTensionColor: p.color(0, 0, 100, 0.5),\n            maxTensionColor: p.color(0, 100, 100, 0.5),\n            staticColor: p.color(0, 0, 100, 0.5)\n        };\n\n        didSetup = true;\n    };\n\n    p.draw = function () {\n        p.background(0);\n        let mouseVector = p.createVector(p.mouseX, p.mouseY);\n        let mouseIsOverCanvas =\n            p.mouseX > 0 && p.mouseX < p.width &&\n            p.mouseY > 0 && p.mouseY < p.height;\n\n        /* DRAWING */\n\n        // draw connecting lines\n        if (drawLines) {\n            for (let i = 0; i < balls.length; i++) {\n                let thisBall = balls[i];\n                let parentBall;\n                if (i === 0) {\n                    parentBall = core;\n                } else {\n                    parentBall = balls[i - 1];\n                }\n                p.push();\n                p.strokeWeight(5);\n                if (currentMode === Modes.STATIC) {\n                    p.stroke(linkingLine.staticColor);\n                } else {\n                    let targetDistance = thisBall.followDistance;\n                    let realDistance = p5.Vector.sub(\n                        parentBall.position,\n                        thisBall.position).mag();\n                    p.colorMode(p.RGB);\n                    if (targetDistance > realDistance) {\n                        p.stroke(p.lerpColor(\n                            linkingLine.minCompressionColor,\n                            linkingLine.maxCompressionColor,\n                            p.reRange(realDistance / targetDistance, 1, 0.5, 0, 1)));\n                    } else {\n                        p.stroke(p.lerpColor(\n                            linkingLine.minTensionColor,\n                            linkingLine.maxTensionColor,\n                            p.reRange(realDistance / targetDistance, 1, 4, 0, 1)));\n                    }\n                    p.colorMode(p.HSB);\n                }\n                p.line(thisBall.position.x, thisBall.position.y, parentBall.position.x, parentBall.position.y);\n                p.pop();\n            }\n        }\n\n        // draw the balls\n        for (let i=balls.length-1; i>=0; i--) {\n            let ball = balls[i];   \n            p.fill(ball.minColor);\n            p.circle(ball.position.x, ball.position.y, ball.radius * 2);\n        }\n        // balls.forEach(ball => {\n        //     p.fill(ball.minColor);\n        //     p.circle(ball.position.x, ball.position.y, ball.radius * 2);\n        // })\n\n        // draw the core\n        // colorMode(RGB);\n        p.fill(core.minColor);\n        // colorMode(HSB);\n        p.circle(core.position.x, core.position.y, core.radius * 2)\n\n        // draw force arrows\n        accelerationArrow.startPosition = p5.Vector.add(core.position, p5.Vector.sub(mouseVector, core.position).setMag(core.radius));\n        accelerationArrow.vector = p5.Vector.sub(mouseVector, accelerationArrow.startPosition);\n        accelerationArrow.vector.limit(200);\n\n        if (mouseIsOverCanvas && core.forceIsBeingApplied) {\n            if (mouseVector.dist(core.position) > core.radius) {\n                p.colorMode(p.RGB);\n                let accelerationArrowColor = p.lerpColor(\n                    accelerationArrow.minColor,\n                    accelerationArrow.maxColor,\n                    accelerationArrow.vector.mag() / 200);\n                p.colorMode(p.HSB);\n                p.drawArrow(\n                    accelerationArrow.startPosition,\n                    accelerationArrow.vector,\n                    accelerationArrowColor);\n            }\n        }\n\n        velocityArrow.startPosition = p5.Vector.add(core.position, core.velocity.copy().setMag(core.radius));\n        velocityArrow.vector = core.velocity.copy().mult(10);\n\n        if (core.velocity.mag() > 0.5) {\n            p.colorMode(p.RGB);\n            let velocityArrowColor = p.lerpColor(\n                velocityArrow.minColor,\n                velocityArrow.maxColor,\n                velocityArrow.vector.mag() / 250);\n            p.colorMode(p.HSB);\n            p.drawArrow(\n                velocityArrow.startPosition,\n                velocityArrow.vector,\n                velocityArrowColor);\n        }\n\n        // draw framerate\n        if (p.frameCount % 10 === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n        }\n        // $('#framerate').text(`FPS: ${displayFrameRate.toFixed(0)}`);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`fps: ${displayFrameRate.toFixed(0)}`, 5, 35);\n\n\n\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`ball count: ${balls.length}`, 5, 65);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`follow dist: ${defaultFollowDistance}`, 5, 95);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`size: ${p.windowWidth}x${p.windowHeight}`, 5, 125);\n        // $('#mode').text(`mode: ${currentMode}`);\n\n        /* UPDATING */\n\n        // update core\n        if (mouseIsOverCanvas && core.forceIsBeingApplied && mouseVector.dist(core.position) > core.radius) {\n            core.acceleration = p5.Vector.mult(accelerationArrow.vector, 0.0005);\n        } else {\n            core.acceleration = p.createVector(0, 0);\n        }\n\n        core.velocity.add(core.acceleration);\n        core.velocity.mult(environmentFriction);\n\n        core.position.add(core.velocity);\n        p.rebound(core);\n\n\n        // update balls\n        for (let i = 0; i < balls.length; i++) {\n            let thisBall = balls[i];\n            let parentBall;\n            if (i === 0) {\n                parentBall = core;\n            } else {\n                parentBall = balls[i - 1];\n            }\n\n            let toParent = p5.Vector.sub(parentBall.position, thisBall.position);\n            toParent.setMag(toParent.mag() - thisBall.followDistance);\n            if (currentMode === Modes.STATIC) {\n                thisBall.velocity.mult(environmentFriction);\n                thisBall.position.add(toParent);\n            } else {\n                // let goalPosition = p5.Vector.add(thisBall.position, toParent);\n                thisBall.acceleration = toParent.mult(tension);\n                thisBall.velocity.add(thisBall.acceleration);\n                thisBall.velocity.mult(1.0 - damping);\n                thisBall.position.add(thisBall.velocity);\n            }\n\n            p.rebound(thisBall);\n\n        }\n\n    };\n\n    p.windowResized = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n    };\n\n    p.mousePressed = function (event) {\n        core.forceIsBeingApplied = true;\n    };\n\n    p.mouseReleased = function (event) {\n        core.forceIsBeingApplied = false;\n    };\n\n    p.keyTyped = function () {\n    };\n\n    p.setBallCount = function (newLength) {\n        if (balls.length > newLength) {\n            p.removeBalls(balls.length - newLength);\n        } else if (balls.length < newLength) {\n            p.addBalls(newLength - balls.length);\n        }\n    }\n\n    p.addBalls = function (count) {\n        for (let i = 0; i < count; i++) {\n            balls.push({\n                radius: defaultBallRadius,\n                position: balls[balls.length-1].position.copy(),\n                velocity: p.createVector(0, 0),\n                followDistance: defaultFollowDistance,\n                minColor: p.color(0, 0, 100),\n                maxColor: p.color(0, 100, 100)\n            });\n        }\n    };\n\n    p.removeBalls = function (count) {\n        for (let i = 0; i < count && balls.length > 1; i++) {\n            balls.pop();\n        }\n    };\n\n    p.modifyFollowDistance = function (delta) {\n        if (defaultFollowDistance + delta >= 0) {\n            balls.forEach(ball => {\n                ball.followDistance += delta;\n            });\n            defaultFollowDistance += delta;\n        }\n    };\n\n    p.setFollowDistance = function (newDist) {\n        p.modifyFollowDistance(newDist - defaultFollowDistance);\n    };\n\n    p.rebound = function (ball) {\n        if (ball.position.x > p.width - ball.radius) {\n            ball.position.x = p.width - ball.radius;\n            ball.velocity.x *= -1;\n        }\n        if (ball.position.x < ball.radius) {\n            ball.position.x = ball.radius;\n            ball.velocity.x *= -1;\n        }\n        if (ball.position.y > p.height - ball.radius) {\n            ball.position.y = p.height - ball.radius;\n            ball.velocity.y *= -1;\n        }\n        if (ball.position.y < ball.radius) {\n            ball.position.y = ball.radius;\n            ball.velocity.y *= -1;\n        }\n    };\n\n    p.drawArrow = function (fromVector, toVector, arrowColor) {\n        p.push();\n        p.stroke(arrowColor);\n        p.strokeWeight(2);\n        p.fill(arrowColor);\n        p.translate(fromVector.x, fromVector.y);\n        p.line(0, 0, toVector.x, toVector.y);\n        p.rotate(toVector.heading());\n        let arrowSize = 3;\n        p.translate(toVector.mag() - arrowSize, 0);\n        p.triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n        p.pop();\n    };\n\n    p.reRange = function (num, in_min, in_max, out_min, out_max) {\n        return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    };\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        if (didSetup) {\n            if (typeof newProps.mode !== \"undefined\") {\n                currentMode = newProps.mode;\n            }\n            if (typeof newProps.ballCount !== \"undefined\" && balls.length !== newProps.ballCount) {\n                p.setBallCount(newProps.ballCount);\n            }\n            if (typeof newProps.linkLength !== \"undefined\" && defaultFollowDistance !== newProps.linkLength) {\n                p.setFollowDistance(newProps.linkLength);\n            }\n            if (typeof newProps.linkTension !== \"undefined\" && tension !== newProps.linkTension) {\n                tension = newProps.linkTension;\n            }\n            if (typeof newProps.linkDamping !== \"undefined\" && damping !== newProps.linkDamping) {\n                damping = newProps.linkDamping;\n            }\n        }\n        if (typeof newProps.onFrameRateChange !== \"undefined\") {\n            frameRateCallback = newProps.onFrameRateChange;\n        }\n        // }\n    };\n\n};\n\nexport default chainball;","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass BallCountSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleBallCountChange = this.handleBallCountChange.bind(this);\n    }\n\n    handleBallCountChange(event, newValue) {\n        this.props.onBallCountChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={5}\n                    value={this.props.ballCount || 5}\n                    onChange={this.handleBallCountChange}\n                    min={5}\n                    max={500}\n                    step={5}\n                    aria-labelledby=\"ball-count-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"ball-count-slider\" gutterBottom>\n                    Ball Count\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default BallCountSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkDampingSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n    }\n\n    handleLinkDampingChange(event, newValue) {\n        this.props.onLinkDampingChange(newValue);\n    }\n\n    getValueText(value) {\n        return `${(value*100).toFixed(0)}%`;\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkDamping}\n                    onChange={this.handleLinkDampingChange}\n                    min={0.0}\n                    max={1.0}\n                    step={0.02}\n                    getAriaValueText={this.getValueText}\n                    valueLabelFormat={this.getValueText}\n                    aria-labelledby=\"link-damping-slider\"\n                    valueLabelDisplay=\"on\"\n                    marks={false}\n                />\n                <Typography id=\"link-damping-slider\" gutterBottom>\n                    Link Damping\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkDampingSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkLengthSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n    }\n\n    handleLinkLengthChange(event, newValue) {\n        this.props.onLinkLengthChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkLength}\n                    onChange={this.handleLinkLengthChange}\n                    min={0}\n                    max={800}\n                    step={10}\n                    // getAriaValueText={() => `this.props.ballCount`}\n                    aria-labelledby=\"link-length-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"link-length-slider\" gutterBottom>\n                    Link Length\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkLengthSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkTensionSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n    }\n\n    handleLinkTensionChange(event, newValue) {\n        this.props.onLinkTensionChange(newValue);\n    }\n\n    getValueText(value) {\n        return `${(value*100).toFixed(0)}%`;\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkTension}\n                    onChange={this.handleLinkTensionChange}\n                    min={0.0}\n                    max={1.0}\n                    step={0.02}\n                    getAriaValueText={this.getValueText}\n                    valueLabelFormat={this.getValueText}\n                    aria-labelledby=\"link-tension-slider\"\n                    valueLabelDisplay=\"on\"\n                    marks={false}\n                />\n                <Typography id=\"link-tension-slider\" gutterBottom>\n                    Link Tension\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkTensionSlider;\n","import React from 'react';\nimport { Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core';\n\nclass ModeRadioButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n    }\n\n    handleModeChange(event) {\n        this.props.onModeChange(event.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <FormControl>\n                    <FormLabel>Mode</FormLabel>\n                    <RadioGroup defaultValue=\"static\" aria-label=\"mode\" name=\"mode\" value={this.props.mode} onChange={this.handleModeChange}>\n                        <FormControlLabel value=\"static\" control={<Radio />} label=\"Static\" />\n                        <FormControlLabel value=\"dynamic\" control={<Radio />} label=\"Dynamic\" />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default ModeRadioButtons;\n","import React from 'react';\nimport { Grid, Paper, Drawer } from '@material-ui/core';\nimport \"containers/Sidebar.css\";\n\nimport BallCountSlider from \"sketches/chainball/controls/BallCountSlider\";\nimport LinkDampingSlider from \"sketches/chainball/controls/LinkDampingSlider\";\nimport LinkLengthSlider from \"sketches/chainball/controls/LinkLengthSlider\";\nimport LinkTensionSlider from \"sketches/chainball/controls/LinkTensionSlider\";\nimport ModeRadioButtons from \"sketches/chainball/controls/ModeRadioButtons\";\n\nclass ChainballSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n            <Drawer\n            className=\"SidebarDrawer\"\n            variant=\"permanent\">\n            <Grid\n            className=\"SidebarGrid\"\n                container\n                spacing={2}\n                direction=\"column\"\n                wrap=\"nowrap\">\n\n                    <Grid item xs>\n                        <Paper elevation={2}\n                            className=\"PaperRadioControl\">\n                            <ModeRadioButtons\n                                mode={this.props.mode}\n                                onModeChange={this.props.onModeChange} />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper elevation={2}\n                            className=\"PaperSliderControl\">\n                            <BallCountSlider\n                                ballCount={this.props.ballCount}\n                                onBallCountChange={this.props.onBallCountChange} />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper elevation={2}\n                            className=\"PaperSliderControl\">\n                            <LinkLengthSlider\n                                linkLength={this.props.linkLength}\n                                onLinkLengthChange={this.props.onLinkLengthChange} />\n                        </Paper>\n                    </Grid>\n                    {this.props.mode === \"dynamic\" &&\n                        <Grid item xs={12}>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <LinkTensionSlider\n                                    linkTension={this.props.linkTension}\n                                    onLinkTensionChange={this.props.onLinkTensionChange} />\n                            </Paper>\n                        </Grid>\n                    }{this.props.mode === \"dynamic\" &&\n                        <Grid item xs={12}>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <LinkDampingSlider\n                                    linkDamping={this.props.linkDamping}\n                                    onLinkDampingChange={this.props.onLinkDampingChange} />\n                            </Paper>\n                        </Grid>\n                    }\n                </Grid>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default ChainballSidebar;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5Chainball from \"sketches/chainball/p5_chainball\";\nimport ChainballSidebar from \"./ChainballSidebar\"\n\nclass ChainballApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ballCount: 5,\n            linkLength: 50,\n            linkTension: 0.1,\n            linkDamping: 0.4,\n            mode: \"static\",\n            frameRate: \"not yet started\"\n        }\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n        this.handleBallCountChange = this.handleBallCountChange.bind(this);\n        this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n        this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n        this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n    }\n\n    handleModeChange(newValue) {\n        this.setState({\n            mode: newValue\n        });\n    }\n\n    handleBallCountChange(newValue) {\n        this.setState({\n            ballCount: newValue\n        });\n    }\n\n    handleLinkLengthChange(newValue) {\n        this.setState({\n            linkLength: newValue\n        });\n    }\n\n    handleLinkTensionChange(newValue) {\n        this.setState({\n            linkTension: newValue\n        });\n    }\n\n    handleLinkDampingChange(newValue) {\n        this.setState({\n            linkDamping: newValue\n        });\n    }\n\n    handleFrameRateChange(newFrameRateValue) {\n        this.setState({\n            frameRate: newFrameRateValue\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs={3}>\n                        <ChainballSidebar\n                            mode={this.state.mode}\n                            onModeChange={this.handleModeChange}\n                            ballCount={this.state.ballCount}\n                            onBallCountChange={this.handleBallCountChange}\n                            linkLength={this.state.linkLength}\n                            onLinkLengthChange={this.handleLinkLengthChange}\n                            linkTension={this.state.linkTension}\n                            onLinkTensionChange={this.handleLinkTensionChange}\n                            linkDamping={this.state.linkDamping}\n                            onLinkDampingChange={this.handleLinkDampingChange}\n                            frameRate={this.state.frameRate} />\n                    </Grid>\n                    <Grid container item xs={9}>\n                        <SketchContainer\n                            sketch={p5Chainball}\n                            mode={this.state.mode}\n                            ballCount={this.state.ballCount}\n                            linkLength={this.state.linkLength}\n                            linkTension={this.state.linkTension}\n                            linkDamping={this.state.linkDamping}\n                            onFrameRateChange={this.handleFrameRateChange} />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default ChainballApp;","let orbiter = (p) => {\n\n    let planetAngle = 0.0;\n    let moonAngle = 0.0;\n\n    let planetOrbitRadius = 100.0;\n    let moonOrbitRadius = 15.0;\n\n    let planetOrbitSpeed = 0.4\n    let moonOrbitSpeed = 4.5\n\n    let sunRadius = 25.0;\n    let planetRadius = 5.0;\n    let moonRadius = 2.5;\n\n    let sunLocation = [0, 0];\n\n    let planetOrbitSpeedMod = 1.0;\n    let moonOrbitSpeedMod = 1.0;\n\n    let deltaTimeOffset = 0.05;\n\n    let isSunBeingDragged = false;\n    let sunLocationOffset = [0, 0];\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n\n        sunLocation = [p.width / 2, p.height / 2]\n\n        p.colorMode(p.HSB);\n        p.angleMode(p.DEGREES);\n        // noCursor();\n\n        p.background(0);\n        p.fill(0);\n    };\n\n    p.draw = function () {\n        if (isSunBeingDragged) {\n            sunLocation[0] = p.mouseX + sunLocationOffset[0];\n            sunLocation[1] = p.mouseY + sunLocationOffset[1];\n        }\n        p.background(0);\n\n        planetOrbitSpeedMod = p.sq((sunLocation[0] / p.width) * 6.0);\n        moonOrbitSpeedMod = p.sq((sunLocation[1] / p.height) * 3.0);\n\n        // get some positions\n        let sunX = sunLocation[0];\n        let sunY = sunLocation[1];\n        let planetX = sunX + planetOrbitRadius * p.cos(planetAngle)\n        let planetY = sunY + planetOrbitRadius * p.sin(planetAngle)\n        let moonX = planetX + moonOrbitRadius * p.cos(moonAngle)\n        let moonY = planetY + moonOrbitRadius * p.sin(moonAngle)\n\n        // sun\n        p.fill(0, 0, 100)\n        p.circle(sunX, sunY, sunRadius * 2);\n        // planet\n        p.fill(0, 0, 100)\n        p.circle(planetX, planetY, planetRadius * 2);\n        // moon\n        p.fill(0, 0, 100)\n        p.circle(moonX, moonY, moonRadius * 2);\n        planetAngle += deltaTimeOffset * p.deltaTime * planetOrbitSpeedMod * planetOrbitSpeed;\n        moonAngle += deltaTimeOffset * p.deltaTime * moonOrbitSpeedMod * moonOrbitSpeed;\n        planetAngle = planetAngle % 360;\n        moonAngle = moonAngle % 360;\n    };\n\n    p.windowResized = function() {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.resizeCanvas(w, h);\n    };\n\n    p.mousePressed = function(event) {\n        if (p.isMouseOverCircle(sunLocation, sunRadius)) {\n            isSunBeingDragged = true;\n            sunLocationOffset[0] = sunLocation[0] - p.mouseX;\n            sunLocationOffset[1] = sunLocation[1] - p.mouseY;\n        }\n    };\n\n    p.mouseReleased = function(event) {\n        isSunBeingDragged = false;\n        sunLocation[0] = p.mouseX + sunLocationOffset[0];\n        sunLocation[1] = p.mouseY + sunLocationOffset[1];\n    };\n\n    p.isMouseOverCircle = function(circleLoc, circleRadius) {\n        let dx = p.abs(circleLoc[0] - p.mouseX);\n        let dy = p.abs(circleLoc[1] - p.mouseY);\n        let distToCircleCenter = p.sqrt(dx * dx + dy * dy);\n        return distToCircleCenter <= circleRadius;\n    };\n}\n\nexport default orbiter;\n","import React from 'react';\nimport { Grid, Drawer } from '@material-ui/core';\nimport \"containers/Sidebar.css\"\n\nclass OrbiterSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Drawer\n                className=\"SidebarDrawer\"\n                variant=\"permanent\">\n                <Grid\n                className=\"SidebarGrid\"\n                    container\n                    spacing={2}\n                    direction=\"column\"\n                    wrap=\"nowrap\">\n\n                    {/* <Grid item xs>\n                        <Paper elevation={2}\n                            className=\"PaperRadioControl\">\n                            <ModeRadioButtons\n                                mode={this.props.mode}\n                                onModeChange={this.props.onModeChange} />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs>\n                        <Paper elevation={2}\n                            className=\"PaperSliderControl\">\n                            <BallCountSlider\n                                ballCount={this.props.ballCount}\n                                onBallCountChange={this.props.onBallCountChange} />\n                        </Paper>\n                    </Grid> */}\n                    \n                </Grid>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default OrbiterSidebar;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5Orbiter from \"sketches/orbiter/p5_orbiter\";\nimport OrbiterSidebar from './OrbiterSidebar';\n\nclass OrbiterApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // ballCount: 5,\n            // linkLength: 50,\n            // linkTension: 0.1,\n            // linkDamping: 0.4,\n            // mode: \"static\",\n            // frameRate: \"not yet started\"\n        }\n\n        // this.handleModeChange = this.handleModeChange.bind(this);\n        // this.handleBallCountChange = this.handleBallCountChange.bind(this);\n        // this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n        // this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n        // this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n        // this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n    }\n\n    // handleModeChange(newValue) {\n    //     this.setState({\n    //         mode: newValue\n    //     });\n    // }\n\n    // handleBallCountChange(newValue) {\n    //     this.setState({\n    //         ballCount: newValue\n    //     });\n    // }\n\n    // handleLinkLengthChange(newValue) {\n    //     this.setState({\n    //         linkLength: newValue\n    //     });\n    // }\n\n    // handleLinkTensionChange(newValue) {\n    //     this.setState({\n    //         linkTension: newValue\n    //     });\n    // }\n\n    // handleLinkDampingChange(newValue) {\n    //     this.setState({\n    //         linkDamping: newValue\n    //     });\n    // }\n\n    // handleFrameRateChange(newFrameRateValue) {\n    //     this.setState({\n    //         frameRate: newFrameRateValue\n    //     });\n    // }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs={3}>\n                        <OrbiterSidebar\n                            // mode={this.state.mode}\n                            // onModeChange={this.handleModeChange}\n                            // ballCount={this.state.ballCount}\n                            // onBallCountChange={this.handleBallCountChange}\n                            // linkLength={this.state.linkLength}\n                            // onLinkLengthChange={this.handleLinkLengthChange}\n                            // linkTension={this.state.linkTension}\n                            // onLinkTensionChange={this.handleLinkTensionChange}\n                            // linkDamping={this.state.linkDamping}\n                            // onLinkDampingChange={this.handleLinkDampingChange}\n                            // frameRate={this.state.frameRate} \n                            />\n                    </Grid>\n                    <Grid container item xs={9}>\n                        <SketchContainer\n                            sketch={p5Orbiter}\n                            // mode={this.state.mode}\n                            // ballCount={this.state.ballCount}\n                            // linkLength={this.state.linkLength}\n                            // linkTension={this.state.linkTension}\n                            // linkDamping={this.state.linkDamping}\n                            // onFrameRateChange={this.handleFrameRateChange}\n                            />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default OrbiterApp;","import React from 'react';\nimport ChainballApp from \"sketches/chainball/ChainballApp\"\nimport OrbiterApp from \"sketches/orbiter/OrbiterApp\"\n\nconst appMap = new Map([\n    [\"chainball\", {\n        name: \"chainball\",\n        displayName: \"Chainball\",\n        component: <ChainballApp/>,\n        version: \"1.0\",\n        description: \"2D kinematic demonstration\"\n    }],\n    [\"orbiter\", {\n        name: \"orbiter\",\n        displayName: \"Orbiter\",\n        component: <OrbiterApp/>,\n        version: \"0.1a\",\n        description: \"Orbiter simulation\"\n    }]\n]);\n\nexport default appMap;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport MenuBar from './MenuBar';\nimport './Vixuals.css';\nimport appMap from \"./AppMap\";\nimport { Redirect, withRouter } from 'react-router-dom';\n\nconst appName = \"Vixuals\"\nconst appVersion = \"0.2a\"\n\nconst defaultApp = \"chainball\"\n\nclass Vixuals extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // selectedApp: appMap.get(defaultApp)\n        };\n\n        this.handleSelectedAppChange = this.handleSelectedAppChange.bind(this);\n    }\n\n    handleSelectedAppChange(newValue) {\n        return event => {\n            this.setState({\n                redirectLocation: newValue,\n                shouldRedirect: true\n            });\n        }\n        // return <Redirect to={`/${newValue}`}/>\n    }\n\n    render() {\n        if (this.state.shouldRedirect) {\n            this.setState({shouldRedirect: false})\n            return <Redirect to={`/${this.state.redirectLocation}`}/>\n        }\n        if (this.props.match.params.app === this.props.defaultParam) {\n            return <Redirect to={`/${defaultApp}`}/>\n        }\n        return (\n            <div className=\"Vixuals\">\n                {/* <Route \n                path=\"/:app\"> */}\n                    <Grid\n                        container\n                        spacing={0}\n                        direction=\"column\"\n                        wrap='nowrap'>\n                        <Grid item>\n                            {console.log(this.props)}\n                            <MenuBar\n                                appName={appName}\n                                appVersion={appVersion}\n                                selectedApp={appMap.get(this.props.match.params.app)}\n                                setSelectedApp={this.handleSelectedAppChange}\n                                apps={appMap} />\n                        </Grid>\n                        <Grid item>\n                            {appMap.get(this.props.match.params.app).component}\n                        </Grid>\n                    </Grid>\n                {/* </Route>\n                <Route path=\"/\">\n                    <Redirect to={`/${defaultApp}`} />\n                </Route> */}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Vixuals);","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Vixuals from 'Vixuals'\n\nconst DEFAULT_PARAM = \"__DEFAULT_APP__\"\n\nclass VixualsRouter extends React.Component {\n\n    render() {\n        return (\n            <div className=\"VixualsRouter\">\n                <HashRouter>\n                    <Switch>\n                        <Route path=\"/:app\">\n                            <Vixuals\n                                defaultParam={DEFAULT_PARAM}/>\n                        </Route>\n                        <Route path=\"/\">\n                            <Redirect to={`/${DEFAULT_PARAM}`}/>\n                        </Route>\n                    </Switch>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\nexport default VixualsRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Vixuals from './Vixuals';\nimport VixualsRouter from './VixualsRouter';\nimport './index.css';\n\nReactDOM.render(<VixualsRouter/>, document.getElementById('root'));"],"sourceRoot":""}