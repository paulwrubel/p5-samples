{"version":3,"sources":["sidebar/SketchSelector.js","sidebar/chainball/ModeRadioButtons.js","sidebar/chainball/BallCountSlider.js","sidebar/chainball/LinkLengthSlider.js","sidebar/chainball/LinkTensionSlider.js","sidebar/chainball/LinkDampingSlider.js","sidebar/SketchProperties.js","sidebar/Sidebar.js","sketches/chainball.js","Sketch.js","App.js","index.js"],"names":["React","Component","ModeRadioButtons","props","handleModeChange","bind","event","this","onModeChange","target","value","FormControl","FormLabel","RadioGroup","defaultValue","aria-label","name","mode","onChange","FormControlLabel","control","Radio","label","BallCountSlider","handleBallCountChange","newValue","onBallCountChange","x","Slider","ballCount","min","max","step","aria-labelledby","valueLabelDisplay","Typography","id","gutterBottom","LinkLengthSlider","handleLinkLengthChange","onLinkLengthChange","linkLength","LinkTensionSlider","handleLinkTensionChange","onLinkTensionChange","linkTension","LinkDampingSlider","handleLinkDampingChange","onLinkDampingChange","linkDamping","SketchProperties","className","Grid","container","spacing","direction","justify","alignItems","item","xs","Sidebar","classes","root","wrap","frameRate","withStyles","theme","padding","margin","chainball","p","core","frameRateCallback","velocityArrow","accelerationArrow","linkingLine","didSetup","balls","frameRates","displayFrameRate","Modes","currentMode","defaultFollowDistance","tension","damping","setup","w","select","width","h","height","createCanvas","colorMode","HSB","angleMode","DEGREES","radius","position","createVector","velocity","acceleration","minColor","color","maxColor","isBeingDragged","i","followDist","push","copy","followDistance","minCompressionColor","maxCompressionColor","minTensionColor","maxTensionColor","staticColor","draw","background","mouseVector","mouseX","mouseY","mouseIsOverCanvas","length","thisBall","parentBall","strokeWeight","stroke","targetDistance","realDistance","p5","Vector","sub","mag","RGB","lerpColor","reRange","line","y","pop","forEach","ball","fill","circle","startPosition","add","setMag","vector","limit","forceIsBeingApplied","dist","accelerationArrowColor","drawArrow","mult","velocityArrowColor","frameCount","shift","reduce","sum","num","toFixed","rebound","toParent","windowResized","mousePressed","mouseReleased","keyTyped","setBallCount","newLength","removeBalls","addBalls","count","modifyFollowDistance","delta","setFollowDistance","newDist","fromVector","toVector","arrowColor","translate","rotate","heading","triangle","arrowSize","in_min","in_max","out_min","out_max","myCustomRedrawAccordingToNewPropsHandler","newProps","onFrameRateChange","Sketch","sketch","App","state","handleFrameRateChange","setState","newFrameRateValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f6c8837.chunk.js","sourcesContent":["import React from 'react';\n// import './SketchSelector.css';\nimport Grid from '@material-ui/core/Grid';\n\n\nclass SketchSelector extends React.Component {\n    render() {\n        return (\n            <div className=\"SketchSelector\">\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"row\"\n                    justify=\"space-evenly\"\n                    alignItems=\"center\">\n                    <Grid item xs>\n                        <p>DROPDOWN</p>\n                    </Grid>\n                    <Grid item xs>\n                        <p>SOME TEXT</p>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default SketchSelector;","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nclass ModeRadioButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n    }\n\n    handleModeChange(event) {\n        this.props.onModeChange(event.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <FormControl>\n                    <FormLabel>Mode</FormLabel>\n                    <RadioGroup defaultValue=\"static\" aria-label=\"mode\" name=\"mode\" value={this.props.mode} onChange={this.handleModeChange}>\n                        <FormControlLabel value=\"static\" control={<Radio />} label=\"Static\" />\n                        <FormControlLabel value=\"dynamic\" control={<Radio />} label=\"Dynamic\" />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default ModeRadioButtons;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass BallCountSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleBallCountChange = this.handleBallCountChange.bind(this);\n    }\n\n    handleBallCountChange(event, newValue) {\n        this.props.onBallCountChange(newValue);\n    }\n\n    scale(x) {\n        return x ** 10;\n    };\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={5}\n                    value={this.props.ballCount || 5}\n                    onChange={this.handleBallCountChange}\n                    min={5}\n                    max={500}\n                    step={5}\n                    // getAriaValueText={() => `this.props.ballCount`}\n                    aria-labelledby=\"ball-count-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"ball-count-slider\" gutterBottom>\n                    Ball Count\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default BallCountSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkLengthSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n    }\n\n    handleLinkLengthChange(event, newValue) {\n        this.props.onLinkLengthChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkLength}\n                    onChange={this.handleLinkLengthChange}\n                    min={0}\n                    max={800}\n                    step={10}\n                    // getAriaValueText={() => `this.props.ballCount`}\n                    aria-labelledby=\"link-length-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"link-length-slider\" gutterBottom>\n                    Link Length\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkLengthSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkTensionSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n    }\n\n    handleLinkTensionChange(event, newValue) {\n        this.props.onLinkTensionChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkTension}\n                    onChange={this.handleLinkTensionChange}\n                    min={0.0}\n                    max={1.0}\n                    step={0.02}\n                    // getAriaValueText={() => `this.props.ballCount`}\n                    aria-labelledby=\"link-tension-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"link-tension-slider\" gutterBottom>\n                    Link Tension\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkTensionSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkDampingSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n    }\n\n    handleLinkDampingChange(event, newValue) {\n        this.props.onLinkDampingChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkDamping}\n                    onChange={this.handleLinkDampingChange}\n                    min={0.0}\n                    max={1.0}\n                    step={0.05}\n                    // getAriaValueText={() => `this.props.ballCount`}\n                    aria-labelledby=\"link-damping-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"link-damping-slider\" gutterBottom>\n                    Link Damping\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkDampingSlider;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ModeRadioButtons from './chainball/ModeRadioButtons';\nimport BallCountSlider from './chainball/BallCountSlider';\nimport LinkLengthSlider from './chainball/LinkLengthSlider';\nimport LinkTensionSlider from './chainball/LinkTensionSlider';\nimport LinkDampingSlider from './chainball/LinkDampingSlider';\n\nclass SketchProperties extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div className=\"SketchProperties\">\n                <Grid\n                    container\n                    spacing={5}\n                    direction=\"column\"\n                    justify=\"flex-start\"\n                    alignItems=\"stretch\">\n\n                    <Grid item xs>\n                        <ModeRadioButtons\n                            mode={this.props.mode}\n                            onModeChange={this.props.onModeChange} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <BallCountSlider\n                            ballCount={this.props.ballCount}\n                            onBallCountChange={this.props.onBallCountChange}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <LinkLengthSlider\n                            linkLength={this.props.linkLength}\n                            onLinkLengthChange={this.props.onLinkLengthChange}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <LinkTensionSlider\n                            linkTension={this.props.linkTension}\n                            onLinkTensionChange={this.props.onLinkTensionChange}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <LinkDampingSlider\n                            linkDamping={this.props.linkDamping}\n                            onLinkDampingChange={this.props.onLinkDampingChange}/>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default SketchProperties;","import React from 'react';\nimport SketchSelector from './SketchSelector'\nimport SketchProperties from './SketchProperties'\nimport './Sidebar.css';\nimport Grid from '@material-ui/core/Grid';\nimport withStyles from '@material-ui/core/styles/withStyles'\n\nconst styles = theme => ({\n    root: {\n        padding: \"10%\",\n        margin: \"0\"\n    }\n});\n\nclass Sidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div className={`${this.props.classes.root} Sidebar`}>\n                <Grid\n                    container\n                    spacing={4}\n                    direction=\"column\"\n                    justify=\"space-evenly\"\n                    alignItems=\"stretch\"\n                    wrap=\"nowrap\">\n                    {/* <Grid item xs>\n                        <SketchSelector />\n                    </Grid> */}\n                    <Grid item xs={12}>\n                        <SketchProperties\n                            mode={this.props.mode}\n                            onModeChange={this.props.onModeChange}\n                            ballCount={this.props.ballCount}\n                            onBallCountChange={this.props.onBallCountChange}\n                            linkLength={this.props.linkLength}\n                            onLinkLengthChange={this.props.onLinkLengthChange}\n                            linkTension={this.props.linkTension}\n                            onLinkTensionChange={this.props.onLinkTensionChange}\n                            linkDamping={this.props.linkDamping}\n                            onLinkDampingChange={this.props.onLinkDampingChange} />\n                    </Grid>\n                    <Grid item>\n                        <p>---DEBUG INFO---</p>\n                        <p>FPS: {this.props.frameRate}</p>\n                        <p>MODE: {this.props.mode}</p>\n                        <p>BALLS: {this.props.ballCount}</p>\n                        <p>LENGTH: {this.props.linkLength}</p>\n                        <p>TENSION: {this.props.linkTension}</p>\n                        <p>DAMPING: {this.props.linkDamping}</p>\n\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Sidebar);","import p5 from 'p5';\n\nlet chainball = (p) => {\n\n    let didSetup = false;\n\n    let core;\n    let balls = [];\n    let frameRates = [];\n    let displayFrameRate = 0;\n\n    const Modes = {\n        STATIC: \"static\",\n        DYNAMIC: \"dynamic\"\n    };\n\n    let currentMode = Modes.STATIC;\n\n    let frameRateCallback;\n\n    let ballCount = 5;\n    let environmentFriction = 0.9995;\n\n    let drawLines = true;\n\n    let defaultFollowDistance = 50;\n    let defaultBallRadius = 10;\n\n    let tension = 0.1;\n    let damping = 0.6;\n\n    let velocityArrow;\n    let accelerationArrow;\n    let linkingLine;\n\n    p.setup = function () {\n        let w = p.select(\".App\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".App\").height;\n        p.createCanvas(w * 0.75, h);\n        // p.createCanvas(p.windowWidth, p.windowHeight);\n        // canvas.parent('Sketch');\n        // canvas.style('display', 'block');\n\n        p.colorMode(p.HSB);\n        p.angleMode(p.DEGREES);\n        p.frameRate(60);\n        // noCursor();\n\n        core = {\n            radius: 25,\n            position: p.createVector(p.width / 2, p.height / 2),\n            velocity: p.createVector(0, 0),\n            acceleration: p.createVector(0, 0),\n            minColor: p.color(240, 0, 100),\n            maxColor: p.color(240, 100, 100),\n            isBeingDragged: false\n        };\n\n        for (let i = 0; i < ballCount; i++) {\n            let followDist;\n            if (i === 0) {\n                followDist = defaultFollowDistance + (core.radius - defaultBallRadius);\n            } else {\n                followDist = defaultFollowDistance;\n            }\n            balls.push({\n                radius: defaultBallRadius,\n                position: core.position.copy(),\n                velocity: p.createVector(0, 0),\n                followDistance: followDist,\n                minColor: p.color(0, 0, 100),\n                maxColor: p.color(0, 100, 100)\n            });\n        }\n\n        velocityArrow = {\n            minColor: p.color(240, 25, 100),\n            maxColor: p.color(240, 100, 100)\n        };\n\n        accelerationArrow = {\n            minColor: p.color(0, 25, 100),\n            maxColor: p.color(0, 100, 100),\n        };\n\n        linkingLine = {\n            minCompressionColor: p.color(240, 0, 100, 0.5),\n            maxCompressionColor: p.color(240, 100, 100, 0.5),\n            minTensionColor: p.color(0, 0, 100, 0.5),\n            maxTensionColor: p.color(0, 100, 100, 0.5),\n            staticColor: p.color(0, 0, 100, 0.5)\n        };\n\n        didSetup = true;\n    };\n\n    p.draw = function () {\n        p.background(0);\n        let mouseVector = p.createVector(p.mouseX, p.mouseY);\n        let mouseIsOverCanvas =\n            p.mouseX > 0 && p.mouseX < p.width &&\n            p.mouseY > 0 && p.mouseY < p.height;\n\n        /* DRAWING */\n\n        // draw connecting lines\n        if (drawLines) {\n            for (let i = 0; i < balls.length; i++) {\n                let thisBall = balls[i];\n                let parentBall;\n                if (i === 0) {\n                    parentBall = core;\n                } else {\n                    parentBall = balls[i - 1];\n                }\n                p.push();\n                p.strokeWeight(5);\n                if (currentMode === Modes.STATIC) {\n                    p.stroke(linkingLine.staticColor);\n                } else {\n                    let targetDistance = thisBall.followDistance;\n                    let realDistance = p5.Vector.sub(\n                        parentBall.position,\n                        thisBall.position).mag();\n                    p.colorMode(p.RGB);\n                    if (targetDistance > realDistance) {\n                        p.stroke(p.lerpColor(\n                            linkingLine.minCompressionColor,\n                            linkingLine.maxCompressionColor,\n                            p.reRange(realDistance / targetDistance, 1, 0.5, 0, 1)));\n                    } else {\n                        p.stroke(p.lerpColor(\n                            linkingLine.minTensionColor,\n                            linkingLine.maxTensionColor,\n                            p.reRange(realDistance / targetDistance, 1, 4, 0, 1)));\n                    }\n                    p.colorMode(p.HSB);\n                }\n                p.line(thisBall.position.x, thisBall.position.y, parentBall.position.x, parentBall.position.y);\n                p.pop();\n            }\n        }\n\n        // draw the balls\n        balls.forEach(ball => {\n            p.fill(ball.minColor);\n            p.circle(ball.position.x, ball.position.y, ball.radius * 2);\n        })\n\n        // draw the core\n        // colorMode(RGB);\n        p.fill(core.minColor);\n        // colorMode(HSB);\n        p.circle(core.position.x, core.position.y, core.radius * 2)\n\n        // draw force arrows\n        accelerationArrow.startPosition = p5.Vector.add(core.position, p5.Vector.sub(mouseVector, core.position).setMag(core.radius));\n        accelerationArrow.vector = p5.Vector.sub(mouseVector, accelerationArrow.startPosition);\n        accelerationArrow.vector.limit(200);\n\n        if (mouseIsOverCanvas && core.forceIsBeingApplied) {\n            if (mouseVector.dist(core.position) > core.radius) {\n                p.colorMode(p.RGB);\n                let accelerationArrowColor = p.lerpColor(\n                    accelerationArrow.minColor,\n                    accelerationArrow.maxColor,\n                    accelerationArrow.vector.mag() / 200);\n                p.colorMode(p.HSB);\n                p.drawArrow(\n                    accelerationArrow.startPosition,\n                    accelerationArrow.vector,\n                    accelerationArrowColor);\n            }\n        }\n\n        velocityArrow.startPosition = p5.Vector.add(core.position, core.velocity.copy().setMag(core.radius));\n        velocityArrow.vector = core.velocity.copy().mult(10);\n\n        if (core.velocity.mag() > 0.5) {\n            p.colorMode(p.RGB);\n            let velocityArrowColor = p.lerpColor(\n                velocityArrow.minColor,\n                velocityArrow.maxColor,\n                velocityArrow.vector.mag() / 250);\n            p.colorMode(p.HSB);\n            p.drawArrow(\n                velocityArrow.startPosition,\n                velocityArrow.vector,\n                velocityArrowColor);\n        }\n\n        // draw framerate\n        if (p.frameCount % 10 === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n        }\n        // $('#framerate').text(`FPS: ${displayFrameRate.toFixed(0)}`);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`fps: ${displayFrameRate.toFixed(0)}`, 5, 35);\n\n\n\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`ball count: ${balls.length}`, 5, 65);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`follow dist: ${defaultFollowDistance}`, 5, 95);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`size: ${p.windowWidth}x${p.windowHeight}`, 5, 125);\n        // $('#mode').text(`mode: ${currentMode}`);\n\n        /* UPDATING */\n\n        // update core\n        if (mouseIsOverCanvas && core.forceIsBeingApplied && mouseVector.dist(core.position) > core.radius) {\n            core.acceleration = p5.Vector.mult(accelerationArrow.vector, 0.0005);\n        } else {\n            core.acceleration = p.createVector(0, 0);\n        }\n\n        core.velocity.add(core.acceleration);\n        core.velocity.mult(environmentFriction);\n\n        core.position.add(core.velocity);\n        p.rebound(core);\n\n\n        // update balls\n        for (let i = 0; i < balls.length; i++) {\n            let thisBall = balls[i];\n            let parentBall;\n            if (i === 0) {\n                parentBall = core;\n            } else {\n                parentBall = balls[i - 1];\n            }\n\n            let toParent = p5.Vector.sub(parentBall.position, thisBall.position);\n            toParent.setMag(toParent.mag() - thisBall.followDistance);\n            if (currentMode === Modes.STATIC) {\n                thisBall.velocity.mult(environmentFriction);\n                thisBall.position.add(toParent);\n            } else {\n                // let goalPosition = p5.Vector.add(thisBall.position, toParent);\n                thisBall.acceleration = toParent.mult(tension);\n                thisBall.velocity.add(thisBall.acceleration);\n                thisBall.velocity.mult(damping);\n                thisBall.position.add(thisBall.velocity);\n            }\n\n            p.rebound(thisBall);\n\n        }\n\n    };\n\n    p.windowResized = function () {\n        let w = p.select(\".App\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".App\").height;\n        p.createCanvas(w * 0.75, h);\n    };\n\n    p.mousePressed = function (event) {\n        core.forceIsBeingApplied = true;\n    };\n\n    p.mouseReleased = function (event) {\n        core.forceIsBeingApplied = false;\n    };\n\n    p.keyTyped = function () {\n        // if (p.key === '=') {\n        //     p.addBall(1);\n        // } else if (p.key === '-') {\n        //     p.removeBall(1);\n        // } else if (p.key === '0') {\n        //     p.addBall(10);\n        // } else if (p.key === '9') {\n        //     p.removeBall(10);\n        // } else if (p.key === ']') {\n        //     p.modifyFollowDistance(5);\n        // } else if (p.key === '[') {\n        //     p.modifyFollowDistance(-5);\n        // } else if (p.key === 'p') {\n        //     p.modifyFollowDistance(50);\n        // } else if (p.key === 'o') {\n        //     p.modifyFollowDistance(-50);\n        // }\n        // else if (p.key === 'm') {\n        //     if (currentMode === Modes.STATIC) {\n        //         currentMode = Modes.DYNAMIC;\n        //     } else {\n        //         currentMode = Modes.STATIC;\n        //     }\n        // }\n    };\n\n    p.setBallCount = function (newLength) {\n        if (balls.length > newLength) {\n            p.removeBalls(balls.length - newLength);\n        } else if (balls.length < newLength) {\n            p.addBalls(newLength - balls.length);\n        }\n    }\n\n    p.addBalls = function (count) {\n        for (let i = 0; i < count; i++) {\n            balls.push({\n                radius: defaultBallRadius,\n                position: balls[0].position.copy(),\n                velocity: p.createVector(0, 0),\n                followDistance: defaultFollowDistance,\n                minColor: p.color(0, 0, 100),\n                maxColor: p.color(0, 100, 100)\n            });\n        }\n    };\n\n    p.removeBalls = function (count) {\n        for (let i = 0; i < count && balls.length > 1; i++) {\n            balls.pop();\n        }\n    };\n\n    p.modifyFollowDistance = function (delta) {\n        if (defaultFollowDistance + delta >= 0) {\n            balls.forEach(ball => {\n                ball.followDistance += delta;\n            });\n            defaultFollowDistance += delta;\n        }\n    };\n\n    p.setFollowDistance = function (newDist) {\n        p.modifyFollowDistance(newDist - defaultFollowDistance);\n    };\n\n    p.rebound = function (ball) {\n        if (ball.position.x > p.width - ball.radius) {\n            ball.position.x = p.width - ball.radius;\n            ball.velocity.x *= -1;\n        }\n        if (ball.position.x < ball.radius) {\n            ball.position.x = ball.radius;\n            ball.velocity.x *= -1;\n        }\n        if (ball.position.y > p.height - ball.radius) {\n            ball.position.y = p.height - ball.radius;\n            ball.velocity.y *= -1;\n        }\n        if (ball.position.y < ball.radius) {\n            ball.position.y = ball.radius;\n            ball.velocity.y *= -1;\n        }\n    };\n\n    p.drawArrow = function (fromVector, toVector, arrowColor) {\n        p.push();\n        p.stroke(arrowColor);\n        p.strokeWeight(2);\n        p.fill(arrowColor);\n        p.translate(fromVector.x, fromVector.y);\n        p.line(0, 0, toVector.x, toVector.y);\n        p.rotate(toVector.heading());\n        let arrowSize = 3;\n        p.translate(toVector.mag() - arrowSize, 0);\n        p.triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n        p.pop();\n    };\n\n    p.reRange = function (num, in_min, in_max, out_min, out_max) {\n        return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    };\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        if (didSetup) {\n            if (typeof newProps.mode !== \"undefined\") {\n                currentMode = newProps.mode;\n            }\n            if (typeof newProps.ballCount !== \"undefined\" && balls.length !== newProps.ballCount) {\n                p.setBallCount(newProps.ballCount);\n            }\n            if (typeof newProps.linkLength !== \"undefined\" && defaultFollowDistance !== newProps.linkLength) {\n                p.setFollowDistance(newProps.linkLength);\n            }\n            if (typeof newProps.linkTension !== \"undefined\" && tension !== newProps.linkTension) {\n                tension = newProps.linkTension;\n            }\n            if (typeof newProps.linkDamping !== \"undefined\" && damping !== newProps.linkDamping) {\n                damping = newProps.linkDamping;\n            }\n        }\n        if (typeof newProps.onFrameRateChange !== \"undefined\") {\n            frameRateCallback = newProps.onFrameRateChange;\n        }\n        // }\n    };\n\n};\n\nexport default chainball;","import React from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport chainball from './sketches/chainball';\nimport './Sketch.css';\n\nclass Sketch extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    // componentDidMount(){\n    //     this.forceUpdate();\n    // }\n\n    render() {\n        return (\n            <div id=\"Sketch\" className=\"Sketch\">\n                <P5Wrapper sketch={chainball} className=\"P5Wrapper\"\n                mode={this.props.mode} \n                ballCount={this.props.ballCount} \n                linkLength={this.props.linkLength} \n                linkTension={this.props.linkTension} \n                linkDamping={this.props.linkDamping} \n                onFrameRateChange={this.props.onFrameRateChange}>\n                </P5Wrapper>\n            </div>\n        );\n    }\n}\n\nexport default Sketch;","import React from 'react';\nimport Sidebar from './sidebar/Sidebar'\nimport Sketch from './Sketch'\nimport Grid from \"@material-ui/core/Grid\";\nimport './App.css'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ballCount: 5,\n            linkLength: 50,\n            linkTension: 0.1,\n            linkDamping: 0.6,\n            mode: \"static\",\n            frameRate: \"not yet started\"\n        }\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n        this.handleBallCountChange = this.handleBallCountChange.bind(this);\n        this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n        this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n        this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n    }\n\n    handleModeChange(newValue) {\n        this.setState({\n            mode: newValue\n        });\n    }\n\n    handleBallCountChange(newValue) {\n        this.setState({\n            ballCount: newValue\n        });\n    }\n\n    handleLinkLengthChange(newValue) {\n        this.setState({\n            linkLength: newValue\n        });\n    }\n\n    handleLinkTensionChange(newValue) {\n        this.setState({\n            linkTension: newValue\n        });\n    }\n\n    handleLinkDampingChange(newValue) {\n        this.setState({\n            linkDamping: newValue\n        });\n    }\n\n    handleFrameRateChange(newFrameRateValue) {\n        this.setState({\n            frameRate: newFrameRateValue\n        });\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                    <Grid\n                        container\n                        spacing={0}\n                        direction='row'\n                        justify='center'\n                        alignItems='stretch'\n                        wrap='nowrap'>\n                        <Grid item xs={3}>\n                            <Sidebar \n                            mode={this.state.mode}\n                            onModeChange={this.handleModeChange}\n                            ballCount={this.state.ballCount}\n                            onBallCountChange={this.handleBallCountChange}\n                            linkLength={this.state.linkLength}\n                            onLinkLengthChange={this.handleLinkLengthChange}\n                            linkTension={this.state.linkTension}\n                            onLinkTensionChange={this.handleLinkTensionChange}\n                            linkDamping={this.state.linkDamping}\n                            onLinkDampingChange={this.handleLinkDampingChange}\n                            frameRate={this.state.frameRate}/>\n                        </Grid>\n                        <Grid item xs>\n                            <Sketch \n                            mode={this.state.mode}\n                            ballCount={this.state.ballCount}\n                            linkLength={this.state.linkLength}\n                            linkTension={this.state.linkTension}\n                            linkDamping={this.state.linkDamping}\n                            onFrameRateChange={this.handleFrameRateChange}/>\n                        </Grid>\n                    </Grid>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}