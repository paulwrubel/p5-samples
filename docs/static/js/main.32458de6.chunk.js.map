{"version":3,"sources":["containers/SketchContainer.js","containers/SidebarContainer.js","sketches/chainball/p5_chainball.js","sketches/chainball/controls/BallCountSlider.js","sketches/chainball/controls/LinkDampingSlider.js","sketches/chainball/controls/LinkLengthSlider.js","sketches/chainball/controls/LinkTensionSlider.js","sketches/chainball/controls/ModeRadioButtons.js","sketches/chainball/ChainballSidebar.js","sketches/chainball/ChainballApp.js","containers/AppContainer.js","AppList.js","MenuBar.js","sketches/orbiter/p5_orbiter.js","sketches/orbiter/OrbiterSidebar.js","sketches/orbiter/OrbiterApp.js","AppMap.js","Vixuals.js","VixualsRouter.js","index.js"],"names":["SketchContainer","this","props","p5Sketch","other","className","sketch","React","Component","SidebarContainer","classes","root","children","withStyles","theme","chainball","p","core","frameRateCallback","velocityArrow","accelerationArrow","linkingLine","didSetup","balls","frameRates","displayFrameRate","Modes","currentMode","defaultFollowDistance","tension","damping","setup","w","select","width","h","height","createCanvas","colorMode","HSB","angleMode","DEGREES","frameRate","radius","position","createVector","velocity","acceleration","minColor","color","maxColor","isBeingDragged","i","followDist","pos","copy","console","log","length","push","followDistance","minCompressionColor","maxCompressionColor","minTensionColor","maxTensionColor","staticColor","draw","background","mouseVector","mouseX","mouseY","mouseIsOverCanvas","thisBall","parentBall","strokeWeight","stroke","targetDistance","realDistance","p5","Vector","sub","mag","RGB","lerpColor","reRange","line","x","y","pop","ball","fill","circle","startPosition","add","setMag","vector","limit","forceIsBeingApplied","dist","accelerationArrowColor","drawArrow","mult","velocityArrowColor","frameCount","shift","reduce","sum","num","toFixed","rebound","toParent","windowResized","mousePressed","event","mouseReleased","keyTyped","setBallCount","newLength","removeBalls","addBalls","count","modifyFollowDistance","delta","forEach","setFollowDistance","newDist","fromVector","toVector","arrowColor","translate","rotate","heading","triangle","arrowSize","in_min","in_max","out_min","out_max","myCustomRedrawAccordingToNewPropsHandler","newProps","mode","ballCount","linkLength","linkTension","linkDamping","onFrameRateChange","BallCountSlider","handleBallCountChange","bind","newValue","onBallCountChange","Slider","defaultValue","value","onChange","min","max","step","aria-labelledby","valueLabelDisplay","Typography","id","gutterBottom","LinkDampingSlider","handleLinkDampingChange","onLinkDampingChange","getAriaValueText","getValueText","valueLabelFormat","marks","LinkLengthSlider","handleLinkLengthChange","onLinkLengthChange","LinkTensionSlider","handleLinkTensionChange","onLinkTensionChange","ModeRadioButtons","handleModeChange","onModeChange","target","FormControl","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","label","ChainballSidebar","Grid","container","spacing","direction","justify","alignItems","item","xs","Paper","elevation","ChainballApp","state","handleFrameRateChange","setState","newFrameRateValue","wrap","p5Chainball","AppContainer","AppList","role","onClick","toggleDrawer","List","Array","from","apps","values","map","app","ListItem","button","key","setSelectedApp","ListItemText","primary","displayName","MenuBar","drawerIsOpen","type","AppBar","Toolbar","variant","IconButton","edge","Drawer","open","onClose","selectedApp","version","description","appName","appVersion","orbiter","planetAngle","moonAngle","sunLocation","planetOrbitSpeedMod","moonOrbitSpeedMod","isSunBeingDragged","movedX","movedY","sq","sunX","sunY","planetX","cos","planetY","sin","moonX","moonY","sunRadius","planetRadius","moonRadius","deltaTime","resizeCanvas","isMouseOverCircle","circleLoc","circleRadius","dx","abs","dy","sqrt","OrbiterSidebar","OrbiterApp","p5Orbiter","appMap","Map","component","Vixuals","handleSelectedAppChange","redirectLocation","shouldRedirect","to","get","match","params","withRouter","VixualsRouter","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32458de6.chunk.js","sourcesContent":["import React from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport \"./SketchContainer.css\"\n\nclass SketchContainer extends React.Component {\n    render() {\n        const { p5Sketch, ...other } = this.props;\n        return (\n            <div className=\"SketchContainer\">\n                <P5Wrapper className=\"P5Wrapper\"\n                    sketch={p5Sketch}\n                    {...other}>\n                </P5Wrapper>\n            </div>\n        );\n    }\n}\n\nexport default SketchContainer;","import React from 'react';\n// import Sidebar from 'sketches/chainball/Sidebar'\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport SketchContainer from 'containers/SketchContainer';\n\nconst styles = theme => ({\n    root: {\n        // boxSizing: \"border-box\",\n        // padding: \"20px\",\n        // margin: \"0\",\n        // width: \"100%\",\n        // minHeight: \"100%\"\n    }\n});\n\nclass SidebarContainer extends React.Component {\n\n    render() {\n        return (\n            <div className={this.props.classes.root}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SidebarContainer);","import p5 from 'p5';\n\nlet chainball = (p) => {\n\n    let didSetup = false;\n\n    let core;\n    let balls = [];\n    let frameRates = [];\n    let displayFrameRate = 0;\n\n    const Modes = {\n        STATIC: \"static\",\n        DYNAMIC: \"dynamic\"\n    };\n\n    let currentMode = Modes.STATIC;\n\n    let frameRateCallback;\n\n    let ballCount = 5;\n    let environmentFriction = 0.9995;\n\n    let drawLines = true;\n\n    let defaultFollowDistance = 50;\n    let defaultBallRadius = 10;\n\n    let tension = 0.1;\n    let damping = 0.4;\n\n    let velocityArrow;\n    let accelerationArrow;\n    let linkingLine;\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n        // p.createCanvas(p.windowWidth, p.windowHeight);\n        // canvas.parent('Sketch');\n        // canvas.style('display', 'block');\n\n        p.colorMode(p.HSB);\n        p.angleMode(p.DEGREES);\n        p.frameRate(60);\n        // noCursor();\n\n        core = {\n            radius: 25,\n            position: p.createVector(p.width / 2, p.height / 2),\n            velocity: p.createVector(0, 0),\n            acceleration: p.createVector(0, 0),\n            minColor: p.color(240, 0, 100),\n            maxColor: p.color(240, 100, 100),\n            isBeingDragged: false\n        };\n\n        for (let i = 0; i < ballCount; i++) {\n            let followDist;\n            let pos;\n            if (i === 0) {\n                followDist = defaultFollowDistance + (core.radius - defaultBallRadius);\n                pos = core.position.copy();\n            } else {\n                followDist = defaultFollowDistance;\n                console.log(balls.length)\n                pos = balls[balls.length-1].position.copy();\n                console.log(pos)\n            }\n            balls.push({\n                radius: defaultBallRadius,\n                position: pos,\n                velocity: p.createVector(0, 0),\n                followDistance: followDist,\n                minColor: p.color(0, 0, 100),\n                maxColor: p.color(0, 100, 100)\n            });\n        }\n\n        velocityArrow = {\n            minColor: p.color(240, 25, 100),\n            maxColor: p.color(240, 100, 100)\n        };\n\n        accelerationArrow = {\n            minColor: p.color(0, 25, 100),\n            maxColor: p.color(0, 100, 100),\n        };\n\n        linkingLine = {\n            minCompressionColor: p.color(240, 0, 100, 0.5),\n            maxCompressionColor: p.color(240, 100, 100, 0.5),\n            minTensionColor: p.color(0, 0, 100, 0.5),\n            maxTensionColor: p.color(0, 100, 100, 0.5),\n            staticColor: p.color(0, 0, 100, 0.5)\n        };\n\n        didSetup = true;\n    };\n\n    p.draw = function () {\n        p.background(0);\n        let mouseVector = p.createVector(p.mouseX, p.mouseY);\n        let mouseIsOverCanvas =\n            p.mouseX > 0 && p.mouseX < p.width &&\n            p.mouseY > 0 && p.mouseY < p.height;\n\n        /* DRAWING */\n\n        // draw connecting lines\n        if (drawLines) {\n            for (let i = 0; i < balls.length; i++) {\n                let thisBall = balls[i];\n                let parentBall;\n                if (i === 0) {\n                    parentBall = core;\n                } else {\n                    parentBall = balls[i - 1];\n                }\n                p.push();\n                p.strokeWeight(5);\n                if (currentMode === Modes.STATIC) {\n                    p.stroke(linkingLine.staticColor);\n                } else {\n                    let targetDistance = thisBall.followDistance;\n                    let realDistance = p5.Vector.sub(\n                        parentBall.position,\n                        thisBall.position).mag();\n                    p.colorMode(p.RGB);\n                    if (targetDistance > realDistance) {\n                        p.stroke(p.lerpColor(\n                            linkingLine.minCompressionColor,\n                            linkingLine.maxCompressionColor,\n                            p.reRange(realDistance / targetDistance, 1, 0.5, 0, 1)));\n                    } else {\n                        p.stroke(p.lerpColor(\n                            linkingLine.minTensionColor,\n                            linkingLine.maxTensionColor,\n                            p.reRange(realDistance / targetDistance, 1, 4, 0, 1)));\n                    }\n                    p.colorMode(p.HSB);\n                }\n                p.line(thisBall.position.x, thisBall.position.y, parentBall.position.x, parentBall.position.y);\n                p.pop();\n            }\n        }\n\n        // draw the balls\n        for (let i=balls.length-1; i>=0; i--) {\n            let ball = balls[i];   \n            p.fill(ball.minColor);\n            p.circle(ball.position.x, ball.position.y, ball.radius * 2);\n        }\n        // balls.forEach(ball => {\n        //     p.fill(ball.minColor);\n        //     p.circle(ball.position.x, ball.position.y, ball.radius * 2);\n        // })\n\n        // draw the core\n        // colorMode(RGB);\n        p.fill(core.minColor);\n        // colorMode(HSB);\n        p.circle(core.position.x, core.position.y, core.radius * 2)\n\n        // draw force arrows\n        accelerationArrow.startPosition = p5.Vector.add(core.position, p5.Vector.sub(mouseVector, core.position).setMag(core.radius));\n        accelerationArrow.vector = p5.Vector.sub(mouseVector, accelerationArrow.startPosition);\n        accelerationArrow.vector.limit(200);\n\n        if (mouseIsOverCanvas && core.forceIsBeingApplied) {\n            if (mouseVector.dist(core.position) > core.radius) {\n                p.colorMode(p.RGB);\n                let accelerationArrowColor = p.lerpColor(\n                    accelerationArrow.minColor,\n                    accelerationArrow.maxColor,\n                    accelerationArrow.vector.mag() / 200);\n                p.colorMode(p.HSB);\n                p.drawArrow(\n                    accelerationArrow.startPosition,\n                    accelerationArrow.vector,\n                    accelerationArrowColor);\n            }\n        }\n\n        velocityArrow.startPosition = p5.Vector.add(core.position, core.velocity.copy().setMag(core.radius));\n        velocityArrow.vector = core.velocity.copy().mult(10);\n\n        if (core.velocity.mag() > 0.5) {\n            p.colorMode(p.RGB);\n            let velocityArrowColor = p.lerpColor(\n                velocityArrow.minColor,\n                velocityArrow.maxColor,\n                velocityArrow.vector.mag() / 250);\n            p.colorMode(p.HSB);\n            p.drawArrow(\n                velocityArrow.startPosition,\n                velocityArrow.vector,\n                velocityArrowColor);\n        }\n\n        // draw framerate\n        if (p.frameCount % 10 === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n        }\n        // $('#framerate').text(`FPS: ${displayFrameRate.toFixed(0)}`);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`fps: ${displayFrameRate.toFixed(0)}`, 5, 35);\n\n\n\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`ball count: ${balls.length}`, 5, 65);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`follow dist: ${defaultFollowDistance}`, 5, 95);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`size: ${p.windowWidth}x${p.windowHeight}`, 5, 125);\n        // $('#mode').text(`mode: ${currentMode}`);\n\n        /* UPDATING */\n\n        // update core\n        if (mouseIsOverCanvas && core.forceIsBeingApplied && mouseVector.dist(core.position) > core.radius) {\n            core.acceleration = p5.Vector.mult(accelerationArrow.vector, 0.0005);\n        } else {\n            core.acceleration = p.createVector(0, 0);\n        }\n\n        core.velocity.add(core.acceleration);\n        core.velocity.mult(environmentFriction);\n\n        core.position.add(core.velocity);\n        p.rebound(core);\n\n\n        // update balls\n        for (let i = 0; i < balls.length; i++) {\n            let thisBall = balls[i];\n            let parentBall;\n            if (i === 0) {\n                parentBall = core;\n            } else {\n                parentBall = balls[i - 1];\n            }\n\n            let toParent = p5.Vector.sub(parentBall.position, thisBall.position);\n            toParent.setMag(toParent.mag() - thisBall.followDistance);\n            if (currentMode === Modes.STATIC) {\n                thisBall.velocity.mult(environmentFriction);\n                thisBall.position.add(toParent);\n            } else {\n                // let goalPosition = p5.Vector.add(thisBall.position, toParent);\n                thisBall.acceleration = toParent.mult(tension);\n                thisBall.velocity.add(thisBall.acceleration);\n                thisBall.velocity.mult(1.0 - damping);\n                thisBall.position.add(thisBall.velocity);\n            }\n\n            p.rebound(thisBall);\n\n        }\n\n    };\n\n    p.windowResized = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n    };\n\n    p.mousePressed = function (event) {\n        core.forceIsBeingApplied = true;\n    };\n\n    p.mouseReleased = function (event) {\n        core.forceIsBeingApplied = false;\n    };\n\n    p.keyTyped = function () {\n    };\n\n    p.setBallCount = function (newLength) {\n        if (balls.length > newLength) {\n            p.removeBalls(balls.length - newLength);\n        } else if (balls.length < newLength) {\n            p.addBalls(newLength - balls.length);\n        }\n    }\n\n    p.addBalls = function (count) {\n        for (let i = 0; i < count; i++) {\n            balls.push({\n                radius: defaultBallRadius,\n                position: balls[balls.length-1].position.copy(),\n                velocity: p.createVector(0, 0),\n                followDistance: defaultFollowDistance,\n                minColor: p.color(0, 0, 100),\n                maxColor: p.color(0, 100, 100)\n            });\n        }\n    };\n\n    p.removeBalls = function (count) {\n        for (let i = 0; i < count && balls.length > 1; i++) {\n            balls.pop();\n        }\n    };\n\n    p.modifyFollowDistance = function (delta) {\n        if (defaultFollowDistance + delta >= 0) {\n            balls.forEach(ball => {\n                ball.followDistance += delta;\n            });\n            defaultFollowDistance += delta;\n        }\n    };\n\n    p.setFollowDistance = function (newDist) {\n        p.modifyFollowDistance(newDist - defaultFollowDistance);\n    };\n\n    p.rebound = function (ball) {\n        if (ball.position.x > p.width - ball.radius) {\n            ball.position.x = p.width - ball.radius;\n            ball.velocity.x *= -1;\n        }\n        if (ball.position.x < ball.radius) {\n            ball.position.x = ball.radius;\n            ball.velocity.x *= -1;\n        }\n        if (ball.position.y > p.height - ball.radius) {\n            ball.position.y = p.height - ball.radius;\n            ball.velocity.y *= -1;\n        }\n        if (ball.position.y < ball.radius) {\n            ball.position.y = ball.radius;\n            ball.velocity.y *= -1;\n        }\n    };\n\n    p.drawArrow = function (fromVector, toVector, arrowColor) {\n        p.push();\n        p.stroke(arrowColor);\n        p.strokeWeight(2);\n        p.fill(arrowColor);\n        p.translate(fromVector.x, fromVector.y);\n        p.line(0, 0, toVector.x, toVector.y);\n        p.rotate(toVector.heading());\n        let arrowSize = 3;\n        p.translate(toVector.mag() - arrowSize, 0);\n        p.triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n        p.pop();\n    };\n\n    p.reRange = function (num, in_min, in_max, out_min, out_max) {\n        return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    };\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        if (didSetup) {\n            if (typeof newProps.mode !== \"undefined\") {\n                currentMode = newProps.mode;\n            }\n            if (typeof newProps.ballCount !== \"undefined\" && balls.length !== newProps.ballCount) {\n                p.setBallCount(newProps.ballCount);\n            }\n            if (typeof newProps.linkLength !== \"undefined\" && defaultFollowDistance !== newProps.linkLength) {\n                p.setFollowDistance(newProps.linkLength);\n            }\n            if (typeof newProps.linkTension !== \"undefined\" && tension !== newProps.linkTension) {\n                tension = newProps.linkTension;\n            }\n            if (typeof newProps.linkDamping !== \"undefined\" && damping !== newProps.linkDamping) {\n                damping = newProps.linkDamping;\n            }\n        }\n        if (typeof newProps.onFrameRateChange !== \"undefined\") {\n            frameRateCallback = newProps.onFrameRateChange;\n        }\n        // }\n    };\n\n};\n\nexport default chainball;","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass BallCountSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleBallCountChange = this.handleBallCountChange.bind(this);\n    }\n\n    handleBallCountChange(event, newValue) {\n        this.props.onBallCountChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={5}\n                    value={this.props.ballCount || 5}\n                    onChange={this.handleBallCountChange}\n                    min={5}\n                    max={500}\n                    step={5}\n                    aria-labelledby=\"ball-count-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"ball-count-slider\" gutterBottom>\n                    Ball Count\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default BallCountSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkDampingSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n    }\n\n    handleLinkDampingChange(event, newValue) {\n        this.props.onLinkDampingChange(newValue);\n    }\n\n    getValueText(value) {\n        return `${(value*100).toFixed(0)}%`;\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkDamping}\n                    onChange={this.handleLinkDampingChange}\n                    min={0.0}\n                    max={1.0}\n                    step={0.02}\n                    getAriaValueText={this.getValueText}\n                    valueLabelFormat={this.getValueText}\n                    aria-labelledby=\"link-damping-slider\"\n                    valueLabelDisplay=\"on\"\n                    marks={false}\n                />\n                <Typography id=\"link-damping-slider\" gutterBottom>\n                    Link Damping\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkDampingSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkLengthSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n    }\n\n    handleLinkLengthChange(event, newValue) {\n        this.props.onLinkLengthChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkLength}\n                    onChange={this.handleLinkLengthChange}\n                    min={0}\n                    max={800}\n                    step={10}\n                    // getAriaValueText={() => `this.props.ballCount`}\n                    aria-labelledby=\"link-length-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"link-length-slider\" gutterBottom>\n                    Link Length\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkLengthSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkTensionSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n    }\n\n    handleLinkTensionChange(event, newValue) {\n        this.props.onLinkTensionChange(newValue);\n    }\n\n    getValueText(value) {\n        return `${(value*100).toFixed(0)}%`;\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkTension}\n                    onChange={this.handleLinkTensionChange}\n                    min={0.0}\n                    max={1.0}\n                    step={0.02}\n                    getAriaValueText={this.getValueText}\n                    valueLabelFormat={this.getValueText}\n                    aria-labelledby=\"link-tension-slider\"\n                    valueLabelDisplay=\"on\"\n                    marks={false}\n                />\n                <Typography id=\"link-tension-slider\" gutterBottom>\n                    Link Tension\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkTensionSlider;\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nclass ModeRadioButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n    }\n\n    handleModeChange(event) {\n        this.props.onModeChange(event.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <FormControl>\n                    <FormLabel>Mode</FormLabel>\n                    <RadioGroup defaultValue=\"static\" aria-label=\"mode\" name=\"mode\" value={this.props.mode} onChange={this.handleModeChange}>\n                        <FormControlLabel value=\"static\" control={<Radio />} label=\"Static\" />\n                        <FormControlLabel value=\"dynamic\" control={<Radio />} label=\"Dynamic\" />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default ModeRadioButtons;\n","import React from 'react';\n// import SketchSelector from 'SketchSelector'\n// import SketchProperties from 'sidebar/SketchProperties'\n// import 'sidebar/Sidebar.css';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport \"containers/Sidebar.css\"\n\nimport BallCountSlider from \"sketches/chainball/controls/BallCountSlider\";\nimport LinkDampingSlider from \"sketches/chainball/controls/LinkDampingSlider\";\nimport LinkLengthSlider from \"sketches/chainball/controls/LinkLengthSlider\";\nimport LinkTensionSlider from \"sketches/chainball/controls/LinkTensionSlider\";\nimport ModeRadioButtons from \"sketches/chainball/controls/ModeRadioButtons\";\n\nclass ChainballSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"column\"\n                    justify=\"flex-start\"\n                    alignItems=\"stretch\">\n\n                    <Grid item xs>\n                        <Paper elevation={2}\n                            className=\"PaperRadioControl\">\n                            <ModeRadioButtons\n                                mode={this.props.mode}\n                                onModeChange={this.props.onModeChange} />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper elevation={2}\n                            className=\"PaperSliderControl\">\n                            <BallCountSlider\n                                ballCount={this.props.ballCount}\n                                onBallCountChange={this.props.onBallCountChange} />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper elevation={2}\n                            className=\"PaperSliderControl\">\n                            <LinkLengthSlider\n                                linkLength={this.props.linkLength}\n                                onLinkLengthChange={this.props.onLinkLengthChange} />\n                        </Paper>\n                    </Grid>\n                    {this.props.mode === \"dynamic\" &&\n                        <Grid item xs={12}>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <LinkTensionSlider\n                                    linkTension={this.props.linkTension}\n                                    onLinkTensionChange={this.props.onLinkTensionChange} />\n                            </Paper>\n                        </Grid>\n                    }{this.props.mode === \"dynamic\" &&\n                        <Grid item xs={12}>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <LinkDampingSlider\n                                    linkDamping={this.props.linkDamping}\n                                    onLinkDampingChange={this.props.onLinkDampingChange} />\n                            </Paper>\n                        </Grid>\n                    }\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default ChainballSidebar;","import React from 'react';\nimport SidebarContainer from 'containers/SidebarContainer'\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5Chainball from \"sketches/chainball/p5_chainball\";\nimport ChainballSidebar from \"./ChainballSidebar\"\n\nclass ChainballApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ballCount: 5,\n            linkLength: 50,\n            linkTension: 0.1,\n            linkDamping: 0.4,\n            mode: \"static\",\n            frameRate: \"not yet started\"\n        }\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n        this.handleBallCountChange = this.handleBallCountChange.bind(this);\n        this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n        this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n        this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n    }\n\n    handleModeChange(newValue) {\n        this.setState({\n            mode: newValue\n        });\n    }\n\n    handleBallCountChange(newValue) {\n        this.setState({\n            ballCount: newValue\n        });\n    }\n\n    handleLinkLengthChange(newValue) {\n        this.setState({\n            linkLength: newValue\n        });\n    }\n\n    handleLinkTensionChange(newValue) {\n        this.setState({\n            linkTension: newValue\n        });\n    }\n\n    handleLinkDampingChange(newValue) {\n        this.setState({\n            linkDamping: newValue\n        });\n    }\n\n    handleFrameRateChange(newFrameRateValue) {\n        this.setState({\n            frameRate: newFrameRateValue\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs={3}>\n                        <ChainballSidebar\n                            mode={this.state.mode}\n                            onModeChange={this.handleModeChange}\n                            ballCount={this.state.ballCount}\n                            onBallCountChange={this.handleBallCountChange}\n                            linkLength={this.state.linkLength}\n                            onLinkLengthChange={this.handleLinkLengthChange}\n                            linkTension={this.state.linkTension}\n                            onLinkTensionChange={this.handleLinkTensionChange}\n                            linkDamping={this.state.linkDamping}\n                            onLinkDampingChange={this.handleLinkDampingChange}\n                            frameRate={this.state.frameRate} />\n                    </Grid>\n                    <Grid container item xs={9}>\n                        <SketchContainer\n                            sketch={p5Chainball}\n                            mode={this.state.mode}\n                            ballCount={this.state.ballCount}\n                            linkLength={this.state.linkLength}\n                            linkTension={this.state.linkTension}\n                            linkDamping={this.state.linkDamping}\n                            onFrameRateChange={this.handleFrameRateChange} />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default ChainballApp;","import React from 'react';\n// import Sidebar from 'sketches/chainball/Sidebar'\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport SketchContainer from 'containers/SketchContainer';\n\nconst styles = theme => ({\n    root: {\n        // width: \"100%\",\n        // minHeight: \"100%\",\n        // height: \"100%\",\n        // boxSizing: \"border-box\",\n        // flexGrow: \"1\"\n    }\n});\n\nclass AppContainer extends React.Component {\n\n    render() {\n        return (\n            <div className={this.props.classes.root}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(AppContainer);","import React from 'react';\nimport { List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport \"./AppList.css\"\nclass AppList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div \n                className=\"AppList\"\n                role=\"presentation\"\n                onClick={this.props.toggleDrawer(false)}>\n                <List>\n                    {Array.from(this.props.apps.values()).map(app => (\n                        <ListItem button key={app.name} onClick={this.props.setSelectedApp(app.name)}>\n                            <ListItemText primary={app.displayName}/>\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        )\n    }\n}\n\nexport default AppList;","import React from 'react';\n// import './SketchSelector.css';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\"\nimport withStyles from \"@material-ui/core/styles/withStyles\"\nimport \"./MenuBar.css\"\nimport { AppBar, Toolbar, IconButton, Drawer } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AppList from 'AppList';\n\nclass MenuBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            drawerIsOpen: false\n        };\n\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n\n    toggleDrawer(newValue) {\n        return event => {\n            if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n                return;\n            }\n            this.setState({\n                drawerIsOpen: newValue\n            });\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"MenuBar\">\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\" className=\"Toolbar\">\n                        <IconButton edge=\"start\" onClick={this.toggleDrawer(true)}>\n                            <MenuIcon />\n                        </IconButton>\n                        <Drawer open={this.state.drawerIsOpen} onClose={this.toggleDrawer(false)}>\n                            <AppList \n                                apps={this.props.apps}\n                                toggleDrawer={this.toggleDrawer}\n                                setSelectedApp={this.props.setSelectedApp}/>\n                        </Drawer>\n                        <Typography variant=\"h5\" className=\"SelectedName\">\n                            {this.props.selectedApp.displayName}\n                        </Typography>\n                        <Typography variant=\"body2\" className=\"SelectedVersion\">\n                            v{this.props.selectedApp.version}\n                        </Typography>\n                        <Typography variant=\"body1\" className=\"SelectedDescription Grow\">\n                            {this.props.selectedApp.description}\n                        </Typography>\n                        {/* <div className=\"Grow\" /> */}\n                        <Typography variant=\"body2\" className=\"AppInfo\">\n                            {`\n                            ${this.props.appName} \n                            v${this.props.appVersion}\n                            `}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default MenuBar;","let orbiter = (p) => {\n\n    let planetAngle = 0.0;\n    let moonAngle = 0.0;\n\n    let planetOrbitRadius = 100.0;\n    let moonOrbitRadius = 15.0;\n\n    let planetOrbitSpeed = 0.4\n    let moonOrbitSpeed = 4.5\n\n    let sunRadius = 25.0;\n    let planetRadius = 5.0;\n    let moonRadius = 2.5;\n\n    let sunLocation = [0, 0];\n\n    let planetOrbitSpeedMod = 1.0;\n    let moonOrbitSpeedMod = 1.0;\n\n    let deltaTimeOffset = 0.05;\n\n    let isSunBeingDragged = false;\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n\n        sunLocation = [p.width / 2, p.height / 2]\n\n        p.colorMode(p.HSB);\n        p.angleMode(p.DEGREES);\n        // noCursor();\n\n        p.background(0);\n        p.fill(0);\n    };\n\n    p.draw = function () {\n        if (isSunBeingDragged) {\n            sunLocation[0] += p.movedX;\n            sunLocation[1] += p.movedY;\n        }\n        p.background(0);\n\n        planetOrbitSpeedMod = p.sq((sunLocation[0] / p.width) * 6.0);\n        moonOrbitSpeedMod = p.sq((sunLocation[1] / p.height) * 3.0);\n\n        // get some positions\n        let sunX = sunLocation[0];\n        let sunY = sunLocation[1];\n        let planetX = sunX + planetOrbitRadius * p.cos(planetAngle)\n        let planetY = sunY + planetOrbitRadius * p.sin(planetAngle)\n        let moonX = planetX + moonOrbitRadius * p.cos(moonAngle)\n        let moonY = planetY + moonOrbitRadius * p.sin(moonAngle)\n\n        // sun\n        p.fill(0, 0, 100)\n        p.circle(sunX, sunY, sunRadius * 2);\n        // planet\n        p.fill(0, 0, 100)\n        p.circle(planetX, planetY, planetRadius * 2);\n        // moon\n        p.fill(0, 0, 100)\n        p.circle(moonX, moonY, moonRadius * 2);\n        planetAngle += deltaTimeOffset * p.deltaTime * planetOrbitSpeedMod * planetOrbitSpeed;\n        moonAngle += deltaTimeOffset * p.deltaTime * moonOrbitSpeedMod * moonOrbitSpeed;\n        planetAngle = planetAngle % 360;\n        moonAngle = moonAngle % 360;\n    };\n\n    p.windowResized = function() {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.resizeCanvas(w, h);\n    };\n\n    p.mousePressed = function(event) {\n        if (p.isMouseOverCircle(sunLocation, sunRadius)) {\n            isSunBeingDragged = true;\n        }\n    };\n\n    p.mouseReleased = function(event) {\n        isSunBeingDragged = false;\n    };\n\n    p.isMouseOverCircle = function(circleLoc, circleRadius) {\n        let dx = p.abs(circleLoc[0] - p.mouseX);\n        let dy = p.abs(circleLoc[1] - p.mouseY);\n        let distToCircleCenter = p.sqrt(dx * dx + dy * dy);\n        return distToCircleCenter <= circleRadius;\n    };\n}\n\nexport default orbiter;\n","import React from 'react';\n// import SketchSelector from 'SketchSelector'\n// import SketchProperties from 'sidebar/SketchProperties'\n// import 'sidebar/Sidebar.css';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport \"containers/Sidebar.css\"\n\nimport BallCountSlider from \"sketches/chainball/controls/BallCountSlider\";\nimport LinkDampingSlider from \"sketches/chainball/controls/LinkDampingSlider\";\nimport LinkLengthSlider from \"sketches/chainball/controls/LinkLengthSlider\";\nimport LinkTensionSlider from \"sketches/chainball/controls/LinkTensionSlider\";\nimport ModeRadioButtons from \"sketches/chainball/controls/ModeRadioButtons\";\n\nclass OrbiterSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"column\"\n                    justify=\"flex-start\"\n                    alignItems=\"stretch\">\n\n                    <Grid item xs>\n                        <Paper elevation={2}\n                            className=\"PaperRadioControl\">\n                            <ModeRadioButtons\n                                mode={this.props.mode}\n                                onModeChange={this.props.onModeChange} />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper elevation={2}\n                            className=\"PaperSliderControl\">\n                            <BallCountSlider\n                                ballCount={this.props.ballCount}\n                                onBallCountChange={this.props.onBallCountChange} />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper elevation={2}\n                            className=\"PaperSliderControl\">\n                            <LinkLengthSlider\n                                linkLength={this.props.linkLength}\n                                onLinkLengthChange={this.props.onLinkLengthChange} />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default OrbiterSidebar;","import React from 'react';\nimport SidebarContainer from 'containers/SidebarContainer'\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5Orbiter from \"sketches/orbiter/p5_orbiter\";\nimport OrbiterSidebar from './OrbiterSidebar';\n\nclass OrbiterApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // ballCount: 5,\n            // linkLength: 50,\n            // linkTension: 0.1,\n            // linkDamping: 0.4,\n            // mode: \"static\",\n            // frameRate: \"not yet started\"\n        }\n\n        // this.handleModeChange = this.handleModeChange.bind(this);\n        // this.handleBallCountChange = this.handleBallCountChange.bind(this);\n        // this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n        // this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n        // this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n        // this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n    }\n\n    // handleModeChange(newValue) {\n    //     this.setState({\n    //         mode: newValue\n    //     });\n    // }\n\n    // handleBallCountChange(newValue) {\n    //     this.setState({\n    //         ballCount: newValue\n    //     });\n    // }\n\n    // handleLinkLengthChange(newValue) {\n    //     this.setState({\n    //         linkLength: newValue\n    //     });\n    // }\n\n    // handleLinkTensionChange(newValue) {\n    //     this.setState({\n    //         linkTension: newValue\n    //     });\n    // }\n\n    // handleLinkDampingChange(newValue) {\n    //     this.setState({\n    //         linkDamping: newValue\n    //     });\n    // }\n\n    // handleFrameRateChange(newFrameRateValue) {\n    //     this.setState({\n    //         frameRate: newFrameRateValue\n    //     });\n    // }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs={3}>\n                        <OrbiterSidebar\n                            // mode={this.state.mode}\n                            // onModeChange={this.handleModeChange}\n                            // ballCount={this.state.ballCount}\n                            // onBallCountChange={this.handleBallCountChange}\n                            // linkLength={this.state.linkLength}\n                            // onLinkLengthChange={this.handleLinkLengthChange}\n                            // linkTension={this.state.linkTension}\n                            // onLinkTensionChange={this.handleLinkTensionChange}\n                            // linkDamping={this.state.linkDamping}\n                            // onLinkDampingChange={this.handleLinkDampingChange}\n                            // frameRate={this.state.frameRate} \n                            />\n                    </Grid>\n                    <Grid container item xs={9}>\n                        <SketchContainer\n                            sketch={p5Orbiter}\n                            // mode={this.state.mode}\n                            // ballCount={this.state.ballCount}\n                            // linkLength={this.state.linkLength}\n                            // linkTension={this.state.linkTension}\n                            // linkDamping={this.state.linkDamping}\n                            // onFrameRateChange={this.handleFrameRateChange}\n                            />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default OrbiterApp;","import React from 'react';\nimport ChainballApp from \"sketches/chainball/ChainballApp\"\nimport OrbiterApp from \"sketches/orbiter/OrbiterApp\"\n\nconst appMap = new Map([\n    [\"chainball\", {\n        name: \"chainball\",\n        displayName: \"Chainball\",\n        component: <ChainballApp/>,\n        version: \"1.0\",\n        description: \"2D kinematic demonstration\"\n    }],\n    [\"orbiter\", {\n        name: \"orbiter\",\n        displayName: \"Orbiter\",\n        component: <OrbiterApp/>,\n        version: \"0.1a\",\n        description: \"Orbiter simulation\"\n    }]\n]);\n\nexport default appMap;","import React from 'react';\n// import Sidebar from 'sketches/chainball/Sidebar'\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\"\nimport SketchContainer from 'containers/SketchContainer';\nimport ChainballApp from 'sketches/chainball/ChainballApp';\nimport AppContainer from \"containers/AppContainer\"\nimport MenuBar from \"MenuBar\"\nimport \"./Vixuals.css\"\nimport appMap from \"./AppMap\"\nimport { Route, HashRouter, Switch, Redirect, withRouter } from 'react-router-dom';\n\nconst appName = \"Vixuals\"\nconst appVersion = \"0.1a\"\n\nconst defaultApp = \"chainball\"\n\nclass Vixuals extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // selectedApp: appMap.get(defaultApp)\n        };\n\n        this.handleSelectedAppChange = this.handleSelectedAppChange.bind(this);\n    }\n\n    handleSelectedAppChange(newValue) {\n        return event => {\n            this.setState({\n                redirectLocation: newValue,\n                shouldRedirect: true\n            });\n        }\n        // return <Redirect to={`/${newValue}`}/>\n    }\n\n    render() {\n        if (this.state.shouldRedirect) {\n            this.setState({shouldRedirect: false})\n            return <Redirect to={`/${this.state.redirectLocation}`}/>\n        }\n        return (\n            <div className=\"Vixuals\">\n                {/* <Route \n                path=\"/:app\"> */}\n                    <Grid\n                        container\n                        spacing={0}\n                        direction=\"column\"\n                        wrap='nowrap'>\n                        <Grid item>\n                            {console.log(this.props)}\n                            <MenuBar\n                                appName={appName}\n                                appVersion={appVersion}\n                                selectedApp={appMap.get(this.props.match.params.app)}\n                                setSelectedApp={this.handleSelectedAppChange}\n                                apps={appMap} />\n                        </Grid>\n                        <Grid item>\n                            {appMap.get(this.props.match.params.app).component}\n                        </Grid>\n                    </Grid>\n                {/* </Route>\n                <Route path=\"/\">\n                    <Redirect to={`/${defaultApp}`} />\n                </Route> */}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Vixuals);","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Vixuals from 'Vixuals'\n\nclass VixualsRouter extends React.Component {\n\n    render() {\n        return (\n            <div className=\"VixualsRouter\">\n                <HashRouter>\n                    <Switch>\n                        <Route path=\"/:app\">\n                            <Vixuals/>\n                        </Route>\n                        <Route path=\"/\">\n                            <Redirect to=\"/chainball\"/>\n                        </Route>\n                    </Switch>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\nexport default VixualsRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Vixuals from './Vixuals';\nimport VixualsRouter from './VixualsRouter';\nimport './index.css';\n\nReactDOM.render(<VixualsRouter/>, document.getElementById('root'));"],"sourceRoot":""}