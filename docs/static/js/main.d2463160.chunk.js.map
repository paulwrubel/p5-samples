{"version":3,"sources":["AppList.js","MenuBar.js","containers/SketchContainer.js","sketches/chainball/p5_chainball.js","sketches/chainball/panels/BallCountSlider.js","sketches/chainball/panels/LinkDampingSlider.js","sketches/chainball/panels/LinkLengthSlider.js","sketches/chainball/panels/LinkTensionSlider.js","sketches/chainball/panels/ModeRadioButtons.js","sketches/chainball/ChainballSidebar.js","sketches/chainball/ChainballApp.js","sketches/orbiter/p5_orbiter.js","sketches/orbiter/OrbiterSidebar.js","sketches/orbiter/OrbiterApp.js","sketches/interactivehistogram/p5_interactivehistogram.js","sketches/interactivehistogram/panels/BarHeightScalarSlider.js","sketches/interactivehistogram/InteractiveHistogramSidebar.js","sketches/interactivehistogram/InteractiveHistogramApp.js","sketches/cubegrid/p5_cubegrid.js","sketches/cubegrid/panels/RowCountSlider.js","sketches/cubegrid/panels/ColumnCountSlider.js","sketches/cubegrid/panels/LayerCountSlider.js","sketches/cubegrid/panels/CubeDistanceSlider.js","sketches/cubegrid/panels/CubeLengthSlider.js","sketches/cubegrid/panels/RotationSpeedXSlider.js","sketches/cubegrid/panels/RotationSpeedYSlider.js","sketches/cubegrid/panels/RotationSpeedZSlider.js","sketches/cubegrid/CubeGridSidebar.js","sketches/cubegrid/CubeGridApp.js","sketches/trails/p5_trail.js","sketches/trails/p5_trailart.js","containers/panels/InfoPanel.js","sketches/trails/panels/ModeRadioButtons.js","sketches/trails/panels/ClearButton.js","sketches/trails/TrailsSidebar.js","sketches/trails/TrailsApp.js","sketches/triangles/p5_gravitymode.js","sketches/triangles/p5_bullet.js","sketches/triangles/p5_triangle.js","sketches/triangles/p5_triangles.js","containers/panels/RadioPanel.js","containers/panels/SwitchPanel.js","containers/panels/ButtonPanel.js","sketches/triangles/TrianglesSidebar.js","sketches/triangles/TrianglesApp.js","AppMap.js","Vixuals.js","VixualsRouter.js","index.js"],"names":["AppList","appArray","Array","from","this","props","apps","values","sort","a","b","displayName","toLowerCase","console","log","className","role","onClick","toggleDrawer","List","map","app","ListItem","button","key","name","setSelectedApp","ListItemText","primary","React","Component","MenuBar","state","isMenuDrawerOpen","handleMenuButtonToggle","bind","newValue","event","type","setState","creationDate","Date","selectedApp","AppBar","position","Toolbar","variant","isControlsPanelOpen","Tooltip","title","IconButton","edge","onControlsPanelToggle","Typography","version","description","getFullYear","appName","appVersion","Drawer","open","onClose","anchor","SketchContainer","p5Sketch","other","sketch","chainball","p","core","frameRateCallback","coreSpeedCallback","velocityArrow","accelerationArrow","linkingLine","didSetup","balls","frameRates","displayFrameRate","Modes","currentMode","defaultFollowDistance","tension","damping","setup","w","select","width","h","height","createCanvas","colorMode","HSB","angleMode","DEGREES","frameRate","radius","createVector","velocity","acceleration","minColor","color","maxColor","isBeingDragged","i","followDist","pos","copy","length","push","followDistance","minCompressionColor","maxCompressionColor","minTensionColor","maxTensionColor","staticColor","draw","checkResize","background","mouseVector","mouseX","mouseY","mouseIsOverCanvas","thisBall","parentBall","strokeWeight","stroke","targetDistance","realDistance","p5","Vector","sub","mag","RGB","lerpColor","reRange","line","x","y","pop","ball","fill","circle","startPosition","add","setMag","vector","limit","forceIsBeingApplied","dist","accelerationArrowColor","drawArrow","mult","velocityArrowColor","frameCount","shift","reduce","sum","num","toFixed","rebound","toParent","windowResized","resize","resizeCanvas","mousePressed","mouseReleased","keyTyped","setBallCount","newLength","removeBalls","addBalls","count","modifyFollowDistance","delta","forEach","setFollowDistance","newDist","fromVector","toVector","arrowColor","translate","rotate","heading","triangle","arrowSize","in_min","in_max","out_min","out_max","myCustomRedrawAccordingToNewPropsHandler","newProps","mode","ballCount","linkLength","linkTension","linkDamping","onFrameRateChange","onCoreSpeedChange","BallCountSlider","handleBallCountChange","onBallCountChange","Slider","defaultValue","value","onChange","min","max","step","aria-labelledby","valueLabelDisplay","id","gutterBottom","LinkDampingSlider","handleLinkDampingChange","onLinkDampingChange","getAriaValueText","getValueText","valueLabelFormat","marks","LinkLengthSlider","handleLinkLengthChange","onLinkLengthChange","LinkTensionSlider","handleLinkTensionChange","onLinkTensionChange","ModeRadioButtons","handleModeChange","onModeChange","target","FormControl","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","ChainballSidebar","Grid","container","spacing","direction","wrap","item","xs","Paper","elevation","coreSpeed","ChainballApp","handleFrameRateChange","handleCoreSpeedChange","newFrameRateValue","newCoreSpeedValue","alignItems","p5Chainball","orbiter","planetSpeedCallback","moonSpeedCallback","planetAngle","moonAngle","sunLocation","planetOrbitSpeedMod","moonOrbitSpeedMod","isSunBeingDragged","sunLocationOffset","sq","planetX","cos","planetY","sin","moonX","moonY","sunRadius","planetRadius","moonRadius","deltaTime","isMouseOverCircle","location","circleLoc","circleRadius","dx","abs","dy","sqrt","onPlanetSpeedChange","onMoonSpeedChange","OrbiterSidebar","planetSpeed","moonSpeed","OrbiterApp","handlePlanetSpeedChange","handleMoonSpeedChange","newPlanetSpeedValue","newMoonSpeedValue","p5Orbiter","InteractiveHistogram","colored","heights","barHeightScalar","bgHue","bgSat","rectMode","CORNERS","y2","x1","y1","x2","xBar","temp","rectHeight","rectWidth","hue","sat","rect","noStroke","floor","barCount","BarHeightScalarSlider","handleBarHeightScalarChange","onBarHeightScalarChange","InteractiveHistogramSidebar","InteractiveHistogramApp","newBarHeightScalarValue","p5InteractiveHistogram","cubegrid","cubeCountCallback","rowCount","columnCount","layerCount","cameraDistance","cubeLength","cubeDistance","rotationStateX","rotationStateY","rotationAngleX","deltaRotationAngleX","rotationAngleY","deltaRotationAngleY","rotationAngleZ","deltaRotationAngleZ","cubeColors","isBeingRotated","WEBGL","eyeZ","tan","PI","perspective","smooth","setupColors","movedX","movedY","rotateX","radians","rotateY","rotateZ","z","box","calculateFrameRate","updateCallbacks","j","k","random","isMouseOverCanvas","mouseWheel","rotationSpeedX","rotationSpeedY","rotationSpeedZ","onCubeCountChange","RowCountSlider","handleRowCountChange","onRowCountChange","ColumnCountSlider","handleColumnCountChange","onColumnCountChange","LayerCountSlider","handleLayerCountChange","onLayerCountChange","CubeDistanceSlider","handleCubeDistanceChange","onCubeDistanceChange","CubeLengthSlider","handleCubeLengthChange","onCubeLengthChange","RotationSpeedXSlider","handleRotationSpeedChange","onRotationSpeedChange","RotationSpeedYSlider","RotationSpeedZSlider","CubeGridSidebar","cubeCount","onRotationSpeedXChange","onRotationSpeedYChange","onRotationSpeedZChange","CubeGridApp","handleCubeCountChange","handleRotationSpeedXChange","handleRotationSpeedYChange","handleRotationSpeedZChange","newCubeCountValue","newRowCountValue","newColumnCountValue","newLayerCountValue","newCubeDistanceValue","newCubeLengthValue","p5CubeGrid","Trail","p_","x_","y_","angle_","mag_","isComplete","angle","r","ellipse","trails","activeTrailCountCallback","setClearScreenCallback","update","splice","v1","v2","atan2","TWO_PI","degrees","mouseDragged","mouseButton","LEFT","mouseMovement","clearScreen","onActiveTrailCountChange","InfoPanel","info","fact","text","ClearButton","handleClick","Button","TrailsSidebar","activeTrailCount","onClearButtonPress","TrailsApp","handleActiveTrailCountChange","handleClearButtonPress","setClearButtonPressFunc","clearButtonPressFunc","p5Trails","GravityMode","OFF","SIMPLE","TRUE","POINT","MULTI_POINT","Bullet","pos_","velocity_","bounce_","FILL","STROKE","STROKE_WEIGHT","RADIUS","MAG","GRAVITY_CONST","BRIGHT","markedForDelete","bounce","gravity","getBounceMode","gm","getGravityMode","set","gravityPoint","getGravityPoint","gravForces","getGravityList","gravityVector","gravDist","forceVector","getDecay","PHYSICS_SCALAR","getBorderWeight","noFill","Triangle","SAT","aimPoint","bullets","bulletsToRemove","getAimPoint","getKeyCodes","LEFT_ARROW","RIGHT_ARROW","deltaPos","acos","UP_ARROW","DOWN_ARROW","normalize","bullet","filter","includes","bulletPos","triangles","informationCallback","triangleUpdateTime","triangleDrawTime","bulletUpdateTime","bulletDrawTime","isClearBulletsCallbackSet","isClearTrianglesCallbackSet","isClearGravityPointsCallbackSet","GenerationMode","AimMode","PlacementMode","gravPoint","generationMode","isBorderEnabled","gravityMode","placementMode","aimMode","fixedPoint","isAutoFireEnabled","gravList","bulletCount","mouseButtons","keys","keyCodes","c","P2D","disableRightClick","canvas","ellipseMode","start","end","CORNER","BORDER_WEIGHT","v","drawCrosshair","window","performance","now","RIGHT","handleAdd","BACKSPACE","remove","addBullet","CROSSHAIRS_WEIGHT","Error","clearTriangles","clearBullets","clearGravityPoints","isBounceEnabled","getKeys","keyPressed","kc","keyCode","keyReleased","mb","Map","oncontextmenu","preventDefault","setClearTrianglesCallback","setClearBulletsCallback","setClearGravityPointsCallback","onInformationChange","RadioPanel","handleChange","panelKey","buttons","SwitchPanel","FormGroup","switches","s","Switch","checked","ButtonPanel","justify","TrianglesSidebar","information","onPlacementModeChange","onGenerationModeChange","onAimModeChange","onGravityModeChange","onBorderChange","onAutoFireChange","undefined","e","onClearTrianglesButtonClick","onClearBulletsButtonClick","onClearGravityPointsButtonClick","TrianglesApp","handleInformationChange","handleGenerationModeChange","handleGravityModeChange","handleAimModeChange","handlePlacementModeChange","handleBorderChange","handleAutoFireChange","handleClearTrianglesButtonClick","setClearTrianglesButtonClickFunc","handleClearBulletsButtonClick","setClearBulletsButtonClickFunc","handleClearGravityPointsButtonClick","setClearGravityPointsButtonClickFunc","clearTrianglesButtonClickFunc","clearBulletsButtonClickFunc","clearGravityPointsButtonClickFunc","p5Triangles","appMap","component","Vixuals","handleSelectedAppChange","handleControlsPanelToggle","redirectLocation","shouldRedirect","to","match","params","defaultParam","App","get","withRouter","VixualsRouter","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2463160.chunk.js","sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport \"./AppList.css\"\nclass AppList extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        let appArray = Array.from(this.props.apps.values());\n        // appArray.sort((a, b) => {\n        //     let aDate = new Date(a.creationDate);\n        //     let bDate = new Date(b.creationDate);\n        //     console.log(aDate);\n        //     return aDate.getTime() - bDate.getTime();\n        // });\n        appArray.sort((a, b) => {\n            let isABeforeB = a.displayName.toLowerCase() < b.displayName.toLowerCase();\n            return isABeforeB ? -1 : 1;\n        });\n        console.log(appArray);\n        return (\n            <div \n                className=\"AppList\"\n                role=\"presentation\"\n                onClick={this.props.toggleDrawer(false)}>\n                <List>\n                    {appArray.map(app => (\n                        <ListItem button key={app.name} onClick={this.props.setSelectedApp(app.name)}>\n                            <ListItemText primary={app.displayName}/>\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        )\n    }\n}\n\nexport default AppList;","import React from 'react';\nimport \"./MenuBar.css\";\nimport { Typography, AppBar, Toolbar, IconButton, Drawer, Tooltip } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport AppList from './AppList';\n\nclass MenuBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isMenuDrawerOpen: false\n        };\n\n        this.handleMenuButtonToggle = this.handleMenuButtonToggle.bind(this);\n    }\n\n    handleMenuButtonToggle(newValue) {\n        return event => {\n            if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n                return;\n            }\n            this.setState({\n                isMenuDrawerOpen: newValue\n            });\n        };\n    }\n\n    render() {\n        let creationDate = new Date(this.props.selectedApp.creationDate);\n        return (\n            <div className=\"MenuBar\">\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\" className=\"Toolbar\">\n                        {this.props.isControlsPanelOpen &&\n                            <Tooltip title=\"Collapse Controls\">\n                                <IconButton edge=\"start\" onClick={this.props.onControlsPanelToggle(false)}>\n                                    <ArrowBackIcon\n                                        className=\"AppBarButton\" />\n                                </IconButton>\n                            </Tooltip>\n                        }{!this.props.isControlsPanelOpen &&\n                            <Tooltip title=\"Expand Controls\">\n                                <IconButton edge=\"start\" onClick={this.props.onControlsPanelToggle(true)}>\n                                    <ArrowForwardIcon\n                                        className=\"AppBarButton\" />\n                                </IconButton>\n                            </Tooltip>\n                        }\n                        <Typography variant=\"h5\" className=\"SelectedName\">\n                            {this.props.selectedApp.displayName}\n                        </Typography>\n                        <Typography variant=\"body2\" className=\"SelectedVersion\">\n                            v{this.props.selectedApp.version}\n                        </Typography>\n                        <Typography variant=\"body1\" className=\"SelectedDescription Grow\">\n                            {this.props.selectedApp.description} - ({creationDate.getFullYear()})\n                        </Typography>\n                        {/* <div className=\"Grow\" /> */}\n                        <Typography variant=\"body2\" className=\"AppInfo\">\n                            {`\n                            ${this.props.appName} \n                            v${this.props.appVersion}\n                            `}\n                        </Typography>\n                        <Tooltip title=\"Open Menu\">\n                            <IconButton edge=\"end\" onClick={this.handleMenuButtonToggle(true)}>\n                                <MenuIcon\n                                    className=\"AppBarButton\" />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    open={this.state.isMenuDrawerOpen}\n                    onClose={this.handleMenuButtonToggle(false)}\n                    anchor=\"right\">\n                    <AppList\n                        apps={this.props.apps}\n                        toggleDrawer={this.handleMenuButtonToggle}\n                        setSelectedApp={this.props.setSelectedApp} />\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default MenuBar;","import React from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport \"./SketchContainer.css\"\n\nclass SketchContainer extends React.Component {\n    render() {\n        const { p5Sketch, ...other } = this.props;\n        return (\n            <div className=\"SketchContainer\">\n                <P5Wrapper className=\"P5Wrapper\"\n                    sketch={p5Sketch}\n                    {...other}>\n                </P5Wrapper>\n            </div>\n        );\n    }\n}\n\nexport default SketchContainer;","import p5 from 'p5';\n\nlet chainball = (p) => {\n\n    let didSetup = false;\n\n    let core;\n    let balls = [];\n    let frameRates = [];\n    let displayFrameRate = 0;\n\n    const Modes = {\n        STATIC: \"static\",\n        DYNAMIC: \"dynamic\"\n    };\n\n    let currentMode = Modes.STATIC;\n\n    let frameRateCallback;\n    let coreSpeedCallback;\n\n    let ballCount = 5;\n    let environmentFriction = 0.9995;\n\n    let drawLines = true;\n\n    let defaultFollowDistance = 50;\n    let defaultBallRadius = 10;\n\n    let tension = 0.1;\n    let damping = 0.4;\n\n    let velocityArrow;\n    let accelerationArrow;\n    let linkingLine;\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n        // p.createCanvas(p.windowWidth, p.windowHeight);\n        // canvas.parent('Sketch');\n        // canvas.style('display', 'block');\n\n        p.colorMode(p.HSB);\n        p.angleMode(p.DEGREES);\n        p.frameRate(60);\n        // noCursor();\n\n        core = {\n            radius: 25,\n            position: p.createVector(p.width / 2, p.height / 2),\n            velocity: p.createVector(0, 0),\n            acceleration: p.createVector(0, 0),\n            minColor: p.color(240, 0, 100),\n            maxColor: p.color(240, 100, 100),\n            isBeingDragged: false\n        };\n\n        for (let i = 0; i < ballCount; i++) {\n            let followDist;\n            let pos;\n            if (i === 0) {\n                followDist = defaultFollowDistance + (core.radius - defaultBallRadius);\n                pos = core.position.copy();\n            } else {\n                followDist = defaultFollowDistance;\n                console.log(balls.length)\n                pos = balls[balls.length-1].position.copy();\n                console.log(pos)\n            }\n            balls.push({\n                radius: defaultBallRadius,\n                position: pos,\n                velocity: p.createVector(0, 0),\n                followDistance: followDist,\n                minColor: p.color(0, 0, 100),\n                maxColor: p.color(0, 100, 100)\n            });\n        }\n\n        velocityArrow = {\n            minColor: p.color(240, 25, 100),\n            maxColor: p.color(240, 100, 100)\n        };\n\n        accelerationArrow = {\n            minColor: p.color(0, 25, 100),\n            maxColor: p.color(0, 100, 100),\n        };\n\n        linkingLine = {\n            minCompressionColor: p.color(240, 0, 100, 0.5),\n            maxCompressionColor: p.color(240, 100, 100, 0.5),\n            minTensionColor: p.color(0, 0, 100, 0.5),\n            maxTensionColor: p.color(0, 100, 100, 0.5),\n            staticColor: p.color(0, 0, 100, 0.5)\n        };\n\n        didSetup = true;\n    };\n\n    p.draw = function () {\n        p.checkResize();\n\n        p.background(0);\n        let mouseVector = p.createVector(p.mouseX, p.mouseY);\n        let mouseIsOverCanvas =\n            p.mouseX > 0 && p.mouseX < p.width &&\n            p.mouseY > 0 && p.mouseY < p.height;\n\n        /* DRAWING */\n\n        // draw connecting lines\n        if (drawLines) {\n            for (let i = 0; i < balls.length; i++) {\n                let thisBall = balls[i];\n                let parentBall;\n                if (i === 0) {\n                    parentBall = core;\n                } else {\n                    parentBall = balls[i - 1];\n                }\n                p.push();\n                p.strokeWeight(5);\n                if (currentMode === Modes.STATIC) {\n                    p.stroke(linkingLine.staticColor);\n                } else {\n                    let targetDistance = thisBall.followDistance;\n                    let realDistance = p5.Vector.sub(\n                        parentBall.position,\n                        thisBall.position).mag();\n                    p.colorMode(p.RGB);\n                    if (targetDistance > realDistance) {\n                        p.stroke(p.lerpColor(\n                            linkingLine.minCompressionColor,\n                            linkingLine.maxCompressionColor,\n                            p.reRange(realDistance / targetDistance, 1, 0.5, 0, 1)));\n                    } else {\n                        p.stroke(p.lerpColor(\n                            linkingLine.minTensionColor,\n                            linkingLine.maxTensionColor,\n                            p.reRange(realDistance / targetDistance, 1, 4, 0, 1)));\n                    }\n                    p.colorMode(p.HSB);\n                }\n                p.line(thisBall.position.x, thisBall.position.y, parentBall.position.x, parentBall.position.y);\n                p.pop();\n            }\n        }\n\n        // draw the balls\n        for (let i=balls.length-1; i>=0; i--) {\n            let ball = balls[i];   \n            p.fill(ball.minColor);\n            p.circle(ball.position.x, ball.position.y, ball.radius * 2);\n        }\n        // balls.forEach(ball => {\n        //     p.fill(ball.minColor);\n        //     p.circle(ball.position.x, ball.position.y, ball.radius * 2);\n        // })\n\n        // draw the core\n        // colorMode(RGB);\n        p.fill(core.minColor);\n        // colorMode(HSB);\n        p.circle(core.position.x, core.position.y, core.radius * 2)\n\n        // draw force arrows\n        accelerationArrow.startPosition = p5.Vector.add(core.position, p5.Vector.sub(mouseVector, core.position).setMag(core.radius));\n        accelerationArrow.vector = p5.Vector.sub(mouseVector, accelerationArrow.startPosition);\n        accelerationArrow.vector.limit(200);\n\n        if (mouseIsOverCanvas && core.forceIsBeingApplied) {\n            if (mouseVector.dist(core.position) > core.radius) {\n                p.colorMode(p.RGB);\n                let accelerationArrowColor = p.lerpColor(\n                    accelerationArrow.minColor,\n                    accelerationArrow.maxColor,\n                    accelerationArrow.vector.mag() / 200);\n                p.colorMode(p.HSB);\n                p.drawArrow(\n                    accelerationArrow.startPosition,\n                    accelerationArrow.vector,\n                    accelerationArrowColor);\n            }\n        }\n\n        velocityArrow.startPosition = p5.Vector.add(core.position, core.velocity.copy().setMag(core.radius));\n        velocityArrow.vector = core.velocity.copy().mult(10);\n\n        if (core.velocity.mag() > 0.5) {\n            p.colorMode(p.RGB);\n            let velocityArrowColor = p.lerpColor(\n                velocityArrow.minColor,\n                velocityArrow.maxColor,\n                velocityArrow.vector.mag() / 250);\n            p.colorMode(p.HSB);\n            p.drawArrow(\n                velocityArrow.startPosition,\n                velocityArrow.vector,\n                velocityArrowColor);\n        }\n\n        // calc framerate\n        if (p.frameCount % 10 === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n        }\n\n        // callbacks\n        if (p.frameCount % 10 === 0) {\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n            if (typeof coreSpeedCallback !== \"undefined\") {\n                coreSpeedCallback(core.velocity.mag().toFixed(2));\n            }\n        }\n        // $('#framerate').text(`FPS: ${displayFrameRate.toFixed(0)}`);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`fps: ${displayFrameRate.toFixed(0)}`, 5, 35);\n\n\n\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`ball count: ${balls.length}`, 5, 65);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`follow dist: ${defaultFollowDistance}`, 5, 95);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`size: ${p.windowWidth}x${p.windowHeight}`, 5, 125);\n        // $('#mode').text(`mode: ${currentMode}`);\n\n        /* UPDATING */\n\n        // update core\n        if (mouseIsOverCanvas && core.forceIsBeingApplied && mouseVector.dist(core.position) > core.radius) {\n            core.acceleration = p5.Vector.mult(accelerationArrow.vector, 0.0005);\n        } else {\n            core.acceleration = p.createVector(0, 0);\n        }\n\n        core.velocity.add(core.acceleration);\n        core.velocity.mult(environmentFriction);\n\n        core.position.add(core.velocity);\n        p.rebound(core);\n\n\n        // update balls\n        for (let i = 0; i < balls.length; i++) {\n            let thisBall = balls[i];\n            let parentBall;\n            if (i === 0) {\n                parentBall = core;\n            } else {\n                parentBall = balls[i - 1];\n            }\n\n            let toParent = p5.Vector.sub(parentBall.position, thisBall.position);\n            toParent.setMag(toParent.mag() - thisBall.followDistance);\n            if (currentMode === Modes.STATIC) {\n                thisBall.velocity.mult(environmentFriction);\n                thisBall.position.add(toParent);\n            } else {\n                // let goalPosition = p5.Vector.add(thisBall.position, toParent);\n                thisBall.acceleration = toParent.mult(tension);\n                thisBall.velocity.add(thisBall.acceleration);\n                thisBall.velocity.mult(1.0 - damping);\n                thisBall.position.add(thisBall.velocity);\n            }\n\n            p.rebound(thisBall);\n\n        }\n\n    };\n\n    p.windowResized = function () {\n        p.resize();\n    };\n\n    p.checkResize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        if (w !== p.width || h !== p.height) {\n            p.resize();\n        }\n    }\n\n    p.resize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.resizeCanvas(w, h);\n        console.log(\"did resize\");\n    }\n\n    p.mousePressed = function (event) {\n        core.forceIsBeingApplied = true;\n    };\n\n    p.mouseReleased = function (event) {\n        core.forceIsBeingApplied = false;\n    };\n\n    p.keyTyped = function () {\n    };\n\n    p.setBallCount = function (newLength) {\n        if (balls.length > newLength) {\n            p.removeBalls(balls.length - newLength);\n        } else if (balls.length < newLength) {\n            p.addBalls(newLength - balls.length);\n        }\n    }\n\n    p.addBalls = function (count) {\n        for (let i = 0; i < count; i++) {\n            balls.push({\n                radius: defaultBallRadius,\n                position: balls[balls.length-1].position.copy(),\n                velocity: p.createVector(0, 0),\n                followDistance: defaultFollowDistance,\n                minColor: p.color(0, 0, 100),\n                maxColor: p.color(0, 100, 100)\n            });\n        }\n    };\n\n    p.removeBalls = function (count) {\n        for (let i = 0; i < count && balls.length > 1; i++) {\n            balls.pop();\n        }\n    };\n\n    p.modifyFollowDistance = function (delta) {\n        if (defaultFollowDistance + delta >= 0) {\n            balls.forEach(ball => {\n                ball.followDistance += delta;\n            });\n            defaultFollowDistance += delta;\n        }\n    };\n\n    p.setFollowDistance = function (newDist) {\n        p.modifyFollowDistance(newDist - defaultFollowDistance);\n    };\n\n    p.rebound = function (ball) {\n        if (ball.position.x > p.width - ball.radius) {\n            ball.position.x = p.width - ball.radius;\n            ball.velocity.x *= -1;\n        }\n        if (ball.position.x < ball.radius) {\n            ball.position.x = ball.radius;\n            ball.velocity.x *= -1;\n        }\n        if (ball.position.y > p.height - ball.radius) {\n            ball.position.y = p.height - ball.radius;\n            ball.velocity.y *= -1;\n        }\n        if (ball.position.y < ball.radius) {\n            ball.position.y = ball.radius;\n            ball.velocity.y *= -1;\n        }\n    };\n\n    p.drawArrow = function (fromVector, toVector, arrowColor) {\n        p.push();\n        p.stroke(arrowColor);\n        p.strokeWeight(2);\n        p.fill(arrowColor);\n        p.translate(fromVector.x, fromVector.y);\n        p.line(0, 0, toVector.x, toVector.y);\n        p.rotate(toVector.heading());\n        let arrowSize = 3;\n        p.translate(toVector.mag() - arrowSize, 0);\n        p.triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n        p.pop();\n    };\n\n    p.reRange = function (num, in_min, in_max, out_min, out_max) {\n        return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    };\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        if (didSetup) {\n            if (typeof newProps.mode !== \"undefined\") {\n                currentMode = newProps.mode;\n            }\n            if (typeof newProps.ballCount !== \"undefined\" && balls.length !== newProps.ballCount) {\n                p.setBallCount(newProps.ballCount);\n            }\n            if (typeof newProps.linkLength !== \"undefined\" && defaultFollowDistance !== newProps.linkLength) {\n                p.setFollowDistance(newProps.linkLength);\n            }\n            if (typeof newProps.linkTension !== \"undefined\" && tension !== newProps.linkTension) {\n                tension = newProps.linkTension;\n            }\n            if (typeof newProps.linkDamping !== \"undefined\" && damping !== newProps.linkDamping) {\n                damping = newProps.linkDamping;\n            }\n        }\n        if (typeof newProps.onFrameRateChange !== \"undefined\") {\n            frameRateCallback = newProps.onFrameRateChange;\n        }\n        if (typeof newProps.onCoreSpeedChange !== \"undefined\") {\n            coreSpeedCallback = newProps.onCoreSpeedChange;\n        }\n    };\n\n};\n\nexport default chainball;","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass BallCountSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleBallCountChange = this.handleBallCountChange.bind(this);\n    }\n\n    handleBallCountChange(event, newValue) {\n        this.props.onBallCountChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={5}\n                    value={this.props.ballCount || 5}\n                    onChange={this.handleBallCountChange}\n                    min={5}\n                    max={500}\n                    step={5}\n                    aria-labelledby=\"ball-count-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"ball-count-slider\" gutterBottom>\n                    Ball Count\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default BallCountSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkDampingSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n    }\n\n    handleLinkDampingChange(event, newValue) {\n        this.props.onLinkDampingChange(newValue);\n    }\n\n    getValueText(value) {\n        return `${(value*100).toFixed(0)}%`;\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkDamping}\n                    onChange={this.handleLinkDampingChange}\n                    min={0.0}\n                    max={1.0}\n                    step={0.02}\n                    getAriaValueText={this.getValueText}\n                    valueLabelFormat={this.getValueText}\n                    aria-labelledby=\"link-damping-slider\"\n                    valueLabelDisplay=\"on\"\n                    marks={false}\n                />\n                <Typography id=\"link-damping-slider\" gutterBottom>\n                    Link Damping\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkDampingSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkLengthSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n    }\n\n    handleLinkLengthChange(event, newValue) {\n        this.props.onLinkLengthChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkLength}\n                    onChange={this.handleLinkLengthChange}\n                    min={0}\n                    max={800}\n                    step={10}\n                    // getAriaValueText={() => `this.props.ballCount`}\n                    aria-labelledby=\"link-length-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"link-length-slider\" gutterBottom>\n                    Link Length\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkLengthSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkTensionSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n    }\n\n    handleLinkTensionChange(event, newValue) {\n        this.props.onLinkTensionChange(newValue);\n    }\n\n    getValueText(value) {\n        return `${(value*100).toFixed(0)}%`;\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkTension}\n                    onChange={this.handleLinkTensionChange}\n                    min={0.0}\n                    max={1.0}\n                    step={0.02}\n                    getAriaValueText={this.getValueText}\n                    valueLabelFormat={this.getValueText}\n                    aria-labelledby=\"link-tension-slider\"\n                    valueLabelDisplay=\"on\"\n                    marks={false}\n                />\n                <Typography id=\"link-tension-slider\" gutterBottom>\n                    Link Tension\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkTensionSlider;\n","import React from 'react';\nimport { Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core';\n\nclass ModeRadioButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n    }\n\n    handleModeChange(event) {\n        this.props.onModeChange(event.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <FormControl>\n                    <FormLabel>Mode</FormLabel>\n                    <RadioGroup defaultValue=\"static\" aria-label=\"mode\" name=\"mode\" value={this.props.mode} onChange={this.handleModeChange}>\n                        <FormControlLabel value=\"static\" control={<Radio />} label=\"Static\" />\n                        <FormControlLabel value=\"dynamic\" control={<Radio />} label=\"Dynamic\" />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default ModeRadioButtons;\n","import React from 'react';\nimport { Grid, Paper, Drawer, Typography } from '@material-ui/core';\nimport \"containers/Sidebar.css\";\n\nimport BallCountSlider from \"sketches/chainball/panels/BallCountSlider\";\nimport LinkDampingSlider from \"sketches/chainball/panels/LinkDampingSlider\";\nimport LinkLengthSlider from \"sketches/chainball/panels/LinkLengthSlider\";\nimport LinkTensionSlider from \"sketches/chainball/panels/LinkTensionSlider\";\nimport ModeRadioButtons from \"sketches/chainball/panels/ModeRadioButtons\";\n\nclass ChainballSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Drawer\n                    className=\"SidebarDrawer\"\n                    variant=\"persistent\"\n                    open={this.props.isControlsPanelOpen}>\n                    <Grid\n                        className=\"SidebarGrid\"\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        wrap=\"nowrap\">\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperInformation\">\n                                <Typography \n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    FPS: {this.props.frameRate}\n                                </Typography>\n                                <Typography \n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    Core Speed: {this.props.coreSpeed}\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperRadioControl\">\n                                <ModeRadioButtons\n                                    mode={this.props.mode}\n                                    onModeChange={this.props.onModeChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <BallCountSlider\n                                    ballCount={this.props.ballCount}\n                                    onBallCountChange={this.props.onBallCountChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <LinkLengthSlider\n                                    linkLength={this.props.linkLength}\n                                    onLinkLengthChange={this.props.onLinkLengthChange} />\n                            </Paper>\n                        </Grid>\n                        {this.props.mode === \"dynamic\" &&\n                            <Grid item xs={12}>\n                                <Paper elevation={2}\n                                    className=\"PaperSliderControl\">\n                                    <LinkTensionSlider\n                                        linkTension={this.props.linkTension}\n                                        onLinkTensionChange={this.props.onLinkTensionChange} />\n                                </Paper>\n                            </Grid>\n                        }{this.props.mode === \"dynamic\" &&\n                            <Grid item xs={12}>\n                                <Paper elevation={2}\n                                    className=\"PaperSliderControl\">\n                                    <LinkDampingSlider\n                                        linkDamping={this.props.linkDamping}\n                                        onLinkDampingChange={this.props.onLinkDampingChange} />\n                                </Paper>\n                            </Grid>\n                        }\n                    </Grid>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default ChainballSidebar;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5Chainball from \"sketches/chainball/p5_chainball\";\nimport ChainballSidebar from \"./ChainballSidebar\"\n\nclass ChainballApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ballCount: 5,\n            linkLength: 50,\n            linkTension: 0.1,\n            linkDamping: 0.4,\n            mode: \"static\",\n        }\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n        this.handleBallCountChange = this.handleBallCountChange.bind(this);\n        this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n        this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n        this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n        this.handleCoreSpeedChange = this.handleCoreSpeedChange.bind(this);\n    }\n\n    handleModeChange(newValue) {\n        this.setState({\n            mode: newValue\n        });\n    }\n\n    handleBallCountChange(newValue) {\n        this.setState({\n            ballCount: newValue\n        });\n    }\n\n    handleLinkLengthChange(newValue) {\n        this.setState({\n            linkLength: newValue\n        });\n    }\n\n    handleLinkTensionChange(newValue) {\n        this.setState({\n            linkTension: newValue\n        });\n    }\n\n    handleLinkDampingChange(newValue) {\n        this.setState({\n            linkDamping: newValue\n        });\n    }\n\n    handleFrameRateChange(newFrameRateValue) {\n        this.setState({\n            frameRate: newFrameRateValue\n        });\n    }\n\n    handleCoreSpeedChange(newCoreSpeedValue) {\n        this.setState({\n            coreSpeed: newCoreSpeedValue\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs>\n                        <ChainballSidebar\n                            mode={this.state.mode}\n                            onModeChange={this.handleModeChange}\n                            ballCount={this.state.ballCount}\n                            onBallCountChange={this.handleBallCountChange}\n                            linkLength={this.state.linkLength}\n                            onLinkLengthChange={this.handleLinkLengthChange}\n                            linkTension={this.state.linkTension}\n                            onLinkTensionChange={this.handleLinkTensionChange}\n                            linkDamping={this.state.linkDamping}\n                            onLinkDampingChange={this.handleLinkDampingChange}\n                            \n                            frameRate={this.state.frameRate}\n                            coreSpeed={this.state.coreSpeed}\n                            \n                            isControlsPanelOpen={this.props.isControlsPanelOpen} />\n                    </Grid>\n                    <Grid container item xs={this.props.isControlsPanelOpen ? 9 : 12}>\n                        <SketchContainer\n                            sketch={p5Chainball}\n                            mode={this.state.mode}\n                            ballCount={this.state.ballCount}\n                            linkLength={this.state.linkLength}\n                            linkTension={this.state.linkTension}\n                            linkDamping={this.state.linkDamping}\n\n                            onFrameRateChange={this.handleFrameRateChange}\n                            onCoreSpeedChange={this.handleCoreSpeedChange} />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default ChainballApp;","let orbiter = (p) => {\n\n    let frameRates = [];\n    let displayFrameRate = 0;\n\n    let planetAngle = 0.0;\n    let moonAngle = 0.0;\n\n    let planetOrbitRadius = 100.0;\n    let moonOrbitRadius = 15.0;\n\n    let planetOrbitSpeed = 0.4\n    let moonOrbitSpeed = 4.5\n\n    let sunRadius = 25.0;\n    let planetRadius = 5.0;\n    let moonRadius = 2.5;\n\n    let sunLocation = p.createVector(0, 0);\n\n    let planetOrbitSpeedMod = 1.0;\n    let moonOrbitSpeedMod = 1.0;\n\n    let deltaTimeOffset = 0.05;\n\n    let isSunBeingDragged = false;\n    let sunLocationOffset = p.createVector(0, 0);\n\n    let frameRateCallback;\n    let planetSpeedCallback;\n    let moonSpeedCallback;\n\n    // let didSetup = false;\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n\n        sunLocation = p.createVector(p.width / 2, p.height / 2);\n\n        p.colorMode(p.HSB);\n        p.angleMode(p.DEGREES);\n        // noCursor();\n\n        p.background(0);\n        p.fill(0);\n\n        // didSetup = true;\n    };\n\n    p.draw = function () {\n        p.checkResize();\n\n        if (isSunBeingDragged) {\n            sunLocation.x = p.mouseX + sunLocationOffset.x;\n            sunLocation.y = p.mouseY + sunLocationOffset.y;\n        }\n\n        p.rebound(sunLocation, sunRadius);\n\n        p.background(0);\n\n        planetOrbitSpeedMod = p.sq((sunLocation.x / p.width) * 6.0);\n        moonOrbitSpeedMod = p.sq((sunLocation.y / p.height) * 3.0);\n\n        // get some positions\n        let planetX = sunLocation.x + planetOrbitRadius * p.cos(planetAngle)\n        let planetY = sunLocation.y + planetOrbitRadius * p.sin(planetAngle)\n        let moonX = planetX + moonOrbitRadius * p.cos(moonAngle)\n        let moonY = planetY + moonOrbitRadius * p.sin(moonAngle)\n\n        // sun\n        p.fill(0, 0, 100)\n        p.circle(sunLocation.x, sunLocation.y, sunRadius * 2);\n        // planet\n        p.fill(0, 0, 100)\n        p.circle(planetX, planetY, planetRadius * 2);\n        // moon\n        p.fill(0, 0, 100)\n        p.circle(moonX, moonY, moonRadius * 2);\n        planetAngle += deltaTimeOffset * p.deltaTime * planetOrbitSpeedMod * planetOrbitSpeed;\n        moonAngle += deltaTimeOffset * p.deltaTime * moonOrbitSpeedMod * moonOrbitSpeed;\n        planetAngle = planetAngle % 360;\n        moonAngle = moonAngle % 360;\n\n        // calc framerate\n        if (p.frameCount % 10 === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n        }\n\n        if (p.frameCount % 10 === 0) {\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n            if (typeof planetSpeedCallback !== \"undefined\") {\n                planetSpeedCallback((planetOrbitSpeedMod * planetOrbitSpeed).toFixed(2));\n            }\n            if (typeof moonSpeedCallback !== \"undefined\") {\n                moonSpeedCallback((moonOrbitSpeedMod * moonOrbitSpeed).toFixed(2));\n            }\n        }\n    };\n\n    p.windowResized = function () {\n        p.resize();\n    };\n\n    p.resize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.resizeCanvas(w, h);\n    }\n\n    p.checkResize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        if (w !== p.width || h !== p.height) {\n            p.resize();\n        }\n    }\n\n    p.mousePressed = function (event) {\n        if (p.isMouseOverCircle(sunLocation, sunRadius)) {\n            isSunBeingDragged = true;\n            sunLocationOffset.x = sunLocation.x - p.mouseX;\n            sunLocationOffset.y = sunLocation.y - p.mouseY;\n        }\n    };\n\n    p.mouseReleased = function (event) {\n        isSunBeingDragged = false;\n        if (isSunBeingDragged) {\n            sunLocation.x = p.mouseX + sunLocationOffset.x;\n            sunLocation.y = p.mouseY + sunLocationOffset.y;\n        }\n    };\n\n    p.rebound = function (location, radius) {\n        if (location.x > p.width - radius) {\n            location.x = p.width - radius;\n        }\n        if (location.x < radius) {\n            location.x = radius;\n        }\n        if (location.y > p.height - radius) {\n            location.y = p.height - radius;\n        }\n        if (location.y < radius) {\n            location.y = radius;\n        }\n    };\n\n    p.isMouseOverCircle = function (circleLoc, circleRadius) {\n        let dx = p.abs(circleLoc.x - p.mouseX);\n        let dy = p.abs(circleLoc.y - p.mouseY);\n        let distToCircleCenter = p.sqrt(dx * dx + dy * dy);\n        return distToCircleCenter <= circleRadius;\n    };\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        // if (didSetup) {\n        //     if (typeof newProps.mode !== \"undefined\") {\n        //         currentMode = newProps.mode;\n        //     }\n        // }\n        if (typeof newProps.onFrameRateChange !== \"undefined\") {\n            frameRateCallback = newProps.onFrameRateChange;\n        }\n        if (typeof newProps.onPlanetSpeedChange !== \"undefined\") {\n            planetSpeedCallback = newProps.onPlanetSpeedChange;\n        }\n        if (typeof newProps.onMoonSpeedChange !== \"undefined\") {\n            moonSpeedCallback = newProps.onMoonSpeedChange;\n        }\n    };\n}\n\nexport default orbiter;\n","import React from 'react';\nimport { Paper, Typography, Grid, Drawer } from '@material-ui/core';\nimport \"containers/Sidebar.css\"\n\nclass OrbiterSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Drawer\n                    className=\"SidebarDrawer\"\n                    variant=\"persistent\"\n                    open={this.props.isControlsPanelOpen}>\n                    <Grid\n                        className=\"SidebarGrid\"\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        wrap=\"nowrap\">\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperInformation\">\n                                <Typography\n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    FPS: {this.props.frameRate}\n                                </Typography>\n                                <Typography\n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    Planet Speed: {this.props.planetSpeed}\n                                </Typography>\n                                <Typography\n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    Moon Speed: {this.props.moonSpeed}\n                                </Typography>\n                            </Paper>\n                        </Grid>\n\n                        {/* <Grid item xs>\n                        <Paper elevation={2}\n                            className=\"PaperRadioControl\">\n                            <ModeRadioButtons\n                                mode={this.props.mode}\n                                onModeChange={this.props.onModeChange} />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs>\n                        <Paper elevation={2}\n                            className=\"PaperSliderControl\">\n                            <BallCountSlider\n                                ballCount={this.props.ballCount}\n                                onBallCountChange={this.props.onBallCountChange} />\n                        </Paper>\n                    </Grid> */}\n\n                    </Grid>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default OrbiterSidebar;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5Orbiter from \"sketches/orbiter/p5_orbiter\";\nimport OrbiterSidebar from './OrbiterSidebar';\n\nclass OrbiterApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // ballCount: 5,\n            // linkLength: 50,\n            // linkTension: 0.1,\n            // linkDamping: 0.4,\n            // mode: \"static\",\n            frameRate: 0\n        }\n\n        // this.handleModeChange = this.handleModeChange.bind(this);\n        // this.handleBallCountChange = this.handleBallCountChange.bind(this);\n        // this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n        // this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n        // this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n        this.handlePlanetSpeedChange = this.handlePlanetSpeedChange.bind(this);\n        this.handleMoonSpeedChange = this.handleMoonSpeedChange.bind(this);\n    }\n\n    // handleModeChange(newValue) {\n    //     this.setState({\n    //         mode: newValue\n    //     });\n    // }\n\n    // handleBallCountChange(newValue) {\n    //     this.setState({\n    //         ballCount: newValue\n    //     });\n    // }\n\n    // handleLinkLengthChange(newValue) {\n    //     this.setState({\n    //         linkLength: newValue\n    //     });\n    // }\n\n    // handleLinkTensionChange(newValue) {\n    //     this.setState({\n    //         linkTension: newValue\n    //     });\n    // }\n\n    // handleLinkDampingChange(newValue) {\n    //     this.setState({\n    //         linkDamping: newValue\n    //     });\n    // }\n\n    handleFrameRateChange(newFrameRateValue) {\n        this.setState({\n            frameRate: newFrameRateValue\n        });\n    }\n\n    handlePlanetSpeedChange(newPlanetSpeedValue) {\n        this.setState({\n            planetSpeed: newPlanetSpeedValue\n        });\n    }\n\n    handleMoonSpeedChange(newMoonSpeedValue) {\n        this.setState({\n            moonSpeed: newMoonSpeedValue\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs>\n                        <OrbiterSidebar\n                            // mode={this.state.mode}\n                            // onModeChange={this.handleModeChange}\n                            // ballCount={this.state.ballCount}\n                            // onBallCountChange={this.handleBallCountChange}\n                            // linkLength={this.state.linkLength}\n                            // onLinkLengthChange={this.handleLinkLengthChange}\n                            // linkTension={this.state.linkTension}\n                            // onLinkTensionChange={this.handleLinkTensionChange}\n                            // linkDamping={this.state.linkDamping}\n                            // onLinkDampingChange={this.handleLinkDampingChange}\n\n                            frameRate={this.state.frameRate} \n                            planetSpeed={this.state.planetSpeed} \n                            moonSpeed={this.state.moonSpeed} \n\n                            isControlsPanelOpen={this.props.isControlsPanelOpen}\n                            />\n                    </Grid>\n                    <Grid container item xs={this.props.isControlsPanelOpen ? 9 : 12}>\n                        <SketchContainer\n                            sketch={p5Orbiter}\n\n                            onFrameRateChange={this.handleFrameRateChange}\n                            onPlanetSpeedChange={this.handlePlanetSpeedChange}\n                            onMoonSpeedChange={this.handleMoonSpeedChange}\n                            />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default OrbiterApp;","let InteractiveHistogram = (p) => {\n\n    let frameRates = [];\n    let displayFrameRate;\n\n    // number of bars\n    let barCount = 25;\n\n    // is a bar colored?\n    let colored = [];\n\n    // holds all bars heights (not for generation, \n    // but for detection when clicking)\n    let heights = [];\n\n    // arbitrary unitless constant for bar height.\n    // Changes with '+' and '-'\n    let barHeightScalar = 250;\n\n    let frameRateCallback;\n    let barHeightScalarCallback;\n\n    let didSetup = false;\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n\n        p.colorMode(p.HSB, 360, 100, 100);\n        p.background('#e6e6fa'); //e6e6fa\n        p.frameRate(120);\n\n        didSetup = true;\n    };\n\n    p.draw = function () {\n        p.checkResize();\n\n        let bgHue = p.mouseX < p.width / 2 ? p.map(p.mouseX, 0, p.width, 0, 360) + 180 : p.map(p.mouseX, 0, p.width, 0, 360) - 180;\n        let bgSat = 30 + p.map(p.mouseY, 0, p.height, 0, 70);\n        p.background(bgHue, bgSat, 100);\n        p.rectMode(p.CORNERS);\n        let step = p.width / (barCount);\n\n        for (let i = 0; i < barCount; i++) {\n\n            let x1 = i * step;\n            let y1 = p.height;\n            let x2 = (i + 1) * step;\n            let y2;\n\n            let xBar = (x1 + x2) / 2;\n            let dist = p.dist(p.mouseX, p.mouseY, xBar, p.height);\n            let temp = (barHeightScalar * 1000 / (dist + 50)) - 150;\n            let rectHeight = temp < p.height ? temp : p.height;\n            let rectWidth = x2 - x1;\n            rectHeight = rectHeight < 3 * (rectWidth / 8) ? 3 * (rectWidth / 8) : rectHeight;\n            y2 = p.height - rectHeight;\n\n            heights[i] = rectHeight;\n            let hue = p.map(xBar, 0, p.width, 0, 360);\n            let sat = p.map(rectHeight, 0, p.height, 30, 100);\n\n            p.fill(hue, sat, 90);\n            p.rect(x1, y1, x2, y2);\n            if (colored[i]) {\n                p.noStroke();\n                p.fill(hue, sat, 90);\n            } else {\n                p.fill(0);\n            }\n\n            p.rect(x1 + (rectWidth / 8), y1 - (rectWidth / 8), x2 - (rectWidth / 8), y2 + (rectWidth / 8));\n            p.stroke(1);\n            p.fill(0, 0, 100);\n        }\n        // calc framerate\n        if (p.frameCount % 10 === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n        }\n\n        if (p.frameCount % 10 === 0) {\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n            if (typeof barHeightScalarCallback !== \"undefined\") {\n                barHeightScalarCallback(barHeightScalar.toFixed(0));\n            }\n        }\n\n    };\n\n    p.windowResized = function () {\n        p.resize();\n    };\n\n    p.resize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.resizeCanvas(w, h);\n    };\n\n    p.checkResize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        if (w !== p.width || h !== p.height) {\n            p.resize();\n        }\n    };\n\n    p.mousePressed = function () {\n        let step = p.width / (barCount);\n\n        let rect = p.floor(p.mouseX / step);\n        if (rect < 0)\n            rect = 0;\n        if (rect > barCount - 1)\n            rect = (barCount - 1);\n        colored[rect] = p.height - p.mouseY < heights[rect] ? !colored[rect] : colored[rect];\n    };\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        if (didSetup) {\n            if (typeof newProps.barHeightScalar !== \"undefined\") {\n                barHeightScalar = newProps.barHeightScalar;\n                console.log(barHeightScalar)\n            }\n        }\n        if (typeof newProps.onFrameRateChange !== \"undefined\") {\n            frameRateCallback = newProps.onFrameRateChange;\n        }\n        // if (typeof newProps.onBarHeightScalarChange !== \"undefined\") {\n        //     barHeightScalarCallback = newProps.onBarHeightScalarChange;\n        // }\n    };\n\n};\n\nexport default InteractiveHistogram;","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass BarHeightScalarSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleBarHeightScalarChange = this.handleBarHeightScalarChange.bind(this);\n    }\n\n    handleBarHeightScalarChange(event, newValue) {\n        this.props.onBarHeightScalarChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={250}\n                    value={this.props.barHeightScalar || 250}\n                    onChange={this.handleBarHeightScalarChange}\n                    min={50}\n                    max={500}\n                    step={5}\n                    aria-labelledby=\"bar-height-scalar-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"bar-height-scalar-slider\" gutterBottom>\n                    Bar Height Scalar\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default BarHeightScalarSlider;\n","import React from 'react';\nimport { Paper, Typography, Grid, Drawer } from '@material-ui/core';\nimport \"containers/Sidebar.css\"\n\nimport BarHeightScalarSlider from \"sketches/interactivehistogram/panels/BarHeightScalarSlider\";\n\nclass InteractiveHistogramSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Drawer\n                    className=\"SidebarDrawer\"\n                    variant=\"persistent\"\n                    open={this.props.isControlsPanelOpen}>\n                    <Grid\n                        className=\"SidebarGrid\"\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        wrap=\"nowrap\">\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperInformation\">\n                                <Typography\n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    FPS: {this.props.frameRate}\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <BarHeightScalarSlider\n                                    barHeightScalar={this.props.barHeightScalar}\n                                    onBarHeightScalarChange={this.props.onBarHeightScalarChange} />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default InteractiveHistogramSidebar;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5InteractiveHistogram from \"sketches/interactivehistogram/p5_interactivehistogram\";\nimport InteractiveHistogramSidebar from './InteractiveHistogramSidebar';\n\nclass InteractiveHistogramApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            frameRate: 0\n        }\n\n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n        this.handleBarHeightScalarChange = this.handleBarHeightScalarChange.bind(this);\n    }\n\n    handleFrameRateChange(newFrameRateValue) {\n        this.setState({\n            frameRate: newFrameRateValue\n        });\n    }\n\n    handleBarHeightScalarChange(newBarHeightScalarValue) {\n        this.setState({\n            barHeightScalar: newBarHeightScalarValue\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs>\n                        <InteractiveHistogramSidebar\n                            frameRate={this.state.frameRate}\n                            barHeightScalar={this.state.barHeightScalar}\n                            onBarHeightScalarChange={this.handleBarHeightScalarChange}\n\n                            isControlsPanelOpen={this.props.isControlsPanelOpen}\n                            />\n                    </Grid>\n                    <Grid container item xs={this.props.isControlsPanelOpen ? 9 : 12}>\n                        <SketchContainer\n                            sketch={p5InteractiveHistogram}\n\n                            onFrameRateChange={this.handleFrameRateChange}\n                            barHeightScalar={this.state.barHeightScalar}\n                            onBarHeightScalarChange={this.handleBarHeightScalarChange}\n                            />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default InteractiveHistogramApp;","let cubegrid = (p) => {\n\n\tlet frameRates = [];\n\tlet displayFrameRate;\n\n\tlet frameRateCallback;\n\tlet cubeCountCallback;\n\n\tlet updateFrequency = 10;\n\n\tlet deltaMouseFactor = 0.01;\n\tlet deltaRotationFactor = 0.025;\n\tlet scrollingFactor = 15;\n\n\t// Number of Rows\n    let rowCount = 6;\n\t// Number of Columns\n\tlet columnCount = 6;\n\t// Number of Layers\n\tlet layerCount = 6;\n\n\t// Initial Camera distance\n\tlet cameraDistance = -1600;\n\t// Change in camera distance\n\tlet deltaCameraDistance = -0;\n\t// Length of the side of a cube\n\tlet cubeLength = 50;\n\t// Distance between the cubes\n\tlet cubeDistance = 150;\n\t// Change in distance between cubes\n\tlet deltaCubeDistance = 0;\n\t\n\t// Used to save rotations for mouse rotations.\n\t// Best to not change.\n    let rotationStateX = 0;\n\tlet rotationStateY = 0;\n\t\n\t// Saves x-angle for rotations, can be used to angle cube\n    // perspective initially\n\tlet rotationAngleX = 0;\n\t// Change in x rotation.\n\tlet deltaRotationAngleX = 0.5;\n\t\n\t// Same as above for y-angle\n    let rotationAngleY = 0;\n    let deltaRotationAngleY = 0;\n\n\t// Same as above for z-angle\n    let rotationAngleZ = 0;\n    let deltaRotationAngleZ = 0.5;\n\n\t// Hold all cubes colors.\n\tlet cubeColors = [];\n\t\n\tlet didSetup = false;\n\n\tlet isBeingRotated = false;\n\n    p.setup = function () {\n\n        let w = p.select(\".SketchContainer\").width;\n        let h = p.select(\".SketchContainer\").height;\n\t\tp.createCanvas(w, h, p.WEBGL);\n\t\t\n\t\tlet eyeZ = ((p.height/2.0) / p.tan(p.PI*60.0/360.0));\n\t\tp.perspective(p.PI/3.0, p.width/p.height, eyeZ/10.0, eyeZ*250.0);\n\n\t\t// p.ortho(\n\t\t// \t5 * -p.width / 2,\n\t\t// \t5 * p.width / 2,\n\t\t// \t5 * p.height / 2,\n\t\t// \t5 * -p.height / 2,\n\t\t// \t0,\n\t\t// \t10000,\n\t\t// \t);\n\n\t\tp.frameRate(120);\n        p.smooth(8);\n        p.colorMode(p.HSB, 360, 100, 100);\n\t\tp.setupColors();\n\t\t\n\t\tdidSetup = true;\n    };\n\n    p.draw = function () {\n\t\tp.checkResize();\n        p.background(0);\n\n        // Moves origin to centre of\n        // window and back the specified\n\t\t// distance\n\t\tif (p.frameCount % 100 === 0) {\n\t\t\t// console.log(\"HALF W: \" + p.width / 2);\n\t\t\t// console.log(\"W: \" + p.width);\n\t\t\t// console.log(\"MOUSEX: \" + p.mouseX);\n\t\t}\n\t\tp.translate(0, 0, cameraDistance);\n                    \n        cameraDistance += deltaCameraDistance;\n        cubeDistance += deltaCubeDistance;\n\n\t\t// rotate if applicable\n        if (isBeingRotated) {\n            rotationStateX += p.movedX * p.deltaTime * deltaMouseFactor;\n            rotationStateY -= p.movedY * p.deltaTime * deltaMouseFactor;\n        }\n\n        // checkKeys();\n        p.rotateX(p.radians(rotationStateY));\n        p.rotateY(p.radians(rotationStateX));\n\n        rotationAngleX += deltaRotationAngleX * p.deltaTime * deltaRotationFactor;\n        rotationAngleY += deltaRotationAngleY * p.deltaTime * deltaRotationFactor;\n\t\trotationAngleZ += deltaRotationAngleZ * p.deltaTime * deltaRotationFactor;\n\t\t\n\t\trotationAngleX %= 360;\n\t\trotationAngleY %= 360;\n\t\trotationAngleZ %= 360;\n        p.rotateX(p.radians(rotationAngleX));\n        p.rotateY(p.radians(rotationAngleY));\n\t\tp.rotateZ(p.radians(rotationAngleZ));\n\n        p.translate(-(((rowCount - 1) / 2) * (cubeLength + cubeDistance)), 0, 0);\n        p.translate(0, -(((columnCount - 1) / 2) * (cubeLength + cubeDistance)), 0);\n        p.translate(0, 0, -(((layerCount - 1) / 2) * (cubeLength + cubeDistance)));\n        for (let z = 0; z < layerCount; z++) {\n            for (let y = 0; y < columnCount; y++) {\n                for (let x = 0; x < rowCount; x++) {\n                    p.fill(cubeColors[x][y][z][0], cubeColors[x][y][z][1], cubeColors[x][y][z][2]);\n                    p.box(cubeLength); // Draws a Cube to the surface\n                    p.translate(cubeLength + cubeDistance, 0, 0); // Moves matrix to the\n                    // right for next box\n                }\n                p.translate(-(rowCount * (cubeLength + cubeDistance)), 0, 0); // Moves matrix\n                // back to start\n                // of row\n                p.translate(0, cubeLength + cubeDistance, 0); // Moves matrix down to next\n                // row\n            }\n            p.translate(0, -(columnCount * (cubeLength + cubeDistance)), 0); // Moves matrix back\n            // to start of\n            // column\n            p.translate(0, 0, cubeLength + cubeDistance); // Moves matrix down to next layer\n\t\t}\n\n\t\tp.calculateFrameRate();\n\n\t\tp.updateCallbacks();\n\n    };\n\n    p.setupColors = function () {\n        cubeColors = [];\n\n        for (let i = 0; i < rowCount; i++) {\n            cubeColors[i] = [];\n            for (let j = 0; j < columnCount; j++) {\n                cubeColors[i][j] = []\n                for (let k = 0; k < layerCount; k++) {\n                    cubeColors[i][j][k] = [];\n                    cubeColors[i][j][k][0] = p.map(p.random(), 0, 1, 0, 360);\n                    cubeColors[i][j][k][1] = p.map(p.random(), 0, 1, 30, 100);\n                    cubeColors[i][j][k][2] = p.map(p.random(), 0, 1, 50, 100);\n                }\n            }\n        }\n\t};\n\n\tp.calculateFrameRate = function () {\n        if (p.frameCount % updateFrequency === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n        }\n\t}\n\n\tp.updateCallbacks = function () {\n        if (p.frameCount % updateFrequency === 0) {\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n            // if (typeof barHeightScalarCallback !== \"undefined\") {\n            //     barHeightScalarCallback(barHeightScalar.toFixed(0));\n            // }\n        }\n\t};\n\n\tp.isMouseOverCanvas = function () {\n\t\tif (p.mouseX > 0 && p.mouseX < p.width &&\n\t\t\tp.mouseY > 0 && p.mouseY < p.height) {\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tp.mousePressed = function () {\n\t\tif (p.isMouseOverCanvas()) {\n\t\t\t\tisBeingRotated = true;\n\t\t}\n\t};\n\n\tp.mouseReleased = function () {\n\t\tisBeingRotated = false;\n\t};\n\n\tp.mouseWheel = function (event) {\n\t\tif (p.isMouseOverCanvas()) {\n\t\t\tcameraDistance -= event.delta * scrollingFactor;\n\t\t}\n\t};\n\n    p.windowResized = function () {\n        p.resize();\n    };\n\n    p.resize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.resizeCanvas(w, h);\n    };\n\n    p.checkResize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        if (w !== p.width || h !== p.height) {\n            p.resize();\n        }\n    };\n\t\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        if (didSetup) {\n            if (typeof newProps.rowCount !== \"undefined\") {\n\t\t\t\tif (rowCount !== newProps.rowCount) {\n\t\t\t\t\trowCount = newProps.rowCount;\n\t\t\t\t\tp.setupColors();\n\t\t\t\t\tif (typeof cubeCountCallback !== \"undefined\") {\n\t\t\t\t\t\tcubeCountCallback(rowCount*columnCount*layerCount);\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n            if (typeof newProps.columnCount !== \"undefined\") {\n\t\t\t\tif (columnCount !== newProps.columnCount) {\n\t\t\t\t\tcolumnCount = newProps.columnCount;\n\t\t\t\t\tp.setupColors();\n\t\t\t\t\tif (typeof cubeCountCallback !== \"undefined\") {\n\t\t\t\t\t\tcubeCountCallback(rowCount*columnCount*layerCount);\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n            if (typeof newProps.layerCount !== \"undefined\") {\n\t\t\t\tif (layerCount !== newProps.layerCount) {\n\t\t\t\t\tlayerCount = newProps.layerCount;\n\t\t\t\t\tp.setupColors();\n\t\t\t\t\tif (typeof cubeCountCallback !== \"undefined\") {\n\t\t\t\t\t\tcubeCountCallback(rowCount*columnCount*layerCount);\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n            if (typeof newProps.cubeDistance !== \"undefined\") {\n\t\t\t\tif (cubeDistance !== newProps.cubeDistance) {\n\t\t\t\t\tcubeDistance = newProps.cubeDistance;\n\t\t\t\t}\n            }\n            if (typeof newProps.cubeLength !== \"undefined\") {\n\t\t\t\tif (cubeLength !== newProps.cubeLength) {\n\t\t\t\t\tcubeLength = newProps.cubeLength;\n\t\t\t\t}\n            }\n            if (typeof newProps.rotationSpeedX !== \"undefined\") {\n\t\t\t\tif (deltaRotationAngleX !== newProps.rotationSpeedX) {\n\t\t\t\t\tdeltaRotationAngleX = newProps.rotationSpeedX;\n\t\t\t\t}\n            }\n            if (typeof newProps.rotationSpeedY !== \"undefined\") {\n\t\t\t\tif (deltaRotationAngleY !== newProps.rotationSpeedY) {\n\t\t\t\t\tdeltaRotationAngleY = newProps.rotationSpeedY;\n\t\t\t\t}\n            }\n            if (typeof newProps.rotationSpeedZ !== \"undefined\") {\n\t\t\t\tif (deltaRotationAngleZ !== newProps.rotationSpeedZ) {\n\t\t\t\t\tdeltaRotationAngleZ = newProps.rotationSpeedZ;\n\t\t\t\t}\n            }\n        }\n        if (typeof newProps.onFrameRateChange !== \"undefined\") {\n            frameRateCallback = newProps.onFrameRateChange;\n        }\n        if (typeof newProps.onCubeCountChange !== \"undefined\") {\n\t\t\tif (typeof cubeCountCallback === \"undefined\") {\n\t\t\t\tcubeCountCallback = newProps.onCubeCountChange;\n\t\t\t\tcubeCountCallback(rowCount*columnCount*layerCount);\n\t\t\t}\n        }\n        // if (typeof newProps.onBarHeightScalarChange !== \"undefined\") {\n        //     barHeightScalarCallback = newProps.onBarHeightScalarChange;\n        // }\n    };\n\n};\n\nexport default cubegrid;","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass RowCountSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleRowCountChange = this.handleRowCountChange.bind(this);\n    }\n\n    handleRowCountChange(event, newValue) {\n        this.props.onRowCountChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={6}\n                    value={this.props.rowCount || 6}\n                    onChange={this.handleRowCountChange}\n                    min={1}\n                    max={100}\n                    step={1}\n                    aria-labelledby=\"row-count-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"row-count-slider\" gutterBottom>\n                    Row Count\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default RowCountSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass ColumnCountSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleColumnCountChange = this.handleColumnCountChange.bind(this);\n    }\n\n    handleColumnCountChange(event, newValue) {\n        this.props.onColumnCountChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={6}\n                    value={this.props.columnCount || 6}\n                    onChange={this.handleColumnCountChange}\n                    min={1}\n                    max={100}\n                    step={1}\n                    aria-labelledby=\"column-count-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"column-count-slider\" gutterBottom>\n                    Column Count\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default ColumnCountSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LayerCountSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLayerCountChange = this.handleLayerCountChange.bind(this);\n    }\n\n    handleLayerCountChange(event, newValue) {\n        this.props.onLayerCountChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={6}\n                    value={this.props.layerCount || 6}\n                    onChange={this.handleLayerCountChange}\n                    min={1}\n                    max={100}\n                    step={1}\n                    aria-labelledby=\"layer-count-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"layer-count-slider\" gutterBottom>\n                    Layer Count\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LayerCountSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass CubeDistanceSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleCubeDistanceChange = this.handleCubeDistanceChange.bind(this);\n    }\n\n    handleCubeDistanceChange(event, newValue) {\n        this.props.onCubeDistanceChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={150}\n                    value={this.props.cubeDistance || 150}\n                    onChange={this.handleCubeDistanceChange}\n                    min={50}\n                    max={200}\n                    step={10}\n                    aria-labelledby=\"cube-distance-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"cube-distance-slider\" gutterBottom>\n                    Cube Distance\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default CubeDistanceSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass CubeLengthSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleCubeLengthChange = this.handleCubeLengthChange.bind(this);\n    }\n\n    handleCubeLengthChange(event, newValue) {\n        this.props.onCubeLengthChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.cubeLength || 50}\n                    onChange={this.handleCubeLengthChange}\n                    min={10}\n                    max={100}\n                    step={5}\n                    aria-labelledby=\"cube-length-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"cube-length-slider\" gutterBottom>\n                    Cube Length\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default CubeLengthSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass RotationSpeedXSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleRotationSpeedChange = this.handleRotationSpeedChange.bind(this);\n    }\n\n    handleRotationSpeedChange(event, newValue) {\n        this.props.onRotationSpeedChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={0.5}\n                    value={this.props.rotationSpeedX}\n                    onChange={this.handleRotationSpeedChange}\n                    min={0.0}\n                    max={5.0}\n                    step={0.25}\n                    aria-labelledby=\"rotation-speed-x-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"rotation-speed-x-slider\" gutterBottom>\n                    Rotation Speed X\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default RotationSpeedXSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass RotationSpeedYSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleRotationSpeedChange = this.handleRotationSpeedChange.bind(this);\n    }\n\n    handleRotationSpeedChange(event, newValue) {\n        this.props.onRotationSpeedChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={0.0}\n                    value={this.props.rotationSpeedY}\n                    onChange={this.handleRotationSpeedChange}\n                    min={0.0}\n                    max={5.0}\n                    step={0.25}\n                    aria-labelledby=\"rotation-speed-y-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"rotation-speed-y-slider\" gutterBottom>\n                    Rotation Speed Y\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default RotationSpeedYSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass RotationSpeedZSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleRotationSpeedChange = this.handleRotationSpeedChange.bind(this);\n    }\n\n    handleRotationSpeedChange(event, newValue) {\n        this.props.onRotationSpeedChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={0.5}\n                    value={this.props.rotationSpeedZ}\n                    onChange={this.handleRotationSpeedChange}\n                    min={0.0}\n                    max={5.0}\n                    step={0.25}\n                    aria-labelledby=\"rotation-speed-z-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"rotation-speed-z-slider\" gutterBottom>\n                    Rotation Speed Z\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default RotationSpeedZSlider;\n","import React from 'react';\nimport { Paper, Typography, Grid, Drawer } from '@material-ui/core';\nimport \"containers/Sidebar.css\"\nimport RowCountSlider from './panels/RowCountSlider';\nimport ColumnCountSlider from './panels/ColumnCountSlider';\nimport LayerCountSlider from './panels/LayerCountSlider';\nimport CubeDistanceSlider from './panels/CubeDistanceSlider';\nimport CubeLengthSlider from './panels/CubeLengthSlider';\nimport RotationSpeedXSlider from './panels/RotationSpeedXSlider';\nimport RotationSpeedYSlider from './panels/RotationSpeedYSlider';\nimport RotationSpeedZSlider from './panels/RotationSpeedZSlider';\n\n// import BarHeightScalarSlider from \"sketches/interactivehistogram/panels/BarHeightScalarSlider\";\n\nclass CubeGridSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Drawer\n                    className=\"SidebarDrawer\"\n                    variant=\"persistent\"\n                    open={this.props.isControlsPanelOpen}>\n                    <Grid\n                        className=\"SidebarGrid\"\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        wrap=\"nowrap\">\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperInformation\">\n                                <Typography\n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    FPS: {this.props.frameRate}\n                                </Typography>\n                                <Typography\n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    Cube Count: {this.props.cubeCount}\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <RowCountSlider\n                                    rowCount={this.props.rowCount}\n                                    onRowCountChange={this.props.onRowCountChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <ColumnCountSlider\n                                    columnCount={this.props.columnCount}\n                                    onColumnCountChange={this.props.onColumnCountChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <LayerCountSlider\n                                    layerCount={this.props.layerCount}\n                                    onLayerCountChange={this.props.onLayerCountChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <CubeDistanceSlider\n                                    cubeDistance={this.props.cubeDistance}\n                                    onCubeDistanceChange={this.props.onCubeDistanceChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <CubeLengthSlider\n                                    cubeLength={this.props.cubeLength}\n                                    onCubeLengthChange={this.props.onCubeLengthChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <RotationSpeedXSlider\n                                    rotationSpeedX={this.props.rotationSpeedX}\n                                    onRotationSpeedChange={this.props.onRotationSpeedXChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <RotationSpeedYSlider\n                                    rotationSpeedY={this.props.rotationSpeedY}\n                                    onRotationSpeedChange={this.props.onRotationSpeedYChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <RotationSpeedZSlider\n                                    rotationSpeedZ={this.props.rotationSpeedZ}\n                                    onRotationSpeedChange={this.props.onRotationSpeedZChange} />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default CubeGridSidebar;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5CubeGrid from \"sketches/cubegrid/p5_cubegrid\";\nimport CubeGridSidebar from './CubeGridSidebar';\n\nclass CubeGridApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            frameRate: 0\n        }\n\n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n        this.handleCubeCountChange = this.handleCubeCountChange.bind(this);\n        this.handleRowCountChange = this.handleRowCountChange.bind(this);\n        this.handleColumnCountChange = this.handleColumnCountChange.bind(this);\n        this.handleLayerCountChange = this.handleLayerCountChange.bind(this);\n        this.handleCubeDistanceChange = this.handleCubeDistanceChange.bind(this);\n        this.handleCubeLengthChange = this.handleCubeLengthChange.bind(this);\n        this.handleRotationSpeedXChange = this.handleRotationSpeedXChange.bind(this);\n        this.handleRotationSpeedYChange = this.handleRotationSpeedYChange.bind(this);\n        this.handleRotationSpeedZChange = this.handleRotationSpeedZChange.bind(this);\n    }\n\n    handleFrameRateChange(newFrameRateValue) {\n        this.setState({\n            frameRate: newFrameRateValue\n        });\n    }\n\n    handleCubeCountChange(newCubeCountValue) {\n        this.setState({\n            cubeCount: newCubeCountValue\n        });\n    }\n\n    handleRowCountChange(newRowCountValue) {\n        this.setState({\n            rowCount: newRowCountValue\n        });\n    }\n\n    handleColumnCountChange(newColumnCountValue) {\n        this.setState({\n            columnCount: newColumnCountValue\n        });\n    }\n\n    handleLayerCountChange(newLayerCountValue) {\n        this.setState({\n            layerCount: newLayerCountValue\n        });\n    }\n\n    handleCubeDistanceChange(newCubeDistanceValue) {\n        this.setState({\n            cubeDistance: newCubeDistanceValue\n        });\n    }\n\n    handleCubeLengthChange(newCubeLengthValue) {\n        this.setState({\n            cubeLength: newCubeLengthValue\n        });\n    }\n\n    handleRotationSpeedXChange(newValue) {\n        this.setState({\n            rotationSpeedX: newValue\n        });\n    }\n\n    handleRotationSpeedYChange(newValue) {\n        this.setState({\n            rotationSpeedY: newValue\n        });\n    }\n\n    handleRotationSpeedZChange(newValue) {\n        this.setState({\n            rotationSpeedZ: newValue\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs>\n                        <CubeGridSidebar\n                            frameRate={this.state.frameRate}\n                            cubeCount={this.state.cubeCount}\n\n                            rowCount={this.state.rowCount}\n                            onRowCountChange={this.handleRowCountChange}\n                            columnCount={this.state.columnCount}\n                            onColumnCountChange={this.handleColumnCountChange}\n                            layerCount={this.state.layerCount}\n                            onLayerCountChange={this.handleLayerCountChange}\n                            cubeDistance={this.state.cubeDistance}\n                            onCubeDistanceChange={this.handleCubeDistanceChange}\n                            cubeLength={this.state.cubeLength}\n                            onCubeLengthChange={this.handleCubeLengthChange}\n                            rotationSpeedX={this.state.rotationSpeedX}\n                            onRotationSpeedXChange={this.handleRotationSpeedXChange}\n                            rotationSpeedY={this.state.rotationSpeedY}\n                            onRotationSpeedYChange={this.handleRotationSpeedYChange}\n                            rotationSpeedZ={this.state.rotationSpeedZ}\n                            onRotationSpeedZChange={this.handleRotationSpeedZChange}\n\n                            isControlsPanelOpen={this.props.isControlsPanelOpen}\n                            />\n                    </Grid>\n                    <Grid container item xs={this.props.isControlsPanelOpen ? 9 : 12}>\n                        <SketchContainer\n                            sketch={p5CubeGrid}\n\n                            onFrameRateChange={this.handleFrameRateChange}\n                            onCubeCountChange={this.handleCubeCountChange}\n\n                            rowCount={this.state.rowCount}\n                            columnCount={this.state.columnCount}\n                            layerCount={this.state.layerCount}\n                            cubeDistance={this.state.cubeDistance}\n                            cubeLength={this.state.cubeLength}\n                            rotationSpeedX={this.state.rotationSpeedX}\n                            rotationSpeedY={this.state.rotationSpeedY}\n                            rotationSpeedZ={this.state.rotationSpeedZ}\n                            />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default CubeGridApp;","class Trail {\n\n\tp; // Parent\n\n\tx; // x-pos\n\ty; // y-pos\n\tr; // current radius\n\n\thue; // color\n\n\tangle; // direction of motion\n\tmag; // magnitude of motion\n\n\tisComplete = false; // trail is finished?\n\n\tconstructor(p_, x_, y_, angle_ = 45, mag_ = 10) {\n\n\t\tthis.p = p_;\n\t\tthis.x = x_;\n\t\tthis.y = y_;\n\n\t\tthis.angle = angle_;\n\t\tthis.r = this.p.random(25, 150);\n\t\tthis.hue = this.p.random(360);\n\t\tthis.mag = mag_;\n\n\t}\n\n\tdraw() {\n\t\tthis.p.fill(this.hue, 60, 90);\n\t\tthis.p.ellipse(this.x, this.y, this.r, this.r);\n\t}\n\n\tupdate() {\n\t\tthis.hue += 5;\n\t\tthis.hue %= 360;\n\t\tthis.r--;\n\t\tthis.x += this.p.random(this.mag / 2, this.mag) * this.p.sin(this.p.radians(this.angle));\n\t\tthis.y -= this.p.random(this.mag / 2, this.mag) * this.p.cos(this.p.radians(this.angle));\n\n\t\tthis.angle += this.p.random(-5, 5);\n\n\t\tif (this.r <= 0) {\n            this.isComplete = true;\n        }\n\t}\n\n}\n\nexport default Trail;","import Trail from \"./p5_trail\"\n\nlet trails = (p) => {\n\n    let frameRates = [];\n    let displayFrameRate;\n\n    let frameRateCallback;\n    let activeTrailCountCallback;\n    let setClearScreenCallback;\n\n    let updateFrequency = 10;\n    let didSetup = false;\n\n    const Modes = {\n        STATIC: \"static\",\n        DYNAMIC: \"dynamic\"\n    };\n\n    let currentMode = Modes.STATIC;\n\n    // holds all trails.\n    let trails = [];\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n        \n\t\tp.colorMode(p.HSB, 360, 100, 100);\n\t\tp.background(0);\n        p.frameRate(60);\n        \n        didSetup = true;\n    };\n    \n    p.draw = function () {\n        p.checkResize();\n\n        for (let i = trails.length - 1; i >= 0; i--) {\n            trails[i].draw();\n            trails[i].update();\n            if (trails[i].isComplete) {\n                trails.splice(i, 1);\n            }\n        }\n\n        p.calculateFrameRate();\n        p.updateCallbacks();\n    };\n\n\tp.angle = function (v1, v2) {\n\t\tlet a = -p.atan2(v2.y, v2.x) + p.atan2(v1.y, v1.x);\n\t\tif (a < 0)\n\t\t\ta += p.TWO_PI;\n\t\treturn p.degrees(a);\n\t}\n\n\tp.mouseDragged = function () {\n\t\tif (p.mouseButton === p.LEFT && p.isMouseOverCanvas()) {\n\t\t\tif (currentMode === Modes.DYNAMIC) {\n\t\t\t\tlet mouseMovement = p.createVector(p.movedX, -p.movedY);\n\t\t\t\tlet angle = p.angle(p.createVector(0, 10), mouseMovement);\n\t\t\t\tlet mag = mouseMovement.mag();\n\t\t\t\ttrails.push(new Trail(p, p.mouseX, p.mouseY, p.random(angle - 10, angle + 10), mag));\n\t\t\t} else {\n\t\t\t\ttrails.push(new Trail(p, p.mouseX, p.mouseY));\n\t\t\t}\n\t\t}\n\t};\n\n\tp.mousePressed = function () {\n\t\tif (p.mouseButton === p.LEFT) {\n\t\t\tp.mouseDragged();\n\t\t}\n\t};\n\n\tp.calculateFrameRate = function () {\n        if (p.frameCount % updateFrequency === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n        }\n\t}\n\n\tp.updateCallbacks = function () {\n        if (p.frameCount % updateFrequency === 0) {\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n            if (typeof activeTrailCountCallback !== \"undefined\") {\n                activeTrailCountCallback(trails.length);\n            }\n            // if (typeof barHeightScalarCallback !== \"undefined\") {\n            //     barHeightScalarCallback(barHeightScalar.toFixed(0));\n            // }\n        }\n    };\n    \n    p.clearScreen = function () {\n        p.background(0);\n    };\n\n\tp.isMouseOverCanvas = function () {\n\t\tif (p.mouseX > 0 && p.mouseX < p.width &&\n\t\t\tp.mouseY > 0 && p.mouseY < p.height) {\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n    p.windowResized = function () {\n        p.resize();\n    };\n\n    p.resize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.resizeCanvas(w, h);\n\n\t\tp.background(0);\n    };\n\n    p.checkResize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        if (w !== p.width || h !== p.height) {\n            p.resize();\n        }\n    };\n\t\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        if (didSetup) {\n            if (typeof newProps.mode !== \"undefined\") {\n\t\t\t\tif (currentMode !== newProps.mode) {\n                    currentMode = newProps.mode;\n\t\t\t\t}\n            }\n        }\n        if (typeof newProps.onFrameRateChange !== \"undefined\") {\n            if (typeof frameRateCallback === \"undefined\") {\n                frameRateCallback = newProps.onFrameRateChange;\n            }\n        }\n        if (typeof newProps.onActiveTrailCountChange !== \"undefined\") {\n            if (typeof activeTrailCountCallback === \"undefined\") {\n                activeTrailCountCallback = newProps.onActiveTrailCountChange;\n            }\n        }\n        if (typeof newProps.setClearScreenCallback !== \"undefined\") {\n            if (typeof setClearScreenCallback === \"undefined\") {\n                setClearScreenCallback = newProps.setClearScreenCallback;\n                setClearScreenCallback(p.clearScreen);\n            }\n        }\n        // if (typeof newProps.onBarHeightScalarChange !== \"undefined\") {\n        //     barHeightScalarCallback = newProps.onBarHeightScalarChange;\n        // }\n    };\n\n};\n\nexport default trails;","import React from 'react';\nimport { Typography, Paper } from '@material-ui/core';\nimport \"containers/Panels.css\"\n\nclass InfoPanel extends React.Component {\n    render() {\n        return (\n            <div>\n                <Paper elevation={2}\n                    className=\"PaperInformation\">\n                    {this.props.info.map(fact => (\n                        <Typography\n                            key={fact.key}\n                            variant=\"body1\"\n                            color=\"textSecondary\">\n                            {fact.text}\n                        </Typography>\n                    ))}\n                </Paper>\n            </div>\n        );\n    }\n}\n\nexport default InfoPanel;\n","import React from 'react';\nimport { Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core';\n\nclass ModeRadioButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n    }\n\n    handleModeChange(event) {\n        this.props.onModeChange(event.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <FormControl>\n                    <FormLabel>Mode</FormLabel>\n                    <RadioGroup defaultValue=\"static\" aria-label=\"mode\" name=\"mode\" value={this.props.mode} onChange={this.handleModeChange}>\n                        <FormControlLabel value=\"static\" control={<Radio />} label=\"Static\" />\n                        <FormControlLabel value=\"dynamic\" control={<Radio />} label=\"Dynamic\" />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default ModeRadioButtons;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nclass ClearButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(event) {\n        this.props.onClick();\n    }\n\n    render() {\n        return (\n            <div>\n                <Button \n                    variant=\"outlined\" \n                    color=\"secondary\"\n                    onClick={this.handleClick}>\n                        Clear Canvas\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default ClearButton;\n","import React from 'react';\nimport { Paper, Grid, Drawer } from '@material-ui/core';\nimport \"containers/Sidebar.css\"\nimport InfoPanel from 'containers/panels/InfoPanel';\nimport ModeRadioButtons from './panels/ModeRadioButtons';\nimport ClearButton from './panels/ClearButton';\n\nclass TrailsSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Drawer\n                    className=\"SidebarDrawer\"\n                    variant=\"persistent\"\n                    open={this.props.isControlsPanelOpen}>\n                    <Grid\n                        className=\"SidebarGrid\"\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        wrap=\"nowrap\">\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperInformation\">\n                                <InfoPanel\n                                    info={[\n                                        {\n                                            key: \"fps\",\n                                            text: \"FPS: \" + this.props.frameRate\n                                        },\n                                        {\n                                            key: \"active_trails\",\n                                            text: \"Active Trails: \" + this.props.activeTrailCount\n                                        }\n                                    ]} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperRadioControl\">\n                                <ModeRadioButtons\n                                    mode={this.props.mode}\n                                    onModeChange={this.props.onModeChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperButtonControl\">\n                                <ClearButton\n                                    onClick={this.props.onClearButtonPress} />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default TrailsSidebar;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5Trails from \"sketches/trails/p5_trailart\";\nimport TrailsSidebar from './TrailsSidebar';\n\nclass TrailsApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // ballCount: 5,\n            // linkLength: 50,\n            // linkTension: 0.1,\n            // linkDamping: 0.4,\n            // mode: \"static\",\n            frameRate: 0\n        }\n\n        // this.handleModeChange = this.handleModeChange.bind(this);\n        // this.handleBallCountChange = this.handleBallCountChange.bind(this);\n        // this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n        // this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n        // this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n        this.handleActiveTrailCountChange = this.handleActiveTrailCountChange.bind(this);\n        this.handleModeChange = this.handleModeChange.bind(this);\n        this.handleClearButtonPress = this.handleClearButtonPress.bind(this);\n        this.setClearButtonPressFunc = this.setClearButtonPressFunc.bind(this);\n    }\n\n    // handleModeChange(newValue) {\n    //     this.setState({\n    //         mode: newValue\n    //     });\n    // }\n\n    // handleBallCountChange(newValue) {\n    //     this.setState({\n    //         ballCount: newValue\n    //     });\n    // }\n\n    // handleLinkLengthChange(newValue) {\n    //     this.setState({\n    //         linkLength: newValue\n    //     });\n    // }\n\n    // handleLinkTensionChange(newValue) {\n    //     this.setState({\n    //         linkTension: newValue\n    //     });\n    // }\n\n    // handleLinkDampingChange(newValue) {\n    //     this.setState({\n    //         linkDamping: newValue\n    //     });\n    // }\n\n    handleFrameRateChange(newValue) {\n        this.setState({\n            frameRate: newValue\n        });\n    }\n\n    handleActiveTrailCountChange(newValue) {\n        this.setState({\n            activeTrailCount: newValue\n        });\n    }\n\n    handleModeChange(newValue) {\n        this.setState({\n            mode: newValue\n        });\n    }\n\n    handleClearButtonPress() {\n        if (typeof this.state.clearButtonPressFunc !== \"undefined\") {\n            this.state.clearButtonPressFunc();\n        }\n    }\n\n    setClearButtonPressFunc(newValue) {\n        this.setState({\n            clearButtonPressFunc: newValue\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs>\n                        <TrailsSidebar\n                            mode={this.state.mode}\n                            onModeChange={this.handleModeChange}\n                            // ballCount={this.state.ballCount}\n                            // onBallCountChange={this.handleBallCountChange}\n                            // linkLength={this.state.linkLength}\n                            // onLinkLengthChange={this.handleLinkLengthChange}\n                            // linkTension={this.state.linkTension}\n                            // onLinkTensionChange={this.handleLinkTensionChange}\n                            // linkDamping={this.state.linkDamping}\n                            // onLinkDampingChange={this.handleLinkDampingChange}\n\n                            frameRate={this.state.frameRate} \n                            activeTrailCount={this.state.activeTrailCount}\n                            onClearButtonPress={this.handleClearButtonPress}\n\n                            isControlsPanelOpen={this.props.isControlsPanelOpen}\n                            />\n                    </Grid>\n                    <Grid container item xs={this.props.isControlsPanelOpen ? 9 : 12}>\n                        <SketchContainer\n                            sketch={p5Trails}\n\n                            mode={this.state.mode}\n\n                            setClearScreenCallback={this.setClearButtonPressFunc}\n                            onFrameRateChange={this.handleFrameRateChange}\n                            onActiveTrailCountChange={this.handleActiveTrailCountChange}\n                            />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default TrailsApp;","const GravityMode = {\n    OFF: \"off\",\n    SIMPLE: \"simple\",\n    TRUE: \"true\",\n    POINT: \"point\",\n    MULTI_POINT: \"multi_point\"\n};\n\nexport default GravityMode;","import p5 from \"p5\";\nimport GravityMode from \"./p5_gravitymode\";\n\nclass Bullet {\n\n    /**\n     * Defaults for drawing properties\n     * such as if the bullet is filled with color or hollow, and\n     * stroke weight, radius, and magnitude of movement\n     * <p>\n     * Also defaults for Saturation and Brightness values\n     */\n    FILL = true;\n    STROKE = true;\n    STROKE_WEIGHT = 2;\n    RADIUS = 10;\n\n    MAG = 8;\n    GRAVITY_CONST = 10000;\n\n    BRIGHT = 85;\n\n    /**\n     * Reference to a Triangles object to draw to\n     */\n    p;\n    markedForDelete;\n    bounce;\n    gravity;\n\n    /**\n     * Location and heading of this Bullet\n     */\n    pos;\n    velocity;\n    acceleration;\n\n    circ;\n\n    /**\n     * Constructor for a Bullet object\n     *\n     * @param p_  Reference to a PApplet class to draw to\n     * @param pos_      PVector describing position of this Bullet\n     * @param velocity_ heading (in radians) of this Bullet\n     */\n\n    constructor(p_, pos_, velocity_, bounce_) {\n        this.p = p_;\n        this.pos = pos_;\n        this.velocity = velocity_.mult(this.MAG);\n        this.acceleration = this.p.createVector(0, 0);\n\n        this.markedForDelete = false;\n        this.bounce = bounce_;\n\n        this.gravity = 1;\n    }\n\n    /**\n     * Updates information and properties about this Bullet object\n     * like it's location and color\n     */\n    update() {\n\n        this.bounce = this.p.getBounceMode();\n        let gm = this.p.getGravityMode();\n\n        if (gm === GravityMode.OFF) {\n\n            this.acceleration.set(0, 0);\n\n        } else if (gm === GravityMode.SIMPLE) {\n            let gravityPoint = this.p.getGravityPoint();\n            this.gravity = 1;\n\n            this.acceleration.set(p5.Vector.sub(gravityPoint, this.pos).setMag(this.gravity));\n\n        } else if (gm === GravityMode.MULTI_POINT) {\n            let gravForces = [];\n\n            this.p.getGravityList().forEach(gravityVector => {\n                let gravDist = this.pos.dist(gravityVector);\n\n                if (gravDist > this.p.sqrt(this.GRAVITY_CONST)) {\n                    this.gravity = this.GRAVITY_CONST / this.p.sq(this.gravDist);\n                } else {\n                    this.gravity = 1;\n                }\n\n                gravForces.push(p5.Vector.sub(gravityVector, this.pos).setMag(this.gravity));\n            });\n\n            this.acceleration.set(0, 0);\n\n            gravForces.forEach(forceVector => {\n                this.acceleration.add(forceVector);\n            });\n        } else {\n            let gravityPoint = this.p.getGravityPoint();\n            let gravDist = this.pos.dist(gravityPoint);\n\n            if (gravDist > this.p.sqrt(this.GRAVITY_CONST)) {\n                this.gravity = this.GRAVITY_CONST / this.p.sq(gravDist);\n            } else {\n                this.gravity = 1;\n            }\n\n            this.acceleration.set(p5.Vector.sub(gravityPoint, this.pos).setMag(this.gravity));\n        }\n\n        this.velocity.add(this.acceleration);\n\n        if (this.p.getGravityMode() !== GravityMode.OFF) {\n            this.velocity.mult(this.p.getDecay());\n        }\n\n        //  Update location based on heading\n\n        this.pos.add(this.velocity.copy().mult(this.p.deltaTime * this.p.PHYSICS_SCALAR));\n\n        if (this.bounce) {\n            if (this.pos.x < 0 + this.RADIUS + this.p.getBorderWeight()) {\n                this.velocity.x *= -1;\n                this.pos.x = 0 + this.RADIUS + this.p.getBorderWeight();\n            } else if (this.pos.x > this.p.width - this.RADIUS - this.p.getBorderWeight()) {\n                this.velocity.x *= -1;\n                this.pos.x = this.p.width - this.RADIUS - this.p.getBorderWeight();\n            }\n            if (this.pos.y < 0 + this.RADIUS + this.p.getBorderWeight()) {\n                this.velocity.y *= -1;\n                this.pos.y = 0 + this.RADIUS + this.p.getBorderWeight();\n            } else if (this.pos.y > this.p.height - this.RADIUS - this.p.getBorderWeight()) {\n                this.velocity.y *= -1;\n                this.pos.y = this.p.height - this.RADIUS - this.p.getBorderWeight();\n            }\n        } else {\n            if (this.pos.x < 0 - this.RADIUS) {\n                this.markedForDelete = true;\n            } else if (this.pos.x > this.p.width + this.RADIUS) {\n                this.markedForDelete = true;\n            }\n            if (this.pos.y < 0 - this.RADIUS) {\n                this.markedForDelete = true;\n            } else if (this.pos.y > this.p.height + this.RADIUS) {\n                this.markedForDelete = true;\n            }\n        }\n    }\n\n    /**\n     * Draws this Bullet object to the screen\n     */\n    draw() {\n        // Decide of color for Bullet, or if hollow\n        if (this.STROKE) {\n            this.p.strokeWeight(this.STROKE_WEIGHT);\n            this.p.stroke(this.p.color(0, 0, 0));\n        } else {\n            this.p.noStroke();\n        }\n\n        if (this.FILL) {\n            let hue = 180 + this.p.degrees(this.velocity.copy().rotate(this.p.radians(-90)).heading());\n            // let hue = 90 + this.p.degrees(this.velocity.heading());\n            let sat = this.p.sqrt(this.p.map(this.velocity.mag(), 0, 50, 10, 10000));\n            // let sat = this.p.map(this.velocity.mag(), 0, 50, 1, 100);\n            this.p.fill(this.p.color(hue, sat, this.BRIGHT));\n        } else {\n            this.p.noFill();\n        }\n        //  No need for rotation as we are simple drawing a circle\n        this.p.ellipse(this.pos.x, this.pos.y, this.RADIUS, this.RADIUS);\n\n    };\n\n};\n\nexport default Bullet;\n","import p5 from \"p5\";\nimport Bullet from \"./p5_bullet\";\n\nconst W_KEY = 87;\nconst A_KEY = 65;\nconst S_KEY = 83;\nconst D_KEY = 68;\n\nclass Triangle {\n\n\n    /**\n     * Default values for Saturation, Brightness\n     * Of triangles\n     */\n    SAT = 85;\n    BRIGHT = 100;\n\n    /**\n     * Stroke weight default\n     * And Magnitude of movement with arrow keys\n     */\n    STROKE_WEIGHT = 5;\n    MAG = 4;\n\n    /**\n     * A reference to a Triangles Object\n     * Needed to draw to the buffer from PApplet\n     */\n    p;\n\n    /**\n     * Location and heading of triangles on window\n     */\n    pos;\n    aimPoint;\n    velocity;\n\n    /**\n     * bullet list, along with a copy list to remove off-screen bullets\n     */\n    bullets;\n    bulletsToRemove;\n\n    /**\n     * Shape for triangle geometry\n     */\n    tri;\n\n    constructor(p_, pos_) {\n\n        this.p = p_;\n        this.pos = pos_;\n        this.aimPoint = this.p.createVector(this.p.mouseX, this.p.mouseY);\n        this.velocity = this.p.createVector(0, -1).mult(this.MAG);\n\n        //  Initialization\n        this.bullets = [];\n        this.bulletsToRemove = [];\n\n        // Create framework for triangle geometry\n    }\n\n    /**\n     * Updates Triangle data, such as\n     * location, heading, color, and bullet list\n     */\n    update() {\n\n        this.aimPoint = this.p.getAimPoint();\n\n        //  Perform trigonometric operation to get new location from heading\n        //  Applicable if keys are pressed\n        if (this.pos.dist(this.aimPoint) > this.velocity.mag()/2) {\n\n            // console.log(this.p.getKeyCodes());\n            if (this.p.isMouseOverCanvas()) {\n                if ((this.p.getKeyCodes()[this.p.LEFT_ARROW] ||\n                    this.p.getKeyCodes()[A_KEY]) && !(this.p.getKeyCodes()[this.p.RIGHT_ARROW] ||\n                    this.p.getKeyCodes()[D_KEY])) {\n                    let deltaPos = this.velocity.copy();\n                    deltaPos.mult(this.p.deltaTime * this.p.PHYSICS_SCALAR);\n                    deltaPos.rotate(-this.p.acos(deltaPos.mag() / (2 * p5.Vector.dist(this.pos, this.aimPoint))));\n                    this.pos.add(deltaPos);\n                }\n                if ((this.p.getKeyCodes()[this.p.RIGHT_ARROW] ||\n                this.p.getKeyCodes()[D_KEY]) && !(this.p.getKeyCodes()[this.p.LEFT_ARROW] ||\n                this.p.getKeyCodes()[A_KEY])) {\n                    let deltaPos = this.velocity.copy();\n                    deltaPos.mult(this.p.deltaTime * this.p.PHYSICS_SCALAR);\n                    deltaPos.rotate(this.p.acos(deltaPos.mag() / (2 * p5.Vector.dist(this.pos, this.aimPoint))));\n                    this.pos.add(deltaPos);\n                }\n                if (this.p.getKeyCodes()[this.p.UP_ARROW] ||\n                this.p.getKeyCodes()[W_KEY]) {\n                    this.pos.add(this.velocity.copy().mult(this.p.deltaTime * this.p.PHYSICS_SCALAR));\n                }\n                if (this.p.getKeyCodes()[this.p.DOWN_ARROW] ||\n                this.p.getKeyCodes()[S_KEY]) {\n                    this.pos.sub(this.velocity.copy().mult(this.p.deltaTime * this.p.PHYSICS_SCALAR));\n                }\n            }\n\n            if (this.pos.dist(this.aimPoint) > 0) {\n                this.velocity.set(p5.Vector.sub(this.aimPoint, this.pos).normalize().mult(this.MAG));\n            } else {\n                this.velocity.set(0, -1).mult(this.MAG);\n            }\n        } else {\n            this.velocity.set(0, -1).mult(this.MAG);\n        }\n\n        //  Add off-screen bullets to the remove copy list\n        this.bullets.forEach(bullet => {\n            if (bullet.markedForDelete) {\n                this.bulletsToRemove.push(bullet);\n            }\n        });\n\n        // Remove bullets from main list and clear copy list\n        this.bullets = this.bullets.filter(bullet => !this.bulletsToRemove.includes(bullet));\n        this.bulletsToRemove = [];\n    }\n\n    /**\n     * Draws a Triangle to the screen\n     */\n    draw() {\n\n        // Set color and drawing properties\n        let hue = 180 + this.p.degrees(this.velocity.copy().rotate(this.p.radians(-90)).heading());\n        this.p.fill(this.p.color(hue, this.SAT, this.BRIGHT));\n        this.p.stroke(this.p.color(0, 0, 0));\n        this.p.strokeWeight(this.STROKE_WEIGHT);\n\n        // Move origin to our location and rotate so up is our heading\n        this.p.translate(this.pos.x, this.pos.y);\n        this.p.rotate(this.velocity.copy().rotate(this.p.radians(90)).heading());\n\n        // Draw our preset geometry to screen\n        this.p.triangle(0, -45, -30, 36, 30, 36);\n\n        // Un-rotate and move origin back to reset\n        this.p.rotate(-this.velocity.copy().rotate(this.p.radians(90)).heading());\n        this.p.translate(-this.pos.x, -this.pos.y);\n    }\n\n    /**\n     * Adds a bullet to this Triangle's bullet list\n     */\n    addBullet() {\n        //  Calculate starting locations\n        let bulletPos = this.pos.copy().add(this.velocity.copy().mult(10));\n\n        //  Add to list\n        this.bullets.push(new Bullet(this.p, bulletPos, this.velocity.copy().normalize(), this.p.getBounceMode()));\n    }\n};\n\nexport default Triangle;\n","import Triangle from \"./p5_triangle\"\nimport GravityMode from \"./p5_gravitymode\"\n\nlet triangles = (p) => {\n\n    // Required for all sketches\n    let updateFrequency = 10;\n    let frameRates = [];\n    let displayFrameRate;\n\n    let frameRateCallback;\n\n    let informationCallback;\n\n    let isClearBulletsCallbackSet = false;\n    let isClearTrianglesCallbackSet = false;\n    let isClearGravityPointsCallbackSet = false;\n\n    let didSetup = false;\n\n    // Timing stuff\n    let triangleUpdateTime;\n    let triangleDrawTime;\n    let bulletUpdateTime;\n    let bulletDrawTime;\n\n    // Gravity Enum replacement\n\n    const GenerationMode = {\n        DISCRETE: \"discrete\",\n        CONTINUOUS: \"continuous\",\n    };\n\n    const AimMode = {\n        MOUSE: \"mouse\",\n        FIXED: \"fixed\",\n    };\n\n    const PlacementMode = {\n        TRIANGLE: \"triangle\",\n        FIXED_POINT: \"fixed_point\",\n        GRAVITY_POINTS: \"gravity_points\",\n    };\n    // CONSTANTS\n\n    /**\n     * Controls Saturation and Brightness values of screen background\n     * Ranges from 0 - 100\n     */\n\n    p.PHYSICS_SCALAR = 60 / 1000;\n\n    const SAT = 20;\n    const BRIGHT = 100;\n\n    /**\n     * Stroke weight for the window border and crosshairs\n     * Ranges from 0 - INF\n     */\n    const BORDER_WEIGHT = 12;\n    const CROSSHAIRS_WEIGHT = 5;\n\n    /**\n     * Limit of the amount of Triangles and Bullets in the window\n     * Ranges from 0 - INF\n     */\n    const TRIANGLE_LIMIT = 500;\n    const BULLET_LIMIT = 1500;\n\n    /**\n     * Frequency of the creation (and removal) of Triangles and Bullets in dynamic mode\n     * 1 writes every frame, 5 every 5 frames, and so on.\n     * Lower values are faster\n     * Ranges from 1 - INF\n     */\n    const TRIANGLE_ADD_FREQ = 4;\n    const TRIANGLE_REMOVE_FREQ = 4;\n    const BULLET_FREQ = 4;\n\n    // Initials for this sketch\n    let generationMode = GenerationMode.DISCRETE;\n    let isBorderEnabled = false;\n\n    let gravityMode = GravityMode.OFF;\n    let placementMode = PlacementMode.TRIANGLE;\n    let aimMode = AimMode.MOUSE;\n    let decay = 0.99;\n\n    let fixedPoint = null;\n    let isAutoFireEnabled = false;\n\n    let gravList = [];\n    let gravPoint;\n    let triangles = [];\n    let bulletCount = 0;\n\n    let mouseButtons = [];\n    let keys = [];\n    let keysSize = 128;\n    let keyCodes = [];\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;\n        let h = p.select(\".SketchContainer\").height;\n        let c = p.createCanvas(w, h, p.P2D);\n        p.disableRightClick(c.canvas);\n\n        p.frameRate(120);\n\n        //  Initial values\n        gravPoint = p.createVector(p.width / 2, p.height / 2);\n        fixedPoint = p.createVector(p.width / 2, p.height / 2);\n        //  Hue, Saturation, Brightness, and ranges\n        p.colorMode(p.HSB, 360, 100, 100, 100);\n        //  Ellipses are drawn from centre and distances are radii\n        p.ellipseMode(p.RADIUS);\n        //  Background begins black\n        p.background(p.color(0, 0, 0));\n\n        didSetup = true;\n    };\n\n    p.draw = function () {\n        p.checkResize();\n\n        // p.translate(-p.width / 2, -p.height / 2);\n\n        // START SKETCH\n\n        //  Set hue based on horizontal mouse position\n        let hue = p.map(p.mouseX, 0, p.width, 0, 360);\n        p.background(hue, SAT, BRIGHT, 100);\n\n        //  Draw border around effective \"window\", if bounce is set\n        //  to show the bouncing \"walls\"\n        if (isBorderEnabled) {\n            p.fill(p.color(0, 0, 0));\n            p.noStroke();\n            p.rectMode(p.CORNER);\n            //  Top Border\n            p.rect(0, 0, p.width, BORDER_WEIGHT);\n            //  Left Border\n            p.rect(0, 0, BORDER_WEIGHT, p.height);\n            //  Bottom Border\n            p.rect(0, p.height - BORDER_WEIGHT, p.width, BORDER_WEIGHT);\n            //  Right Border\n            p.rect(p.width - BORDER_WEIGHT, 0, BORDER_WEIGHT, p.height);\n        }\n\n        //  Draw red border signifying outer bullet perimeter\n        //  and frame border\n        p.fill(p.color(0, 100, 100));\n        p.noStroke();\n        p.rectMode(p.CORNER);\n        //  Top Border\n        p.rect(0 - BORDER_WEIGHT, 0 - BORDER_WEIGHT, p.width + BORDER_WEIGHT * 2, BORDER_WEIGHT);\n        //  Left Border\n        p.rect(0 - BORDER_WEIGHT, 0 - BORDER_WEIGHT, BORDER_WEIGHT, p.height + BORDER_WEIGHT * 2);\n        //  Bottom Border\n        p.rect(0 - BORDER_WEIGHT, p.height, p.width + BORDER_WEIGHT * 2, BORDER_WEIGHT);\n        //  Right Border\n        p.rect(p.width, 0 - BORDER_WEIGHT, BORDER_WEIGHT, p.height + BORDER_WEIGHT * 2);\n\n        p.stroke(p.color(0, 0, 0));\n        if (gravityMode === GravityMode.POINT) {\n            //  Draw Gravity Point\n            p.stroke(p.color(0, 0, 0));\n            p.strokeWeight(2);\n            p.fill(p.color(0, 0, 100));\n            p.ellipse(gravPoint.x, gravPoint.y, 4, 4);\n        } else if (gravityMode === GravityMode.MULTI_POINT) {\n            p.stroke(p.color(0, 0, 0));\n            p.strokeWeight(2);\n            p.fill(p.color(0, 0, 100));\n            gravList.forEach((v => {\n                p.ellipse(v.x, v.y, 4, 4);\n            }));\n\n        }\n\n        //  Draw crosshairs\n        p.drawCrosshair();\n\n        //  Initial values for timing vars\n        let start;\n        let end;\n\n        bulletCount = 0;\n\n        start = window.performance.now();\n        triangles.forEach(triangle => {\n            triangle.bullets.forEach(bullet => {\n\n                bullet.update();\n                //b.draw();\n\n            });\n        });\n        end = window.performance.now();\n        bulletUpdateTime = (end - start);\n\n        start = window.performance.now();\n        triangles.forEach(triangle => {\n            triangle.bullets.forEach(bullet => {\n\n                //b.update();\n                bullet.draw();\n\n            });\n        });\n        end = window.performance.now();\n        bulletDrawTime = (end - start);\n\n        start = window.performance.now();\n        triangles.forEach(triangle => {\n\n            triangle.update();\n            // triangle.draw();\n\n            bulletCount += triangle.bullets.length;\n        });\n        end = window.performance.now();\n        triangleUpdateTime = (end - start);\n\n        start = window.performance.now();\n        triangles.forEach(triangle => {\n\n            // triangle.update();\n            triangle.draw();\n\n            // bulletCount += triangle.bullets.length;\n        });\n        end = window.performance.now();\n        triangleDrawTime = (end - start);\n\n        //  Only if in dynamic mode\n        //  Check for mouse buttons and key presses and perform actions accordingly\n        if (generationMode === GenerationMode.CONTINUOUS) {\n            //  Add Triangles\n            if (placementMode === PlacementMode.TRIANGLE &&\n                p.isMouseOverCanvas() && \n                mouseButtons[p.RIGHT] && \n                p.frameCount % TRIANGLE_ADD_FREQ === 0) {\n                p.handleAdd();\n            }\n            //  Remove Triangles\n            if (p.isMouseOverCanvas() && keys[p.BACKSPACE] && (p.frameCount % TRIANGLE_REMOVE_FREQ) === 0) {\n                if (triangles.length > 0) {\n                    triangles.remove(0);\n                }\n            }\n            //  Add Bullets\n            if (p.isMouseOverCanvas() &&\n                (mouseButtons[p.LEFT] || isAutoFireEnabled) &&\n                (p.frameCount % BULLET_FREQ) === 0) {\n                triangles.forEach(triangle => {\n                    if (bulletCount < BULLET_LIMIT) {\n                        triangle.addBullet();\n                    }\n                });\n            }\n        }\n\n        // END SKETCH\n\n        p.calculateFrameRate();\n        p.updateCallbacks();\n    };\n    p.drawCrosshair = () => {\n        switch (placementMode) {\n            case PlacementMode.TRIANGLE:\n                let aimPoint = p.getAimPoint();\n                p.stroke(p.color(0, 100, 100));\n                p.strokeWeight(CROSSHAIRS_WEIGHT);\n                p.line(aimPoint.x, aimPoint.y - 10, aimPoint.x, aimPoint.y + 10);\n                p.line(aimPoint.x - 10, aimPoint.y, aimPoint.x + 10, aimPoint.y);\n                break;\n            case PlacementMode.FIXED_POINT:\n                p.stroke(p.color(240, 100, 100));\n                p.strokeWeight(CROSSHAIRS_WEIGHT / 2);\n                p.line(fixedPoint.x, fixedPoint.y - 6, fixedPoint.x, fixedPoint.y + 6);\n                p.line(fixedPoint.x - 6, fixedPoint.y, fixedPoint.x + 6, fixedPoint.y);\n\n                p.stroke(p.color(0, 100, 100));\n                p.strokeWeight(CROSSHAIRS_WEIGHT);\n                p.line(p.mouseX - 10, p.mouseY - 10, p.mouseX + 10, p.mouseY + 10);\n                p.line(p.mouseX - 10, p.mouseY + 10, p.mouseX + 10, p.mouseY - 10);\n                break;\n            case PlacementMode.GRAVITY_POINTS:\n                p.stroke(p.color(120, 100, 100));\n                p.strokeWeight(CROSSHAIRS_WEIGHT / 2);\n                p.noFill();\n                p.ellipse(p.mouseX, p.mouseY, 8, 8);\n                break;\n            default:\n                throw new Error(\"unknown placement mode\");\n        }\n    }\n\n    p.handleAdd = function () {\n        if (triangles.length !== 0) {\n            //  Make sure the mouse is in a different position\n            if (p.mouseX !== triangles[triangles.length - 1].pos.x || p.mouseY !== triangles[triangles.length - 1].pos.y) {\n                triangles.push(new Triangle(p, p.createVector(p.mouseX, p.mouseY)));\n                //  Remove oldest\n                if (triangles.length > TRIANGLE_LIMIT) {\n                    triangles.shift();\n                }\n            }\n        } else {\n            //  If brand-new, just add one!\n            triangles.push(new Triangle(p, p.createVector(p.mouseX, p.mouseY)));\n        }\n    };\n\n    p.clearTriangles = () => {\n        triangles = [];\n    };\n\n    p.clearBullets = () => {\n        triangles.forEach(triangle => {\n            triangle.bullets = [];\n        });\n    };\n\n    p.clearGravityPoints = () => {\n        gravPoint = p.createVector(p.width / 2, p.height / 2);\n        gravList = [];\n    };\n\n    p.isBounceEnabled = () => isBorderEnabled;\n\n    p.getGravityMode = () => gravityMode;\n\n    p.getGravityPoint = function () {\n        if (gravityMode === GravityMode.SIMPLE || gravityMode === GravityMode.TRUE) {\n            return p.createVector(p.mouseX, p.mouseY);\n        } else {\n            return gravPoint;\n        }\n    };\n\n    p.getGravityList = () => gravList;\n\n    p.getDecay = () => decay;\n\n    p.getAimPoint = function () {\n        if (aimMode === AimMode.FIXED) {\n            return fixedPoint;\n        } else if (aimMode === AimMode.MOUSE) {\n            return p.createVector(p.mouseX, p.mouseY);\n        } else {\n            throw new Error(\"Error finding aim mode\");\n        }\n    };\n\n    p.getKeyCodes = () => keyCodes;\n\n    p.getKeys = () => keys;\n\n    p.getBounceMode = () => isBorderEnabled;\n\n    p.getBorderWeight = () => BORDER_WEIGHT;\n\n    p.keyPressed = function (event) {\n\n        //  Get key data\n        let k = p.key;\n        let kc = p.keyCode;\n\n        console.log(k);\n        console.log(kc);\n\n        if (k < keysSize) {\n            keys[k] = true;\n        } else {\n            keyCodes[kc] = true;\n        }\n\n        // Handle key data\n        // if (kc === p.ENTER) {\n        //     generationMode = generationMode === GenerationMode.DISCRETE ? GenerationMode.CONTINUOUS : GenerationMode.DISCRETE;\n        // }\n        // if (k === 'f') {\n        //     if (fixedPoint !== null) {\n        //         fixedPoint = null;\n        //     } else {\n        //         fixedPoint = p.createVector(p.mouseX, p.mouseY);\n        //     }\n        // }\n        // if (k === 'a') {\n        //     isAutoFireEnabled = !isAutoFireEnabled;\n        // }\n        // if (k === ' ') {\n        //     triangles = [];\n        // }\n        // if (k === 'b') {\n        //     isBorderEnabled = !isBorderEnabled;\n        // }\n        // if (k === 'c') {\n        //     triangles.forEach(triangle => {\n        //         triangle.bullets = [];\n        //     });\n        // }\n        // if (k === 'g') {\n        //     if (gravityMode === GravityMode.POINT) {\n        //         gravPoint = p.createVector(p.mouseX, p.mouseY);\n        //     } else if (gravityMode === GravityMode.MULTI_POINT) {\n        //         gravList.push(p.createVector(p.mouseX, p.mouseY));\n        //     }\n        // }\n        // if (k === 'r') {\n        //     if (gravityMode === GravityMode.POINT) {\n        //         gravPoint = p.createVector(p.width / 2, p.height / 2);\n        //     } else if (gravityMode === GravityMode.MULTI_POINT) {\n        //         gravList = [];\n        //     }\n        // }\n        // if (k === '1') {\n        //     gravityMode = GravityMode.OFF;\n        // }\n        // if (k === '2') {\n        //     gravityMode = GravityMode.SIMPLE;\n        // }\n        // if (k === '3') {\n        //     gravityMode = GravityMode.TRUE;\n        // }\n        // if (k === '4') {\n        //     gravityMode = GravityMode.POINT;\n        // }\n        // if (k === '5') {\n        //     gravityMode = GravityMode.MULTI_POINT;\n        // }\n        // if (generationMode === GenerationMode.DISCRETE) {\n        //     if (kc === p.BACKSPACE) {\n        //         if (triangles.length !== 0) {\n        //             triangles.shift();\n        //         }\n        //     }\n        // }\n    };\n\n\n\n    /**\n     * Is called once when a key is released\n     *\n     * @param event event holding data about the released key\n     */\n    p.keyReleased = function (event) {\n        let k = event.key;\n        let kc = event.keyCode;\n\n        //  Simply set corresponding array pos to false;\n        if (k < keys.length) {\n            keys[k] = false;\n        } else {\n            keyCodes[kc] = false;\n        }\n    }\n\n    /**\n     * Is called once when a mouse button is pressed\n     *\n     * @param event event containing mouse button info\n     */\n\n    p.mousePressed = function (event) {\n        let mb = p.mouseButton;\n\n        //  Set array position to true\n        mouseButtons[mb] = true;\n\n        //  Handle mouse button actions\n        if (p.isMouseOverCanvas()) {\n            // if (mb === p.CENTER) {\n            //     if (gravityMode === GravityMode.POINT) {\n            //         gravPoint = p.createVector(p.mouseX, p.mouseY);\n            //     } else if (gravityMode === GravityMode.MULTI_POINT) {\n            //         gravList.push(p.createVector(p.mouseX, p.mouseY));\n            //     }\n            // }\n            if (mb === p.LEFT) {\n                triangles.forEach(triangle => {\n                    if (bulletCount < BULLET_LIMIT) {\n                        triangle.addBullet();\n                    }\n                });\n            }\n            if (mb === p.RIGHT) {\n                // console.log(placementMode);\n                if (placementMode === PlacementMode.TRIANGLE) {\n                    p.handleAdd();\n                } else if (placementMode === PlacementMode.FIXED_POINT) {\n                    fixedPoint = p.createVector(p.mouseX, p.mouseY);\n                } else if (placementMode === PlacementMode.GRAVITY_POINTS) {\n                    // console.log(\"placing gravwell\");\n                    if (gravityMode === GravityMode.POINT) {\n                        gravPoint = p.createVector(p.mouseX, p.mouseY);\n                    } else if (gravityMode === GravityMode.MULTI_POINT) {\n                        gravList.push(p.createVector(p.mouseX, p.mouseY));\n                    }\n                } else {\n                    throw new Error(\"PLACEMENT MODE IS BIG PROBLEM\")\n                }\n            }\n        }\n    }\n\n    /**\n     * Is called once when a mouse button is released\n     *\n     * @param event event containing data about the mouse button released\n     */\n\n    p.mouseReleased = function (event) {\n        let mb = p.mouseButton;\n\n        //  Simply set position to false\n        mouseButtons[mb] = false;\n    };\n\n    p.calculateFrameRate = function () {\n        if (p.frameCount % updateFrequency === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n        }\n    }\n\n    p.updateCallbacks = function () {\n        if (p.frameCount % updateFrequency === 0) {\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n\n            if (typeof informationCallback !== \"undefined\") {\n                informationCallback(new Map([\n                    [\"frame_rate\", \"FPS: \" + displayFrameRate.toFixed(0)],\n                    [\"triangle_count\", \"Triangles: \" + triangles.length],\n                    [\"bullet_count\", \"Bullets: \" + bulletCount],\n                    [\"triangle_update_time\", \"Triangle Update Time: \" + triangleUpdateTime.toFixed(2) + \"ms\"],\n                    [\"bullet_update_time\", \"Bullet Update Time: \" + bulletUpdateTime.toFixed(2) + \"ms\"],\n                    [\"triangle_draw_time\", \"Triangle Draw Time: \" + triangleDrawTime.toFixed(2) + \"ms\"],\n                    [\"bullet_draw_time\", \"Bullet Draw Time: \" + bulletDrawTime.toFixed(2) + \"ms\"],\n                ]));\n            }\n            // if (typeof activeTrailCountCallback !== \"undefined\") {\n            //     activeTrailCountCallback(trails.length);\n            // }\n        }\n    };\n\n    p.isMouseOverCanvas = function () {\n        if (p.mouseX > 0 && p.mouseX < p.width &&\n            p.mouseY > 0 && p.mouseY < p.height) {\n            return true;\n        }\n        return false;\n    };\n\n    p.disableRightClick = function (c) {\n        c.oncontextmenu = function (event) {\n            event.preventDefault();\n            return false;\n        }\n    }\n\n    p.windowResized = function () {\n        p.resize();\n    };\n\n    p.resize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.resizeCanvas(w, h);\n\n        p.background(0);\n    };\n\n    p.checkResize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        if (w !== p.width || h !== p.height) {\n            p.resize();\n        }\n    };\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        // sketch components\n        if (didSetup) {\n            if (typeof newProps.generationMode !== \"undefined\") {\n                if (generationMode !== newProps.generationMode) {\n                    generationMode = newProps.generationMode;\n                }\n            }\n            if (typeof newProps.gravityMode !== \"undefined\") {\n                if (gravityMode !== newProps.gravityMode) {\n                    gravityMode = newProps.gravityMode;\n                }\n            }\n            if (typeof newProps.placementMode !== \"undefined\") {\n                if (placementMode !== newProps.placementMode) {\n                    placementMode = newProps.placementMode;\n                }\n            }\n            if (typeof newProps.aimMode !== \"undefined\") {\n                if (aimMode !== newProps.aimMode) {\n                    aimMode = newProps.aimMode;\n                }\n            }\n            if (typeof newProps.isBorderEnabled !== \"undefined\") {\n                if (isBorderEnabled !== newProps.isBorderEnabled) {\n                    isBorderEnabled = newProps.isBorderEnabled;\n                }\n            }\n            if (typeof newProps.isAutoFireEnabled !== \"undefined\") {\n                if (isAutoFireEnabled !== newProps.isAutoFireEnabled) {\n                    isAutoFireEnabled = newProps.isAutoFireEnabled;\n                }\n            }\n        }\n\n        // info callbacks\n        // if (typeof newProps.onFrameRateChange !== \"undefined\") {\n        //     if (typeof frameRateCallback === \"undefined\") {\n        //         frameRateCallback = newProps.onFrameRateChange;\n        //     }\n        // }\n        // if (typeof newProps.onTriangleCountChange !== \"undefined\") {\n        //     if (typeof triangleCountCallback === \"undefined\") {\n        //         triangleCountCallback = newProps.onTriangleCountChange;\n        //     }\n        // }\n        // if (typeof newProps.onBulletCountChange !== \"undefined\") {\n        //     if (typeof bulletCountCallback === \"undefined\") {\n        //         bulletCountCallback = newProps.onBulletCountChange;\n        //     }\n        // }\n        // if (typeof newProps.onTriangleUpdateTimeChange !== \"undefined\") {\n        //     if (typeof triangleUpdateTimeChange === \"undefined\") {\n        //         bulletCountCallback = newProps.onTriangleTimeChange;\n        //     }\n        // }\n\n\n        if (typeof newProps.setClearTrianglesCallback !== \"undefined\") {\n            if (!isClearTrianglesCallbackSet) {\n                isClearTrianglesCallbackSet = true;\n                newProps.setClearTrianglesCallback(p.clearTriangles);\n            }\n        }\n        if (typeof newProps.setClearBulletsCallback !== \"undefined\") {\n            if (!isClearBulletsCallbackSet) {\n                isClearBulletsCallbackSet = true;\n                newProps.setClearBulletsCallback(p.clearBullets);\n            }\n        }\n        if (typeof newProps.setClearGravityPointsCallback !== \"undefined\") {\n            if (!isClearGravityPointsCallbackSet) {\n                isClearGravityPointsCallbackSet = true;\n                newProps.setClearGravityPointsCallback(p.clearGravityPoints);\n            }\n        }\n        // HIGHLY EXPERIMENTAL\n\n        if (typeof newProps.onInformationChange !== \"undefined\") {\n            if (typeof informationCallback === \"undefined\") {\n                informationCallback = newProps.onInformationChange;\n            }\n        }\n    };\n\n};\n\nexport default triangles;\n\n/*\n\n/**\n *  @version 1.0\n *  @author Paul Wrubel - VoxaelFox\n *\n *  Creates Triangles on a PApplet window supported by processing libraries.\n *\n *  Features include:\n *      Triangles aim at mouse\n *      Triangles can move toward, away from, and orbit the mouse\n *      Trianges can shoot bullets.\n *      Color is based on mouse position (Background) and heading (Triangles/Bullets)\n *      Perspective Movement! (Alpha)\n *\n *  Controls:\n *      RIGHT CLICK:    Create Triangle at cursor\n *                          (can be held in dynamic mode)\n *      LEFT CLICK:     Shoot Bullet from all Triangles on screen at cursor\n *                          (can be held in dynamic mode)\n *      CENTRE CLICK:   Remove oldest Triangle\n *                          (can be held in dynamic mode)\n *\n *      UP ARROW:       Move all Triangles towards cursor (can be held)\n *      DOWN ARROW:     Move all Triangles away from cursor (can be held)\n *      LEFT ARROW:     All Triangles orbit cursor anti-clockwise (can be held)\n *      RIGHT ARROW:    All Triangles orbit cursor clockwise (can be held)\n *\n *      i:              Change perspective up\n *                          (can be held in dynamic mode / blocky in static mode)\n *      k:              Change perspective down\n *                          (can be held in dynamic mode / blocky in static mode)\n *      j:              Change perspective left\n *                          (can be held in dynamic mode / blocky in static mode)\n *      l:              Change perspective right\n *                          (can be held in dynamic mode / blocky in static mode)\n *      u:              Change perspective out\n *                          (can be held in dynamic mode / blocky in static mode)\n *      o:              Change perspective in\n *                          (can be held in dynamic mode / blocky in static mode)\n *\n *      SPACE:          Clears all triangles and bullets from screen\n *\n *      ENTER:          Toggles dynamic / static mode\n *\n *\n\n    float getBorderWeight() {\n        return BORDER_WEIGHT;\n    }\n\n    float getDecay() {\n        return decay;\n    }\n\n    /**\n     * Getter method for keyCodes\n     *\n     * @return the keyCodes array\n     *\n\n    boolean[] getKeyCodes() {\n        return keyCodes;\n    }\n\n    /**\n     * Is called when a key is pressed down.\n     *\n     * @param event event linked to which key was pressed\n     *\n\n\n\n}\n\n\n\n*/","import React from 'react';\nimport { Paper, Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core';\nimport \"containers/Panels.css\"\n\nclass RadioPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.props.onChange(event.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Paper elevation={2}\n                    className=\"PaperRadioButtons\">\n                    <FormControl>\n                        <FormLabel>{this.props.label}</FormLabel>\n                        <RadioGroup defaultValue={this.props.defaultValue} aria-label={this.props.panelKey} name={this.props.panelKey} value={this.props.value} onChange={this.handleChange}>\n                            {this.props.buttons.map(button => (\n                                <FormControlLabel key={button.key} value={button.value} control={<Radio />} label={button.label} />\n                            ))}\n                        </RadioGroup>\n                    </FormControl>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nexport default RadioPanel;\n","import React from 'react';\nimport { Paper, FormControlLabel, Switch, FormGroup } from '@material-ui/core';\nimport \"containers/Panels.css\"\n\nclass SwitchPanel extends React.Component {\n    render() {\n        return (\n            <div>\n                <Paper elevation={2}\n                    className=\"PaperRadioButtons\">\n                    <FormGroup>\n                        {this.props.switches.map(s => (\n                        <FormControlLabel\n                            key={s.key}\n                            control={<Switch checked={s.value} onChange={event => {s.onChange(event.target.checked)}} />}\n                            label={s.label}\n                        />\n                        ))}\n                    </FormGroup>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nexport default SwitchPanel;\n","import React from 'react';\nimport { Button, Paper, Grid } from '@material-ui/core';\nimport \"containers/Panels.css\"\n\nclass ButtonPanel extends React.Component {\n    render() {\n        return (\n            <div>\n                <Paper elevation={2}\n                    className=\"PaperButtons\">\n                    <Grid\n                        className=\"ButtonGrid\"\n                        container\n                        spacing={1}\n                        justify=\"space-evenly\"\n                        alignItems=\"center\"\n                        direction=\"row\"\n                    >\n                        {this.props.buttons.map(b => (\n                            <Grid item xs>\n                                <Button\n                                    key={b.key}\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={b.onClick}\n                                >\n                                    {b.label}\n                                </Button>\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Paper>\n            </div>\n        );\n    }\n}\n\nexport default ButtonPanel;\n","import React from 'react';\nimport { Grid, Drawer } from '@material-ui/core';\nimport \"containers/Sidebar.css\"\nimport InfoPanel from 'containers/panels/InfoPanel';\nimport RadioPanel from 'containers/panels/RadioPanel';\nimport SwitchPanel from 'containers/panels/SwitchPanel';\nimport ButtonPanel from 'containers/panels/ButtonPanel';\n\nclass TrianglesSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Drawer\n                    className=\"SidebarDrawer\"\n                    variant=\"persistent\"\n                    open={this.props.isControlsPanelOpen}>\n                    <Grid\n                        className=\"SidebarGrid\"\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        wrap=\"nowrap\">\n                        <Grid item xs>\n                            {/* {console.log(this.props.information.entries())} */}\n                            {/* {this.props.information.entries().foreach(e => console.log(e))} */}\n                            <InfoPanel\n                                info={Array.from(this.props.information, ([key, value]) => ({\n                                    key: key,\n                                    text: value,\n                                }))}\n                            // info={this.props.information.entries().map(entry => ({key: entry}))\n                            //     [\n                            //     {\n                            //         key: \"information\",\n                            //         text: \"information: \" + this.props.information.triangleCount\n                            //     },\n                            // ]\n                            // } \n                            />\n                        </Grid>\n                        <Grid item xs>\n                            <RadioPanel\n                                panelKey=\"placement_mode\"\n                                label=\"Placement\"\n                                value={this.props.placementMode}\n                                defaultValue=\"triangle\"\n                                onChange={this.props.onPlacementModeChange}\n                                buttons={[\n                                    {\n                                        key: \"triangles\",\n                                        label: \"Triangles\",\n                                        value: \"triangle\"\n                                    },\n                                    {\n                                        key: \"aim_point\",\n                                        label: \"Aim Point\",\n                                        value: \"fixed_point\"\n                                    },\n                                    {\n                                        key: \"gravity_points\",\n                                        label: \"Gravity Points\",\n                                        value: \"gravity_points\"\n                                    },\n                                ]} />\n                        </Grid>\n                        <Grid item xs>\n                            <RadioPanel\n                                panelKey=\"generation_mode\"\n                                label=\"Generation\"\n                                value={this.props.generationMode}\n                                defaultValue=\"discrete\"\n                                onChange={this.props.onGenerationModeChange}\n                                buttons={[\n                                    {\n                                        key: \"discrete\",\n                                        label: \"Discrete\",\n                                        value: \"discrete\"\n                                    },\n                                    {\n                                        key: \"continuous\",\n                                        label: \"Continuous\",\n                                        value: \"continuous\"\n                                    },\n                                ]} />\n                        </Grid>\n                        <Grid item xs>\n                            <RadioPanel\n                                panelKey=\"aim_mode\"\n                                label=\"Aim Point\"\n                                value={this.props.aimMode}\n                                defaultValue=\"mouse\"\n                                onChange={this.props.onAimModeChange}\n                                buttons={[\n                                    {\n                                        key: \"mouse\",\n                                        label: \"Mouse\",\n                                        value: \"mouse\"\n                                    },\n                                    {\n                                        key: \"fixed\",\n                                        label: \"Fixed\",\n                                        value: \"fixed\"\n                                    },\n                                ]} />\n                        </Grid>\n                        <Grid item xs>\n                            <RadioPanel\n                                panelKey=\"gravity_mode\"\n                                label=\"Gravity\"\n                                value={this.props.gravityMode}\n                                defaultValue=\"off\"\n                                onChange={this.props.onGravityModeChange}\n                                buttons={[\n                                    {\n                                        key: \"off\",\n                                        label: \"Off\",\n                                        value: \"off\"\n                                    },\n                                    {\n                                        key: \"simple\",\n                                        label: \"Simple\",\n                                        value: \"simple\"\n                                    },\n                                    {\n                                        key: \"true\",\n                                        label: \"True\",\n                                        value: \"true\"\n                                    },\n                                    {\n                                        key: \"point\",\n                                        label: \"Point\",\n                                        value: \"point\"\n                                    },\n                                    {\n                                        key: \"multi_point\",\n                                        label: \"Multi-Point\",\n                                        value: \"multi_point\"\n                                    },\n                                ]} />\n                        </Grid>\n                        <Grid item xs>\n                            <SwitchPanel\n                                switches={((() => {\n                                    let switches = [\n                                        {\n                                            key: \"solid_border\",\n                                            label: \"Border\",\n                                            onChange: this.props.onBorderChange,\n                                            value: this.props.isBorderEnabled,\n                                        },\n                                        this.props.generationMode === \"continuous\" ? {\n                                            key: \"auto_fire\",\n                                            label: \"Auto Fire\",\n                                            onChange: this.props.onAutoFireChange,\n                                            value: this.props.isAutoFireEnabled,\n                                        } : undefined,\n                                    ];\n                                    return switches.filter((e) => e !== undefined);\n                                })())}\n                            />\n                        </Grid>\n                        <Grid item xs>\n                            <ButtonPanel\n                                buttons={(() => {\n                                    let buttons = [\n                                        typeof this.props.onClearTrianglesButtonClick !== \"undefined\" ? {\n                                            key: \"clear_triangles\",\n                                            label: \"Clear Triangles\",\n                                            onClick: this.props.onClearTrianglesButtonClick,\n                                        } : undefined,\n                                        typeof this.props.onClearBulletsButtonClick !== \"undefined\" ? {\n                                            key: \"clear_bullets\",\n                                            label: \"Clear Bullets\",\n                                            onClick: this.props.onClearBulletsButtonClick,\n                                        } : undefined,\n                                        typeof this.props.onClearGravityPointsButtonClick !== \"undefined\" ? {\n                                            key: \"clear_gravity_points\",\n                                            label: \"Clear Gravity Points\",\n                                            onClick: this.props.onClearGravityPointsButtonClick,\n                                        } : undefined,\n                                    ];\n                                    return buttons.filter((e) => e !== undefined);\n                                })()}\n                            />\n                        </Grid>\n                        {/* <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperRadioControl\">\n                                <ModeRadioButtons\n                                    mode={this.props.mode}\n                                    onModeChange={this.props.onModeChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperRadioControl\">\n                                <ClearButton\n                                    onClick={this.props.onClearButtonPress} />\n                            </Paper>\n                        </Grid> */}\n                    </Grid>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default TrianglesSidebar;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5Triangles from \"sketches/triangles/p5_triangles\";\nimport TrianglesSidebar from './TrianglesSidebar';\n\nclass TrianglesApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            frameRate: 0,\n            generationMode: \"discrete\",\n            gravityMode: \"off\",\n            aimMode: \"mouse\",\n            placementMode: \"triangle\",\n            isBorderEnabled: false,\n            isAutoFireEnabled: false,\n            information: new Map(),\n        }\n        \n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n        this.handleInformationChange = this.handleInformationChange.bind(this);\n        this.handleGenerationModeChange = this.handleGenerationModeChange.bind(this);\n        this.handleGravityModeChange = this.handleGravityModeChange.bind(this);\n        this.handleAimModeChange = this.handleAimModeChange.bind(this);\n        this.handlePlacementModeChange = this.handlePlacementModeChange.bind(this);\n        this.handleBorderChange = this.handleBorderChange.bind(this);\n        this.handleAutoFireChange = this.handleAutoFireChange.bind(this);\n        \n        this.handleClearTrianglesButtonClick = this.handleClearTrianglesButtonClick.bind(this);\n        this.setClearTrianglesButtonClickFunc = this.setClearTrianglesButtonClickFunc.bind(this);\n        this.handleClearBulletsButtonClick = this.handleClearBulletsButtonClick.bind(this);\n        this.setClearBulletsButtonClickFunc = this.setClearBulletsButtonClickFunc.bind(this);\n        this.handleClearGravityPointsButtonClick = this.handleClearGravityPointsButtonClick.bind(this);\n        this.setClearGravityPointsButtonClickFunc = this.setClearGravityPointsButtonClickFunc.bind(this);\n    }\n\n    handleFrameRateChange(newValue) {\n        this.setState({\n            frameRate: newValue\n        });\n    }\n\n    handleInformationChange(newValue) {\n        this.setState({\n            information: newValue\n        });\n    }\n\n    handleGenerationModeChange(newValue) {\n        this.setState({\n            generationMode: newValue\n        });\n    }\n\n    handleGravityModeChange(newValue) {\n        this.setState({\n            gravityMode: newValue\n        });\n    }\n\n    handlePlacementModeChange(newValue) {\n        this.setState({\n            placementMode: newValue\n        });\n    }\n\n    handleAimModeChange(newValue) {\n        this.setState({\n            aimMode: newValue\n        });\n    }\n\n    handleBorderChange(newValue) {\n        this.setState({\n            isBorderEnabled: newValue\n        });\n    }\n\n    handleAutoFireChange(newValue) {\n        this.setState({\n            isAutoFireEnabled: newValue\n        });\n    }\n\n    // Buttons\n\n    handleClearTrianglesButtonClick() {\n        if (typeof this.state.clearTrianglesButtonClickFunc !== \"undefined\") {\n            this.state.clearTrianglesButtonClickFunc();\n        }\n    }\n\n    setClearTrianglesButtonClickFunc(newValue) {\n        this.setState({\n            clearTrianglesButtonClickFunc: newValue\n        });\n    }\n\n    handleClearBulletsButtonClick() {\n        if (typeof this.state.clearBulletsButtonClickFunc !== \"undefined\") {\n            this.state.clearBulletsButtonClickFunc();\n        }\n    }\n\n    setClearBulletsButtonClickFunc(newValue) {\n        this.setState({\n            clearBulletsButtonClickFunc: newValue\n        });\n    }\n\n    handleClearGravityPointsButtonClick() {\n        if (typeof this.state.clearGravityPointsButtonClickFunc !== \"undefined\") {\n            this.state.clearGravityPointsButtonClickFunc();\n        }\n    }\n\n    setClearGravityPointsButtonClickFunc(newValue) {\n        this.setState({\n            clearGravityPointsButtonClickFunc: newValue\n        });\n    }\n\n    // handleClearButtonPress() {\n    //     if (typeof this.state.clearButtonPressFunc !== \"undefined\") {\n    //         this.state.clearButtonPressFunc();\n    //     }\n    // }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs>\n                        <TrianglesSidebar\n                            generationMode={this.state.generationMode}\n                            onGenerationModeChange={this.handleGenerationModeChange}\n                            gravityMode={this.state.gravityMode}\n                            onGravityModeChange={this.handleGravityModeChange}\n                            aimMode={this.state.aimMode}\n                            onAimModeChange={this.handleAimModeChange}\n                            placementMode={this.state.placementMode}\n                            onPlacementModeChange={this.handlePlacementModeChange}\n                            isBorderEnabled={this.state.isBorderEnabled}\n                            onBorderChange={this.handleBorderChange}\n                            isAutoFireEnabled={this.state.isAutoFireEnabled}\n                            onAutoFireChange={this.handleAutoFireChange}\n\n                            onClearTrianglesButtonClick={this.state.clearTrianglesButtonClickFunc}\n                            onClearBulletsButtonClick={this.state.clearBulletsButtonClickFunc}\n                            onClearGravityPointsButtonClick={this.state.clearGravityPointsButtonClickFunc}\n\n                            frameRate={this.state.frameRate}\n                            information={this.state.information}\n                            \n                            isControlsPanelOpen={this.props.isControlsPanelOpen}\n                            />\n                    </Grid>\n                    <Grid container item xs={this.props.isControlsPanelOpen ? 9 : 12}>\n                        <SketchContainer\n                            sketch={p5Triangles}\n\n                            generationMode={this.state.generationMode}\n                            gravityMode={this.state.gravityMode}\n                            aimMode={this.state.aimMode}\n                            placementMode={this.state.placementMode}\n                            isBorderEnabled={this.state.isBorderEnabled}\n                            isAutoFireEnabled={this.state.isAutoFireEnabled}\n\n                            onFrameRateChange={this.handleFrameRateChange}\n                            onInformationChange={this.handleInformationChange}\n\n                            setClearTrianglesCallback={this.setClearTrianglesButtonClickFunc}\n                            setClearBulletsCallback={this.setClearBulletsButtonClickFunc}\n                            setClearGravityPointsCallback={this.setClearGravityPointsButtonClickFunc}\n                            />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default TrianglesApp;","import ChainballApp from \"sketches/chainball/ChainballApp\"\nimport OrbiterApp from \"sketches/orbiter/OrbiterApp\"\nimport InteractiveHistogramApp from \"sketches/interactivehistogram/InteractiveHistogramApp\"\nimport CubeGridApp from \"sketches/cubegrid/CubeGridApp\"\nimport TrailsApp from \"sketches/trails/TrailsApp\"\nimport TrianglesApp from \"sketches/triangles/TrianglesApp\"\n\nconst appMap = new Map([\n    [\"chainball\", {\n        name: \"chainball\",\n        displayName: \"Chainball\",\n        component: ChainballApp,\n        version: \"1.0\",\n        description: \"2D kinematic demonstration\",\n        creationDate: \"2020-02-09\",\n    }],\n    [\"orbiter\", {\n        name: \"orbiter\",\n        displayName: \"Orbiter\",\n        component: OrbiterApp,\n        version: \"0.2a\",\n        description: \"Orbiter simulation\",\n        creationDate: \"March 8, 2020 00:00:00\",\n    }],\n    [\"interactivehistogram\", {\n        name: \"interactivehistogram\",\n        displayName: \"Interactive Histogram\",\n        component: InteractiveHistogramApp,\n        version: \"1.0\",\n        description: \"An Interactive Histogram\",\n        creationDate: \"January 1, 2016 00:00:00\",\n    }],\n    [\"cubegrid\", {\n        name: \"cubegrid\",\n        displayName: \"CubeGrid\",\n        component: CubeGridApp,\n        version: \"0.9b\",\n        description: \"3D customizable grid of cubes\",\n        creationDate: \"January 1, 2016 00:00:00\",\n    }],\n    [\"trails\", {\n        name: \"trails\",\n        displayName: \"Trails\",\n        component: TrailsApp,\n        version: \"0.7b\",\n        description: \"Trail art creator\",\n        creationDate: \"January 1, 2016 00:00:00\",\n    }],\n    [\"triangles\", {\n        name: \"triangles\",\n        displayName: \"Triangles\",\n        component: TrianglesApp,\n        version: \"0.8.1b\",\n        description: \"Triangles\",\n        creationDate: \"November 5, 2017 00:00:00\",\n    }]\n]);\n\nexport default appMap;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport MenuBar from './MenuBar';\nimport './Vixuals.css';\nimport appMap from \"./AppMap\";\nimport { Redirect, withRouter } from 'react-router-dom';\n\nconst appName = \"Vixuals\"\nconst appVersion = \"0.4.6.4a\"\n\nconst defaultApp = \"chainball\"\n\nclass Vixuals extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isControlsPanelOpen: true\n        };\n\n        this.handleSelectedAppChange = this.handleSelectedAppChange.bind(this);\n        this.handleControlsPanelToggle = this.handleControlsPanelToggle.bind(this);\n    }\n\n    handleSelectedAppChange(newValue) {\n        return event => {\n            this.setState({\n                redirectLocation: newValue,\n                shouldRedirect: true\n            });\n        }\n        // return <Redirect to={`/${newValue}`}/>\n    }\n\n    handleControlsPanelToggle(newValue) {\n        return event => {\n            this.setState({\n                isControlsPanelOpen: newValue\n            });\n        }\n    }\n\n    render() {\n        if (this.state.shouldRedirect) {\n            this.setState({ shouldRedirect: false })\n            return <Redirect to={`/${this.state.redirectLocation}`} />\n        }\n        if (this.props.match.params.app === this.props.defaultParam) {\n            return <Redirect to={`/${defaultApp}`} />\n        }\n        let App = appMap.get(this.props.match.params.app).component;\n        return (\n            <div className=\"Vixuals\">\n                {/* <Route \n                path=\"/:app\"> */}\n                <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    wrap='nowrap'>\n                    <Grid item>\n                        <MenuBar\n                            appName={appName}\n                            appVersion={appVersion}\n                            selectedApp={appMap.get(this.props.match.params.app)}\n                            setSelectedApp={this.handleSelectedAppChange}\n                            apps={appMap}\n\n                            onControlsPanelToggle={this.handleControlsPanelToggle}\n                            isControlsPanelOpen={this.state.isControlsPanelOpen} />\n                    </Grid>\n                    <Grid item>\n                        <App\n                            onControlsPanelToggle={this.handleControlsPanelToggle}\n                            isControlsPanelOpen={this.state.isControlsPanelOpen} />\n                    </Grid>\n                </Grid>\n                {/* </Route>\n                <Route path=\"/\">\n                    <Redirect to={`/${defaultApp}`} />\n                </Route> */}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Vixuals);","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Vixuals from 'Vixuals'\n\nconst DEFAULT_PARAM = \"__DEFAULT_APP__\"\n\nclass VixualsRouter extends React.Component {\n\n    render() {\n        return (\n            <div className=\"VixualsRouter\">\n                <HashRouter>\n                    <Switch>\n                        <Route path=\"/:app\">\n                            <Vixuals\n                                defaultParam={DEFAULT_PARAM}/>\n                        </Route>\n                        <Route path=\"/\">\n                            <Redirect to={`/${DEFAULT_PARAM}`}/>\n                        </Route>\n                    </Switch>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\nexport default VixualsRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Vixuals from './Vixuals';\nimport VixualsRouter from './VixualsRouter';\nimport './index.css';\n\nReactDOM.render(<VixualsRouter/>, document.getElementById('root'));"],"sourceRoot":""}