{"version":3,"sources":["AppList.js","MenuBar.js","containers/SketchContainer.js","sketches/chainball/p5_chainball.js","sketches/chainball/panels/BallCountSlider.js","sketches/chainball/panels/LinkDampingSlider.js","sketches/chainball/panels/LinkLengthSlider.js","sketches/chainball/panels/LinkTensionSlider.js","sketches/chainball/panels/ModeRadioButtons.js","sketches/chainball/ChainballSidebar.js","sketches/chainball/ChainballApp.js","sketches/orbiter/p5_orbiter.js","sketches/orbiter/OrbiterSidebar.js","sketches/orbiter/OrbiterApp.js","AppMap.js","Vixuals.js","VixualsRouter.js","index.js"],"names":["AppList","className","role","onClick","this","props","toggleDrawer","List","Array","from","apps","values","map","app","ListItem","button","key","name","setSelectedApp","ListItemText","primary","displayName","React","Component","MenuBar","state","isMenuDrawerOpen","handleMenuButtonToggle","bind","newValue","event","type","setState","AppBar","position","Toolbar","variant","isControlsPanelOpen","Tooltip","title","IconButton","edge","onControlsPanelToggle","Typography","selectedApp","version","description","appName","appVersion","Drawer","open","onClose","anchor","SketchContainer","p5Sketch","other","sketch","chainball","p","core","frameRateCallback","coreSpeedCallback","velocityArrow","accelerationArrow","linkingLine","didSetup","balls","frameRates","displayFrameRate","Modes","currentMode","defaultFollowDistance","tension","damping","setup","w","select","width","h","height","createCanvas","colorMode","HSB","angleMode","DEGREES","frameRate","radius","createVector","velocity","acceleration","minColor","color","maxColor","isBeingDragged","i","followDist","pos","copy","console","log","length","push","followDistance","minCompressionColor","maxCompressionColor","minTensionColor","maxTensionColor","staticColor","draw","checkResize","background","mouseVector","mouseX","mouseY","mouseIsOverCanvas","thisBall","parentBall","strokeWeight","stroke","targetDistance","realDistance","p5","Vector","sub","mag","RGB","lerpColor","reRange","line","x","y","pop","ball","fill","circle","startPosition","add","setMag","vector","limit","forceIsBeingApplied","dist","accelerationArrowColor","drawArrow","mult","velocityArrowColor","frameCount","shift","reduce","sum","num","toFixed","rebound","toParent","windowResized","resize","resizeCanvas","mousePressed","mouseReleased","keyTyped","setBallCount","newLength","removeBalls","addBalls","count","modifyFollowDistance","delta","forEach","setFollowDistance","newDist","fromVector","toVector","arrowColor","translate","rotate","heading","triangle","arrowSize","in_min","in_max","out_min","out_max","myCustomRedrawAccordingToNewPropsHandler","newProps","mode","ballCount","linkLength","linkTension","linkDamping","onFrameRateChange","onCoreSpeedChange","BallCountSlider","handleBallCountChange","onBallCountChange","Slider","defaultValue","value","onChange","min","max","step","aria-labelledby","valueLabelDisplay","id","gutterBottom","LinkDampingSlider","handleLinkDampingChange","onLinkDampingChange","getAriaValueText","getValueText","valueLabelFormat","marks","LinkLengthSlider","handleLinkLengthChange","onLinkLengthChange","LinkTensionSlider","handleLinkTensionChange","onLinkTensionChange","ModeRadioButtons","handleModeChange","onModeChange","target","FormControl","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","label","ChainballSidebar","Grid","container","spacing","direction","wrap","item","xs","Paper","elevation","coreSpeed","ChainballApp","handleFrameRateChange","handleCoreSpeedChange","newFrameRateValue","newCoreSpeedValue","alignItems","p5Chainball","orbiter","planetSpeedCallback","moonSpeedCallback","planetAngle","moonAngle","sunLocation","planetOrbitSpeedMod","moonOrbitSpeedMod","isSunBeingDragged","sunLocationOffset","sq","planetX","cos","planetY","sin","moonX","moonY","sunRadius","planetRadius","moonRadius","deltaTime","isMouseOverCircle","location","circleLoc","circleRadius","dx","abs","dy","sqrt","onPlanetSpeedChange","onMoonSpeedChange","OrbiterSidebar","planetSpeed","moonSpeed","OrbiterApp","handlePlanetSpeedChange","handleMoonSpeedChange","newPlanetSpeedValue","newMoonSpeedValue","p5Orbiter","appMap","Map","component","Vixuals","handleSelectedAppChange","handleControlsPanelToggle","redirectLocation","shouldRedirect","to","match","params","defaultParam","App","get","withRouter","VixualsRouter","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed9a26dd.chunk.js","sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport \"./AppList.css\"\nclass AppList extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div \n                className=\"AppList\"\n                role=\"presentation\"\n                onClick={this.props.toggleDrawer(false)}>\n                <List>\n                    {Array.from(this.props.apps.values()).map(app => (\n                        <ListItem button key={app.name} onClick={this.props.setSelectedApp(app.name)}>\n                            <ListItemText primary={app.displayName}/>\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        )\n    }\n}\n\nexport default AppList;","import React from 'react';\nimport \"./MenuBar.css\";\nimport { Typography, AppBar, Toolbar, IconButton, Drawer, Tooltip } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport AppList from './AppList';\n\nclass MenuBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isMenuDrawerOpen: false\n        };\n\n        this.handleMenuButtonToggle = this.handleMenuButtonToggle.bind(this);\n    }\n\n    handleMenuButtonToggle(newValue) {\n        return event => {\n            if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n                return;\n            }\n            this.setState({\n                isMenuDrawerOpen: newValue\n            });\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"MenuBar\">\n                <AppBar position=\"static\">\n                    <Toolbar variant=\"dense\" className=\"Toolbar\">\n                        {this.props.isControlsPanelOpen &&\n                            <Tooltip title=\"Collapse Controls\">\n                                <IconButton edge=\"start\" onClick={this.props.onControlsPanelToggle(false)}>\n                                    <ArrowBackIcon\n                                        className=\"AppBarButton\" />\n                                </IconButton>\n                            </Tooltip>\n                        }{!this.props.isControlsPanelOpen &&\n                            <Tooltip title=\"Expand Controls\">\n                                <IconButton edge=\"start\" onClick={this.props.onControlsPanelToggle(true)}>\n                                    <ArrowForwardIcon\n                                        className=\"AppBarButton\" />\n                                </IconButton>\n                            </Tooltip>\n                        }\n                        <Typography variant=\"h5\" className=\"SelectedName\">\n                            {this.props.selectedApp.displayName}\n                        </Typography>\n                        <Typography variant=\"body2\" className=\"SelectedVersion\">\n                            v{this.props.selectedApp.version}\n                        </Typography>\n                        <Typography variant=\"body1\" className=\"SelectedDescription Grow\">\n                            {this.props.selectedApp.description}\n                        </Typography>\n                        {/* <div className=\"Grow\" /> */}\n                        <Typography variant=\"body2\" className=\"AppInfo\">\n                            {`\n                            ${this.props.appName} \n                            v${this.props.appVersion}\n                            `}\n                        </Typography>\n                        <Tooltip title=\"Open Menu\">\n                            <IconButton edge=\"end\" onClick={this.handleMenuButtonToggle(true)}>\n                                <MenuIcon\n                                    className=\"AppBarButton\" />\n                            </IconButton>\n                        </Tooltip>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    open={this.state.isMenuDrawerOpen}\n                    onClose={this.handleMenuButtonToggle(false)}\n                    anchor=\"right\">\n                    <AppList\n                        apps={this.props.apps}\n                        toggleDrawer={this.handleMenuButtonToggle}\n                        setSelectedApp={this.props.setSelectedApp} />\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default MenuBar;","import React from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport \"./SketchContainer.css\"\n\nclass SketchContainer extends React.Component {\n    render() {\n        const { p5Sketch, ...other } = this.props;\n        return (\n            <div className=\"SketchContainer\">\n                <P5Wrapper className=\"P5Wrapper\"\n                    sketch={p5Sketch}\n                    {...other}>\n                </P5Wrapper>\n            </div>\n        );\n    }\n}\n\nexport default SketchContainer;","import p5 from 'p5';\n\nlet chainball = (p) => {\n\n    let didSetup = false;\n\n    let core;\n    let balls = [];\n    let frameRates = [];\n    let displayFrameRate = 0;\n\n    const Modes = {\n        STATIC: \"static\",\n        DYNAMIC: \"dynamic\"\n    };\n\n    let currentMode = Modes.STATIC;\n\n    let frameRateCallback;\n    let coreSpeedCallback;\n\n    let ballCount = 5;\n    let environmentFriction = 0.9995;\n\n    let drawLines = true;\n\n    let defaultFollowDistance = 50;\n    let defaultBallRadius = 10;\n\n    let tension = 0.1;\n    let damping = 0.4;\n\n    let velocityArrow;\n    let accelerationArrow;\n    let linkingLine;\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n        // p.createCanvas(p.windowWidth, p.windowHeight);\n        // canvas.parent('Sketch');\n        // canvas.style('display', 'block');\n\n        p.colorMode(p.HSB);\n        p.angleMode(p.DEGREES);\n        p.frameRate(60);\n        // noCursor();\n\n        core = {\n            radius: 25,\n            position: p.createVector(p.width / 2, p.height / 2),\n            velocity: p.createVector(0, 0),\n            acceleration: p.createVector(0, 0),\n            minColor: p.color(240, 0, 100),\n            maxColor: p.color(240, 100, 100),\n            isBeingDragged: false\n        };\n\n        for (let i = 0; i < ballCount; i++) {\n            let followDist;\n            let pos;\n            if (i === 0) {\n                followDist = defaultFollowDistance + (core.radius - defaultBallRadius);\n                pos = core.position.copy();\n            } else {\n                followDist = defaultFollowDistance;\n                console.log(balls.length)\n                pos = balls[balls.length-1].position.copy();\n                console.log(pos)\n            }\n            balls.push({\n                radius: defaultBallRadius,\n                position: pos,\n                velocity: p.createVector(0, 0),\n                followDistance: followDist,\n                minColor: p.color(0, 0, 100),\n                maxColor: p.color(0, 100, 100)\n            });\n        }\n\n        velocityArrow = {\n            minColor: p.color(240, 25, 100),\n            maxColor: p.color(240, 100, 100)\n        };\n\n        accelerationArrow = {\n            minColor: p.color(0, 25, 100),\n            maxColor: p.color(0, 100, 100),\n        };\n\n        linkingLine = {\n            minCompressionColor: p.color(240, 0, 100, 0.5),\n            maxCompressionColor: p.color(240, 100, 100, 0.5),\n            minTensionColor: p.color(0, 0, 100, 0.5),\n            maxTensionColor: p.color(0, 100, 100, 0.5),\n            staticColor: p.color(0, 0, 100, 0.5)\n        };\n\n        didSetup = true;\n    };\n\n    p.draw = function () {\n        p.checkResize();\n\n        p.background(0);\n        let mouseVector = p.createVector(p.mouseX, p.mouseY);\n        let mouseIsOverCanvas =\n            p.mouseX > 0 && p.mouseX < p.width &&\n            p.mouseY > 0 && p.mouseY < p.height;\n\n        /* DRAWING */\n\n        // draw connecting lines\n        if (drawLines) {\n            for (let i = 0; i < balls.length; i++) {\n                let thisBall = balls[i];\n                let parentBall;\n                if (i === 0) {\n                    parentBall = core;\n                } else {\n                    parentBall = balls[i - 1];\n                }\n                p.push();\n                p.strokeWeight(5);\n                if (currentMode === Modes.STATIC) {\n                    p.stroke(linkingLine.staticColor);\n                } else {\n                    let targetDistance = thisBall.followDistance;\n                    let realDistance = p5.Vector.sub(\n                        parentBall.position,\n                        thisBall.position).mag();\n                    p.colorMode(p.RGB);\n                    if (targetDistance > realDistance) {\n                        p.stroke(p.lerpColor(\n                            linkingLine.minCompressionColor,\n                            linkingLine.maxCompressionColor,\n                            p.reRange(realDistance / targetDistance, 1, 0.5, 0, 1)));\n                    } else {\n                        p.stroke(p.lerpColor(\n                            linkingLine.minTensionColor,\n                            linkingLine.maxTensionColor,\n                            p.reRange(realDistance / targetDistance, 1, 4, 0, 1)));\n                    }\n                    p.colorMode(p.HSB);\n                }\n                p.line(thisBall.position.x, thisBall.position.y, parentBall.position.x, parentBall.position.y);\n                p.pop();\n            }\n        }\n\n        // draw the balls\n        for (let i=balls.length-1; i>=0; i--) {\n            let ball = balls[i];   \n            p.fill(ball.minColor);\n            p.circle(ball.position.x, ball.position.y, ball.radius * 2);\n        }\n        // balls.forEach(ball => {\n        //     p.fill(ball.minColor);\n        //     p.circle(ball.position.x, ball.position.y, ball.radius * 2);\n        // })\n\n        // draw the core\n        // colorMode(RGB);\n        p.fill(core.minColor);\n        // colorMode(HSB);\n        p.circle(core.position.x, core.position.y, core.radius * 2)\n\n        // draw force arrows\n        accelerationArrow.startPosition = p5.Vector.add(core.position, p5.Vector.sub(mouseVector, core.position).setMag(core.radius));\n        accelerationArrow.vector = p5.Vector.sub(mouseVector, accelerationArrow.startPosition);\n        accelerationArrow.vector.limit(200);\n\n        if (mouseIsOverCanvas && core.forceIsBeingApplied) {\n            if (mouseVector.dist(core.position) > core.radius) {\n                p.colorMode(p.RGB);\n                let accelerationArrowColor = p.lerpColor(\n                    accelerationArrow.minColor,\n                    accelerationArrow.maxColor,\n                    accelerationArrow.vector.mag() / 200);\n                p.colorMode(p.HSB);\n                p.drawArrow(\n                    accelerationArrow.startPosition,\n                    accelerationArrow.vector,\n                    accelerationArrowColor);\n            }\n        }\n\n        velocityArrow.startPosition = p5.Vector.add(core.position, core.velocity.copy().setMag(core.radius));\n        velocityArrow.vector = core.velocity.copy().mult(10);\n\n        if (core.velocity.mag() > 0.5) {\n            p.colorMode(p.RGB);\n            let velocityArrowColor = p.lerpColor(\n                velocityArrow.minColor,\n                velocityArrow.maxColor,\n                velocityArrow.vector.mag() / 250);\n            p.colorMode(p.HSB);\n            p.drawArrow(\n                velocityArrow.startPosition,\n                velocityArrow.vector,\n                velocityArrowColor);\n        }\n\n        // calc framerate\n        if (p.frameCount % 10 === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n        }\n\n        // callbacks\n        if (p.frameCount % 10 === 0) {\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n            if (typeof coreSpeedCallback !== \"undefined\") {\n                coreSpeedCallback(core.velocity.mag().toFixed(2));\n            }\n        }\n        // $('#framerate').text(`FPS: ${displayFrameRate.toFixed(0)}`);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`fps: ${displayFrameRate.toFixed(0)}`, 5, 35);\n\n\n\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`ball count: ${balls.length}`, 5, 65);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`follow dist: ${defaultFollowDistance}`, 5, 95);\n        // p.textSize(32);\n        // p.fill(p.color(0, 0, 100));\n        // p.text(`size: ${p.windowWidth}x${p.windowHeight}`, 5, 125);\n        // $('#mode').text(`mode: ${currentMode}`);\n\n        /* UPDATING */\n\n        // update core\n        if (mouseIsOverCanvas && core.forceIsBeingApplied && mouseVector.dist(core.position) > core.radius) {\n            core.acceleration = p5.Vector.mult(accelerationArrow.vector, 0.0005);\n        } else {\n            core.acceleration = p.createVector(0, 0);\n        }\n\n        core.velocity.add(core.acceleration);\n        core.velocity.mult(environmentFriction);\n\n        core.position.add(core.velocity);\n        p.rebound(core);\n\n\n        // update balls\n        for (let i = 0; i < balls.length; i++) {\n            let thisBall = balls[i];\n            let parentBall;\n            if (i === 0) {\n                parentBall = core;\n            } else {\n                parentBall = balls[i - 1];\n            }\n\n            let toParent = p5.Vector.sub(parentBall.position, thisBall.position);\n            toParent.setMag(toParent.mag() - thisBall.followDistance);\n            if (currentMode === Modes.STATIC) {\n                thisBall.velocity.mult(environmentFriction);\n                thisBall.position.add(toParent);\n            } else {\n                // let goalPosition = p5.Vector.add(thisBall.position, toParent);\n                thisBall.acceleration = toParent.mult(tension);\n                thisBall.velocity.add(thisBall.acceleration);\n                thisBall.velocity.mult(1.0 - damping);\n                thisBall.position.add(thisBall.velocity);\n            }\n\n            p.rebound(thisBall);\n\n        }\n\n    };\n\n    p.windowResized = function () {\n        p.resize();\n    };\n\n    p.checkResize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        if (w !== p.width || h !== p.height) {\n            p.resize();\n        }\n    }\n\n    p.resize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.resizeCanvas(w, h);\n        console.log(\"did resize\");\n    }\n\n    p.mousePressed = function (event) {\n        core.forceIsBeingApplied = true;\n    };\n\n    p.mouseReleased = function (event) {\n        core.forceIsBeingApplied = false;\n    };\n\n    p.keyTyped = function () {\n    };\n\n    p.setBallCount = function (newLength) {\n        if (balls.length > newLength) {\n            p.removeBalls(balls.length - newLength);\n        } else if (balls.length < newLength) {\n            p.addBalls(newLength - balls.length);\n        }\n    }\n\n    p.addBalls = function (count) {\n        for (let i = 0; i < count; i++) {\n            balls.push({\n                radius: defaultBallRadius,\n                position: balls[balls.length-1].position.copy(),\n                velocity: p.createVector(0, 0),\n                followDistance: defaultFollowDistance,\n                minColor: p.color(0, 0, 100),\n                maxColor: p.color(0, 100, 100)\n            });\n        }\n    };\n\n    p.removeBalls = function (count) {\n        for (let i = 0; i < count && balls.length > 1; i++) {\n            balls.pop();\n        }\n    };\n\n    p.modifyFollowDistance = function (delta) {\n        if (defaultFollowDistance + delta >= 0) {\n            balls.forEach(ball => {\n                ball.followDistance += delta;\n            });\n            defaultFollowDistance += delta;\n        }\n    };\n\n    p.setFollowDistance = function (newDist) {\n        p.modifyFollowDistance(newDist - defaultFollowDistance);\n    };\n\n    p.rebound = function (ball) {\n        if (ball.position.x > p.width - ball.radius) {\n            ball.position.x = p.width - ball.radius;\n            ball.velocity.x *= -1;\n        }\n        if (ball.position.x < ball.radius) {\n            ball.position.x = ball.radius;\n            ball.velocity.x *= -1;\n        }\n        if (ball.position.y > p.height - ball.radius) {\n            ball.position.y = p.height - ball.radius;\n            ball.velocity.y *= -1;\n        }\n        if (ball.position.y < ball.radius) {\n            ball.position.y = ball.radius;\n            ball.velocity.y *= -1;\n        }\n    };\n\n    p.drawArrow = function (fromVector, toVector, arrowColor) {\n        p.push();\n        p.stroke(arrowColor);\n        p.strokeWeight(2);\n        p.fill(arrowColor);\n        p.translate(fromVector.x, fromVector.y);\n        p.line(0, 0, toVector.x, toVector.y);\n        p.rotate(toVector.heading());\n        let arrowSize = 3;\n        p.translate(toVector.mag() - arrowSize, 0);\n        p.triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n        p.pop();\n    };\n\n    p.reRange = function (num, in_min, in_max, out_min, out_max) {\n        return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    };\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        if (didSetup) {\n            if (typeof newProps.mode !== \"undefined\") {\n                currentMode = newProps.mode;\n            }\n            if (typeof newProps.ballCount !== \"undefined\" && balls.length !== newProps.ballCount) {\n                p.setBallCount(newProps.ballCount);\n            }\n            if (typeof newProps.linkLength !== \"undefined\" && defaultFollowDistance !== newProps.linkLength) {\n                p.setFollowDistance(newProps.linkLength);\n            }\n            if (typeof newProps.linkTension !== \"undefined\" && tension !== newProps.linkTension) {\n                tension = newProps.linkTension;\n            }\n            if (typeof newProps.linkDamping !== \"undefined\" && damping !== newProps.linkDamping) {\n                damping = newProps.linkDamping;\n            }\n        }\n        if (typeof newProps.onFrameRateChange !== \"undefined\") {\n            frameRateCallback = newProps.onFrameRateChange;\n        }\n        if (typeof newProps.onCoreSpeedChange !== \"undefined\") {\n            coreSpeedCallback = newProps.onCoreSpeedChange;\n        }\n    };\n\n};\n\nexport default chainball;","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass BallCountSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleBallCountChange = this.handleBallCountChange.bind(this);\n    }\n\n    handleBallCountChange(event, newValue) {\n        this.props.onBallCountChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={5}\n                    value={this.props.ballCount || 5}\n                    onChange={this.handleBallCountChange}\n                    min={5}\n                    max={500}\n                    step={5}\n                    aria-labelledby=\"ball-count-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"ball-count-slider\" gutterBottom>\n                    Ball Count\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default BallCountSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkDampingSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n    }\n\n    handleLinkDampingChange(event, newValue) {\n        this.props.onLinkDampingChange(newValue);\n    }\n\n    getValueText(value) {\n        return `${(value*100).toFixed(0)}%`;\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkDamping}\n                    onChange={this.handleLinkDampingChange}\n                    min={0.0}\n                    max={1.0}\n                    step={0.02}\n                    getAriaValueText={this.getValueText}\n                    valueLabelFormat={this.getValueText}\n                    aria-labelledby=\"link-damping-slider\"\n                    valueLabelDisplay=\"on\"\n                    marks={false}\n                />\n                <Typography id=\"link-damping-slider\" gutterBottom>\n                    Link Damping\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkDampingSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkLengthSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n    }\n\n    handleLinkLengthChange(event, newValue) {\n        this.props.onLinkLengthChange(newValue);\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkLength}\n                    onChange={this.handleLinkLengthChange}\n                    min={0}\n                    max={800}\n                    step={10}\n                    // getAriaValueText={() => `this.props.ballCount`}\n                    aria-labelledby=\"link-length-slider\"\n                    valueLabelDisplay=\"on\"\n                />\n                <Typography id=\"link-length-slider\" gutterBottom>\n                    Link Length\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkLengthSlider;\n","import React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\n\nclass LinkTensionSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n    }\n\n    handleLinkTensionChange(event, newValue) {\n        this.props.onLinkTensionChange(newValue);\n    }\n\n    getValueText(value) {\n        return `${(value*100).toFixed(0)}%`;\n    }\n\n    render() {\n        return (\n            <div>\n                <Slider\n                    defaultValue={50}\n                    value={this.props.linkTension}\n                    onChange={this.handleLinkTensionChange}\n                    min={0.0}\n                    max={1.0}\n                    step={0.02}\n                    getAriaValueText={this.getValueText}\n                    valueLabelFormat={this.getValueText}\n                    aria-labelledby=\"link-tension-slider\"\n                    valueLabelDisplay=\"on\"\n                    marks={false}\n                />\n                <Typography id=\"link-tension-slider\" gutterBottom>\n                    Link Tension\n                </Typography>\n            </div>\n        );\n    }\n}\n\nexport default LinkTensionSlider;\n","import React from 'react';\nimport { Radio, RadioGroup, FormControlLabel, FormControl, FormLabel } from '@material-ui/core';\n\nclass ModeRadioButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n    }\n\n    handleModeChange(event) {\n        this.props.onModeChange(event.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <FormControl>\n                    <FormLabel>Mode</FormLabel>\n                    <RadioGroup defaultValue=\"static\" aria-label=\"mode\" name=\"mode\" value={this.props.mode} onChange={this.handleModeChange}>\n                        <FormControlLabel value=\"static\" control={<Radio />} label=\"Static\" />\n                        <FormControlLabel value=\"dynamic\" control={<Radio />} label=\"Dynamic\" />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default ModeRadioButtons;\n","import React from 'react';\nimport { Grid, Paper, Drawer, Typography } from '@material-ui/core';\nimport \"containers/Sidebar.css\";\n\nimport BallCountSlider from \"sketches/chainball/panels/BallCountSlider\";\nimport LinkDampingSlider from \"sketches/chainball/panels/LinkDampingSlider\";\nimport LinkLengthSlider from \"sketches/chainball/panels/LinkLengthSlider\";\nimport LinkTensionSlider from \"sketches/chainball/panels/LinkTensionSlider\";\nimport ModeRadioButtons from \"sketches/chainball/panels/ModeRadioButtons\";\n\nclass ChainballSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Drawer\n                    className=\"SidebarDrawer\"\n                    variant=\"persistent\"\n                    open={this.props.isControlsPanelOpen}>\n                    <Grid\n                        className=\"SidebarGrid\"\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        wrap=\"nowrap\">\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperInformation\">\n                                <Typography \n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    FPS: {this.props.frameRate}\n                                </Typography>\n                                <Typography \n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    Core Speed: {this.props.coreSpeed}\n                                </Typography>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperRadioControl\">\n                                <ModeRadioButtons\n                                    mode={this.props.mode}\n                                    onModeChange={this.props.onModeChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <BallCountSlider\n                                    ballCount={this.props.ballCount}\n                                    onBallCountChange={this.props.onBallCountChange} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Paper elevation={2}\n                                className=\"PaperSliderControl\">\n                                <LinkLengthSlider\n                                    linkLength={this.props.linkLength}\n                                    onLinkLengthChange={this.props.onLinkLengthChange} />\n                            </Paper>\n                        </Grid>\n                        {this.props.mode === \"dynamic\" &&\n                            <Grid item xs={12}>\n                                <Paper elevation={2}\n                                    className=\"PaperSliderControl\">\n                                    <LinkTensionSlider\n                                        linkTension={this.props.linkTension}\n                                        onLinkTensionChange={this.props.onLinkTensionChange} />\n                                </Paper>\n                            </Grid>\n                        }{this.props.mode === \"dynamic\" &&\n                            <Grid item xs={12}>\n                                <Paper elevation={2}\n                                    className=\"PaperSliderControl\">\n                                    <LinkDampingSlider\n                                        linkDamping={this.props.linkDamping}\n                                        onLinkDampingChange={this.props.onLinkDampingChange} />\n                                </Paper>\n                            </Grid>\n                        }\n                    </Grid>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default ChainballSidebar;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5Chainball from \"sketches/chainball/p5_chainball\";\nimport ChainballSidebar from \"./ChainballSidebar\"\n\nclass ChainballApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ballCount: 5,\n            linkLength: 50,\n            linkTension: 0.1,\n            linkDamping: 0.4,\n            mode: \"static\",\n        }\n\n        this.handleModeChange = this.handleModeChange.bind(this);\n        this.handleBallCountChange = this.handleBallCountChange.bind(this);\n        this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n        this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n        this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n        this.handleCoreSpeedChange = this.handleCoreSpeedChange.bind(this);\n    }\n\n    handleModeChange(newValue) {\n        this.setState({\n            mode: newValue\n        });\n    }\n\n    handleBallCountChange(newValue) {\n        this.setState({\n            ballCount: newValue\n        });\n    }\n\n    handleLinkLengthChange(newValue) {\n        this.setState({\n            linkLength: newValue\n        });\n    }\n\n    handleLinkTensionChange(newValue) {\n        this.setState({\n            linkTension: newValue\n        });\n    }\n\n    handleLinkDampingChange(newValue) {\n        this.setState({\n            linkDamping: newValue\n        });\n    }\n\n    handleFrameRateChange(newFrameRateValue) {\n        this.setState({\n            frameRate: newFrameRateValue\n        });\n    }\n\n    handleCoreSpeedChange(newCoreSpeedValue) {\n        this.setState({\n            coreSpeed: newCoreSpeedValue\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs>\n                        <ChainballSidebar\n                            mode={this.state.mode}\n                            onModeChange={this.handleModeChange}\n                            ballCount={this.state.ballCount}\n                            onBallCountChange={this.handleBallCountChange}\n                            linkLength={this.state.linkLength}\n                            onLinkLengthChange={this.handleLinkLengthChange}\n                            linkTension={this.state.linkTension}\n                            onLinkTensionChange={this.handleLinkTensionChange}\n                            linkDamping={this.state.linkDamping}\n                            onLinkDampingChange={this.handleLinkDampingChange}\n                            \n                            frameRate={this.state.frameRate}\n                            coreSpeed={this.state.coreSpeed}\n                            \n                            isControlsPanelOpen={this.props.isControlsPanelOpen} />\n                    </Grid>\n                    <Grid container item xs={this.props.isControlsPanelOpen ? 9 : 12}>\n                        <SketchContainer\n                            sketch={p5Chainball}\n                            mode={this.state.mode}\n                            ballCount={this.state.ballCount}\n                            linkLength={this.state.linkLength}\n                            linkTension={this.state.linkTension}\n                            linkDamping={this.state.linkDamping}\n\n                            onFrameRateChange={this.handleFrameRateChange}\n                            onCoreSpeedChange={this.handleCoreSpeedChange} />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default ChainballApp;","let orbiter = (p) => {\n\n    let frameRates = [];\n    let displayFrameRate = 0;\n\n    let planetAngle = 0.0;\n    let moonAngle = 0.0;\n\n    let planetOrbitRadius = 100.0;\n    let moonOrbitRadius = 15.0;\n\n    let planetOrbitSpeed = 0.4\n    let moonOrbitSpeed = 4.5\n\n    let sunRadius = 25.0;\n    let planetRadius = 5.0;\n    let moonRadius = 2.5;\n\n    let sunLocation = p.createVector(0, 0);\n\n    let planetOrbitSpeedMod = 1.0;\n    let moonOrbitSpeedMod = 1.0;\n\n    let deltaTimeOffset = 0.05;\n\n    let isSunBeingDragged = false;\n    let sunLocationOffset = p.createVector(0, 0);\n\n    let frameRateCallback;\n    let planetSpeedCallback;\n    let moonSpeedCallback;\n\n    // let didSetup = false;\n\n    p.setup = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.createCanvas(w, h);\n\n        sunLocation = p.createVector(p.width / 2, p.height / 2);\n\n        p.colorMode(p.HSB);\n        p.angleMode(p.DEGREES);\n        // noCursor();\n\n        p.background(0);\n        p.fill(0);\n\n        // didSetup = true;\n    };\n\n    p.draw = function () {\n        p.checkResize();\n\n        if (isSunBeingDragged) {\n            sunLocation.x = p.mouseX + sunLocationOffset.x;\n            sunLocation.y = p.mouseY + sunLocationOffset.y;\n        }\n\n        p.rebound(sunLocation, sunRadius);\n\n        p.background(0);\n\n        planetOrbitSpeedMod = p.sq((sunLocation.x / p.width) * 6.0);\n        moonOrbitSpeedMod = p.sq((sunLocation.y / p.height) * 3.0);\n\n        // get some positions\n        let planetX = sunLocation.x + planetOrbitRadius * p.cos(planetAngle)\n        let planetY = sunLocation.y + planetOrbitRadius * p.sin(planetAngle)\n        let moonX = planetX + moonOrbitRadius * p.cos(moonAngle)\n        let moonY = planetY + moonOrbitRadius * p.sin(moonAngle)\n\n        // sun\n        p.fill(0, 0, 100)\n        p.circle(sunLocation.x, sunLocation.y, sunRadius * 2);\n        // planet\n        p.fill(0, 0, 100)\n        p.circle(planetX, planetY, planetRadius * 2);\n        // moon\n        p.fill(0, 0, 100)\n        p.circle(moonX, moonY, moonRadius * 2);\n        planetAngle += deltaTimeOffset * p.deltaTime * planetOrbitSpeedMod * planetOrbitSpeed;\n        moonAngle += deltaTimeOffset * p.deltaTime * moonOrbitSpeedMod * moonOrbitSpeed;\n        planetAngle = planetAngle % 360;\n        moonAngle = moonAngle % 360;\n\n        // calc framerate\n        if (p.frameCount % 10 === 0) {\n            frameRates.push(p.frameRate());\n            if (frameRates.length > 10) {\n                frameRates.shift();\n            }\n            displayFrameRate = frameRates.reduce((sum, num) => {\n                return sum + num;\n            }) / frameRates.length;\n        }\n\n        if (p.frameCount % 10 === 0) {\n            if (typeof frameRateCallback !== \"undefined\") {\n                frameRateCallback(displayFrameRate.toFixed(0));\n            }\n            if (typeof planetSpeedCallback !== \"undefined\") {\n                planetSpeedCallback((planetOrbitSpeedMod * planetOrbitSpeed).toFixed(2));\n            }\n            if (typeof moonSpeedCallback !== \"undefined\") {\n                moonSpeedCallback((moonOrbitSpeedMod * moonOrbitSpeed).toFixed(2));\n            }\n        }\n    };\n\n    p.windowResized = function () {\n        p.resize();\n    };\n\n    p.resize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        p.resizeCanvas(w, h);\n    }\n\n    p.checkResize = function () {\n        let w = p.select(\".SketchContainer\").width;// - p.select(\".Sidebar\").width;\n        let h = p.select(\".SketchContainer\").height;\n        if (w !== p.width || h !== p.height) {\n            p.resize();\n        }\n    }\n\n    p.mousePressed = function (event) {\n        if (p.isMouseOverCircle(sunLocation, sunRadius)) {\n            isSunBeingDragged = true;\n            sunLocationOffset.x = sunLocation.x - p.mouseX;\n            sunLocationOffset.y = sunLocation.y - p.mouseY;\n        }\n    };\n\n    p.mouseReleased = function (event) {\n        isSunBeingDragged = false;\n        if (isSunBeingDragged) {\n            sunLocation.x = p.mouseX + sunLocationOffset.x;\n            sunLocation.y = p.mouseY + sunLocationOffset.y;\n        }\n    };\n\n    p.rebound = function (location, radius) {\n        if (location.x > p.width - radius) {\n            location.x = p.width - radius;\n        }\n        if (location.x < radius) {\n            location.x = radius;\n        }\n        if (location.y > p.height - radius) {\n            location.y = p.height - radius;\n        }\n        if (location.y < radius) {\n            location.y = radius;\n        }\n    };\n\n    p.isMouseOverCircle = function (circleLoc, circleRadius) {\n        let dx = p.abs(circleLoc.x - p.mouseX);\n        let dy = p.abs(circleLoc.y - p.mouseY);\n        let distToCircleCenter = p.sqrt(dx * dx + dy * dy);\n        return distToCircleCenter <= circleRadius;\n    };\n\n    p.myCustomRedrawAccordingToNewPropsHandler = (newProps) => {\n        // if (didSetup) {\n        //     if (typeof newProps.mode !== \"undefined\") {\n        //         currentMode = newProps.mode;\n        //     }\n        // }\n        if (typeof newProps.onFrameRateChange !== \"undefined\") {\n            frameRateCallback = newProps.onFrameRateChange;\n        }\n        if (typeof newProps.onPlanetSpeedChange !== \"undefined\") {\n            planetSpeedCallback = newProps.onPlanetSpeedChange;\n        }\n        if (typeof newProps.onMoonSpeedChange !== \"undefined\") {\n            moonSpeedCallback = newProps.onMoonSpeedChange;\n        }\n    };\n}\n\nexport default orbiter;\n","import React from 'react';\nimport { Paper, Typography, Grid, Drawer } from '@material-ui/core';\nimport \"containers/Sidebar.css\"\n\nclass OrbiterSidebar extends React.Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <Drawer\n                    className=\"SidebarDrawer\"\n                    variant=\"persistent\"\n                    open={this.props.isControlsPanelOpen}>\n                    <Grid\n                        className=\"SidebarGrid\"\n                        container\n                        spacing={2}\n                        direction=\"column\"\n                        wrap=\"nowrap\">\n                        <Grid item xs>\n                            <Paper elevation={2}\n                                className=\"PaperRadioControl\">\n                                <Typography\n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    FPS: {this.props.frameRate}\n                                </Typography>\n                                <Typography\n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    Planet Speed: {this.props.planetSpeed}\n                                </Typography>\n                                <Typography\n                                    variant=\"body1\"\n                                    color=\"textSecondary\">\n                                    Moon Speed: {this.props.moonSpeed}\n                                </Typography>\n                            </Paper>\n                        </Grid>\n\n                        {/* <Grid item xs>\n                        <Paper elevation={2}\n                            className=\"PaperRadioControl\">\n                            <ModeRadioButtons\n                                mode={this.props.mode}\n                                onModeChange={this.props.onModeChange} />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs>\n                        <Paper elevation={2}\n                            className=\"PaperSliderControl\">\n                            <BallCountSlider\n                                ballCount={this.props.ballCount}\n                                onBallCountChange={this.props.onBallCountChange} />\n                        </Paper>\n                    </Grid> */}\n\n                    </Grid>\n                </Drawer>\n            </div>\n        );\n    }\n}\n\nexport default OrbiterSidebar;","import React from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport SketchContainer from 'containers/SketchContainer';\nimport p5Orbiter from \"sketches/orbiter/p5_orbiter\";\nimport OrbiterSidebar from './OrbiterSidebar';\n\nclass OrbiterApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // ballCount: 5,\n            // linkLength: 50,\n            // linkTension: 0.1,\n            // linkDamping: 0.4,\n            // mode: \"static\",\n            frameRate: 0\n        }\n\n        // this.handleModeChange = this.handleModeChange.bind(this);\n        // this.handleBallCountChange = this.handleBallCountChange.bind(this);\n        // this.handleLinkLengthChange = this.handleLinkLengthChange.bind(this);\n        // this.handleLinkTensionChange = this.handleLinkTensionChange.bind(this);\n        // this.handleLinkDampingChange = this.handleLinkDampingChange.bind(this);\n        this.handleFrameRateChange = this.handleFrameRateChange.bind(this);\n        this.handlePlanetSpeedChange = this.handlePlanetSpeedChange.bind(this);\n        this.handleMoonSpeedChange = this.handleMoonSpeedChange.bind(this);\n    }\n\n    // handleModeChange(newValue) {\n    //     this.setState({\n    //         mode: newValue\n    //     });\n    // }\n\n    // handleBallCountChange(newValue) {\n    //     this.setState({\n    //         ballCount: newValue\n    //     });\n    // }\n\n    // handleLinkLengthChange(newValue) {\n    //     this.setState({\n    //         linkLength: newValue\n    //     });\n    // }\n\n    // handleLinkTensionChange(newValue) {\n    //     this.setState({\n    //         linkTension: newValue\n    //     });\n    // }\n\n    // handleLinkDampingChange(newValue) {\n    //     this.setState({\n    //         linkDamping: newValue\n    //     });\n    // }\n\n    handleFrameRateChange(newFrameRateValue) {\n        this.setState({\n            frameRate: newFrameRateValue\n        });\n    }\n\n    handlePlanetSpeedChange(newPlanetSpeedValue) {\n        this.setState({\n            planetSpeed: newPlanetSpeedValue\n        });\n    }\n\n    handleMoonSpeedChange(newMoonSpeedValue) {\n        this.setState({\n            moonSpeed: newMoonSpeedValue\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Grid\n                    container\n                    spacing={0}\n                    direction='row'\n                    // justify='flex-start'\n                    alignItems='stretch'\n                    wrap='nowrap'>\n                    <Grid container item xs>\n                        <OrbiterSidebar\n                            // mode={this.state.mode}\n                            // onModeChange={this.handleModeChange}\n                            // ballCount={this.state.ballCount}\n                            // onBallCountChange={this.handleBallCountChange}\n                            // linkLength={this.state.linkLength}\n                            // onLinkLengthChange={this.handleLinkLengthChange}\n                            // linkTension={this.state.linkTension}\n                            // onLinkTensionChange={this.handleLinkTensionChange}\n                            // linkDamping={this.state.linkDamping}\n                            // onLinkDampingChange={this.handleLinkDampingChange}\n\n                            frameRate={this.state.frameRate} \n                            planetSpeed={this.state.planetSpeed} \n                            moonSpeed={this.state.moonSpeed} \n\n                            isControlsPanelOpen={this.props.isControlsPanelOpen}\n                            />\n                    </Grid>\n                    <Grid container item xs={this.props.isControlsPanelOpen ? 9 : 12}>\n                        <SketchContainer\n                            sketch={p5Orbiter}\n\n                            onFrameRateChange={this.handleFrameRateChange}\n                            onPlanetSpeedChange={this.handlePlanetSpeedChange}\n                            onMoonSpeedChange={this.handleMoonSpeedChange}\n                            />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default OrbiterApp;","import ChainballApp from \"sketches/chainball/ChainballApp\"\nimport OrbiterApp from \"sketches/orbiter/OrbiterApp\"\n\nconst appMap = new Map([\n    [\"chainball\", {\n        name: \"chainball\",\n        displayName: \"Chainball\",\n        component: ChainballApp,\n        version: \"1.0\",\n        description: \"2D kinematic demonstration\"\n    }],\n    [\"orbiter\", {\n        name: \"orbiter\",\n        displayName: \"Orbiter\",\n        component: OrbiterApp,\n        version: \"0.2a\",\n        description: \"Orbiter simulation\"\n    }]\n]);\n\nexport default appMap;","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport MenuBar from './MenuBar';\nimport './Vixuals.css';\nimport appMap from \"./AppMap\";\nimport { Redirect, withRouter } from 'react-router-dom';\n\nconst appName = \"Vixuals\"\nconst appVersion = \"0.4a\"\n\nconst defaultApp = \"chainball\"\n\nclass Vixuals extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isControlsPanelOpen: true\n        };\n\n        this.handleSelectedAppChange = this.handleSelectedAppChange.bind(this);\n        this.handleControlsPanelToggle = this.handleControlsPanelToggle.bind(this);\n    }\n\n    handleSelectedAppChange(newValue) {\n        return event => {\n            this.setState({\n                redirectLocation: newValue,\n                shouldRedirect: true\n            });\n        }\n        // return <Redirect to={`/${newValue}`}/>\n    }\n\n    handleControlsPanelToggle(newValue) {\n        return event => {\n            this.setState({\n                isControlsPanelOpen: newValue\n            });\n        }\n    }\n\n    render() {\n        if (this.state.shouldRedirect) {\n            this.setState({ shouldRedirect: false })\n            return <Redirect to={`/${this.state.redirectLocation}`} />\n        }\n        if (this.props.match.params.app === this.props.defaultParam) {\n            return <Redirect to={`/${defaultApp}`} />\n        }\n        let App = appMap.get(this.props.match.params.app).component;\n        return (\n            <div className=\"Vixuals\">\n                {/* <Route \n                path=\"/:app\"> */}\n                <Grid\n                    container\n                    spacing={0}\n                    direction=\"column\"\n                    wrap='nowrap'>\n                    <Grid item>\n                        <MenuBar\n                            appName={appName}\n                            appVersion={appVersion}\n                            selectedApp={appMap.get(this.props.match.params.app)}\n                            setSelectedApp={this.handleSelectedAppChange}\n                            apps={appMap}\n\n                            onControlsPanelToggle={this.handleControlsPanelToggle}\n                            isControlsPanelOpen={this.state.isControlsPanelOpen} />\n                    </Grid>\n                    <Grid item>\n                        <App\n                            onControlsPanelToggle={this.handleControlsPanelToggle}\n                            isControlsPanelOpen={this.state.isControlsPanelOpen} />\n                    </Grid>\n                </Grid>\n                {/* </Route>\n                <Route path=\"/\">\n                    <Redirect to={`/${defaultApp}`} />\n                </Route> */}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Vixuals);","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Vixuals from 'Vixuals'\n\nconst DEFAULT_PARAM = \"__DEFAULT_APP__\"\n\nclass VixualsRouter extends React.Component {\n\n    render() {\n        return (\n            <div className=\"VixualsRouter\">\n                <HashRouter>\n                    <Switch>\n                        <Route path=\"/:app\">\n                            <Vixuals\n                                defaultParam={DEFAULT_PARAM}/>\n                        </Route>\n                        <Route path=\"/\">\n                            <Redirect to={`/${DEFAULT_PARAM}`}/>\n                        </Route>\n                    </Switch>\n                </HashRouter>\n            </div>\n        );\n    }\n}\n\nexport default VixualsRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Vixuals from './Vixuals';\nimport VixualsRouter from './VixualsRouter';\nimport './index.css';\n\nReactDOM.render(<VixualsRouter/>, document.getElementById('root'));"],"sourceRoot":""}